{
  "openapi": "3.0.1",
  "info": {
    "title": "ConnectorApi",
    "version": "v1"
  },
  "paths": {
    "/api/connector/v1/accountNotes/getAll": {
      "post": {
        "tags": [
          "Account notes"
        ],
        "description": "Returns all account notes of an account, optionally filtered by activity state, account identifiers, specific account note identifiers or other filter parameters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "accountNotes_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountNoteFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accountNotes/add": {
      "post": {
        "tags": [
          "Account notes"
        ],
        "description": "Adds account notes to an account of the enterprise chain. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "accountNotes_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAccountNoteAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteAdditionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accountNotes/update": {
      "post": {
        "tags": [
          "Account notes"
        ],
        "description": "Updates information about the specified account notes.",
        "operationId": "accountNotes_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAccountNoteUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteUpdateResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accountNotes/delete": {
      "post": {
        "tags": [
          "Account notes"
        ],
        "description": "Deletes specified account notes.",
        "operationId": "accountNotes_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAccountNoteDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accountingCategories/getAll": {
      "post": {
        "tags": [
          "Accounting categories"
        ],
        "description": "Returns all accounting categories of the enterprise associated with the connector integration. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "accountingCategories_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingCategoryFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingCategoryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accountingItems/update": {
      "post": {
        "tags": [
          "Accounting items"
        ],
        "description": "Updates specified accounting items. You can use this operation to assign an accounting item to a different account or bill. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "accountingItems_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAccountingItemsUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingItemResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accountingItems/getAll": {
      "post": {
        "tags": [
          "Accounting items"
        ],
        "description": "Use payments/getall or orderItems/getall.",
        "operationId": "accountingItems_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingItemParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingItemResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accounts/update": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Updates one or more existing accounts in the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "accounts_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAccountUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/accounts/merge": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Merges two or more accounts of the same account type together. The given source accounts will be merged into the given target account and the merged account will keep the target account ID.",
        "operationId": "accounts_merge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAccountMergeParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/addresses/getAll": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "description": "Returns all addresses associated with the specified accounts within the enterprise. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "addresses_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/addresses/add": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "description": "Adds one or more new addresses to the system and assigns them to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "addresses_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAddressAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/addresses/update": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "description": "Updates one or more existing addresses in the system, assigned to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "addresses_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAddressUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/addresses/delete": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "description": "Deletes one or more addresses in the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "addresses_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/ageCategories/getAll": {
      "post": {
        "tags": [
          "Age categories"
        ],
        "description": "Returns all age categories filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service). \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "ageCategories_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeCategoryParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeCategoryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/availabilityAdjustments/getAll": {
      "post": {
        "tags": [
          "Availability adjuments"
        ],
        "description": "Returns all availability adjustments.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "availabilityAdjustments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityAdjustmentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityAdjustmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/availabilityBlocks/delete": {
      "post": {
        "tags": [
          "Availability blocks"
        ],
        "description": "Delete availability blocks. Note that an availability block containing active reservations (reservations which are not `Canceled`) cannot be deleted.",
        "operationId": "availabilityBlocks_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAvailabilityBlockDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/availabilityBlocks/getAll": {
      "post": {
        "tags": [
          "Availability blocks"
        ],
        "description": "> This feature is being actively developed, features and behavior of this operation may change at short notice.\nReturns all availability blocks filtered by services, unique identifiers and other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "availabilityBlocks_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityBlockParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityBlockResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/availabilityBlocks/add": {
      "post": {
        "tags": [
          "Availability blocks"
        ],
        "description": "> This feature is being actively developed, features and behavior of this operation might change on short notice.\nAdds availability blocks which are used to group related [Availability updates](https://mews-systems.gitbook.io/connector-api/operations/#availability-update). This makes limiting public availability easier and more organized. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "availabilityBlocks_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAvailabilityBlockAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityBlockAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/availabilityBlocks/update": {
      "post": {
        "tags": [
          "Availability blocks"
        ],
        "description": "> This feature is being actively developed, features and behavior of this operation might change on short notice.\nUpdates information about the specified [Availability block](https://mews-systems.gitbook.io/connector-api/operations/#availability-block).",
        "operationId": "availabilityBlocks_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleAvailabilityBlockUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityBlockAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/getAll": {
      "post": {
        "tags": [
          "Bills"
        ],
        "description": "Returns all bills, optionally filtered by customers, identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "bills_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/getAllByIds": {
      "post": {
        "tags": [
          "Bills"
        ],
        "operationId": "bills_getAllByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/getAllByCustomers": {
      "post": {
        "tags": [
          "Bills"
        ],
        "operationId": "bills_getAllByCustomers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/getAllClosed": {
      "post": {
        "tags": [
          "Bills"
        ],
        "operationId": "bills_getAllClosed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/getPdf": {
      "post": {
        "tags": [
          "Bills"
        ],
        "description": "Creates a PDF version of the specified bill. In case it's not possible to return PDF immediately, you must retry the call later while providing the unique event identifier that is returned from the first invocation.",
        "operationId": "bills_getPdf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillPdfParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/add": {
      "post": {
        "tags": [
          "Bills"
        ],
        "description": "Creates new empty bill assigned to specified account. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "bills_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleBillAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/delete": {
      "post": {
        "tags": [
          "Bills"
        ],
        "description": "Removes selected bills. Bill must be empty, otherwise it's not possible to delete it. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "bills_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/bills/close": {
      "post": {
        "tags": [
          "Bills"
        ],
        "description": "Closes a bill so no further modification to it is possible. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "bills_close",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCloseParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/businessSegments/getAll": {
      "post": {
        "tags": [
          "Business segments"
        ],
        "description": "Returns all business segments of the default service provided by the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "businessSegments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessSegmentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessSegmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/cancellationPolicies/getAll": {
      "post": {
        "tags": [
          "Cancellation policies"
        ],
        "description": "> ### Restricted!\n> This operation is currently in beta-test and as such it is subject to change.\nReturns all cancellation policies, filtered by services, rate groups and other filters. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "cancellationPolicies_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancellationPolicyFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancellationPolicyResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/cashierTransactions/getAll": {
      "post": {
        "tags": [
          "Cashier transactions"
        ],
        "description": "Returns all cashier transactions created within the specified interval.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "cashierTransactions_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashierTransactionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashierTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/cashiers/getAll": {
      "post": {
        "tags": [
          "Cashiers"
        ],
        "description": "Returns all cashiers in the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "cashiers_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashierParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashierResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/commands/getAllByIds": {
      "post": {
        "tags": [
          "Commands"
        ],
        "description": "Returns all commands by their identifiers.",
        "operationId": "commands_getAllByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceCommandFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/commands/getAllActive": {
      "post": {
        "tags": [
          "Commands"
        ],
        "description": "Returns all commands the are still active from the client application point of view. That means commands that are in either `Pending` or `Received` state.",
        "operationId": "commands_getAllActive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllActiveCommandsParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/commands/addPrinter": {
      "post": {
        "tags": [
          "Commands"
        ],
        "description": "Adds a new printer command representing printing of the specified document on a printer. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "commands_addPrinter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrinterCommandParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCommandAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/commands/addKeyCutter": {
      "post": {
        "tags": [
          "Commands"
        ],
        "description": "Adds a new key cutter command representing cutting of a key for the specified reservation. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "commands_addKeyCutter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyCutterCommandParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCommandAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/commands/addPaymentTerminal": {
      "post": {
        "tags": [
          "Commands"
        ],
        "description": "> ### Restricted!\n> This operation is part of a custom workflow for Mews partners such as POS systems to access Mews Payment Terminals.\n> See [Mews Payment Terminals](https://mews-systems.gitbook.io/connector-api/use-cases/mews-terminals/).\nAdds a new Mews Payment Terminal command for taking a customer payment.\nThe operation instructs a specified terminal device to take a payment from a specified customer for a specified amount.",
        "operationId": "commands_addPaymentTerminal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTerminalCommandParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCommandAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/commands/update": {
      "post": {
        "tags": [
          "Commands"
        ],
        "description": "Updates state of a command.",
        "operationId": "commands_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceCommandUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companies/add": {
      "post": {
        "tags": [
          "Companies"
        ],
        "description": "Adds a new company. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "companies_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companies/update": {
      "post": {
        "tags": [
          "Companies"
        ],
        "description": "Updates information of the company. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "companies_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companies/getAll": {
      "post": {
        "tags": [
          "Companies"
        ],
        "description": "Returns all company profiles of the enterprise, possibly filtered by identifiers, names or other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "companies_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companies/delete": {
      "post": {
        "tags": [
          "Companies"
        ],
        "description": "Deletes specified companies.",
        "operationId": "companies_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCompanyDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companies/getAllByName": {
      "post": {
        "tags": [
          "Companies"
        ],
        "operationId": "companies_getAllByName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyNameParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companionships/getAll": {
      "post": {
        "tags": [
          "Companionships"
        ],
        "description": "Returns all companionships based on customers, reservations or reservation groups. One of them must be specified in the request.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "companionships_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanionshipFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanionshipResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companyContracts/getAll": {
      "post": {
        "tags": [
          "Company contracts"
        ],
        "description": "Returns all contracts between the enterprise and other companies.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "companyContracts_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyContractFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companyContracts/add": {
      "post": {
        "tags": [
          "Company contracts"
        ],
        "description": "Adds one or more company contracts.",
        "operationId": "companyContracts_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCompanyContractAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companyContracts/update": {
      "post": {
        "tags": [
          "Company contracts"
        ],
        "description": "Updates one or more company contracts.",
        "operationId": "companyContracts_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCompanyContractUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/companyContracts/delete": {
      "post": {
        "tags": [
          "Company contracts"
        ],
        "description": "Deletes one or more company contracts.",
        "operationId": "companyContracts_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCompanyContractDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/configuration/get": {
      "post": {
        "tags": [
          "Configurations"
        ],
        "description": "Returns the enterprise configuration. For single-enterprise Access Tokens, this is the enterprise associated with the token. For [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), use the `EnterpriseId` parameter to specify which enterprise you want the configuration for. In the case of service scoped integrations, the operation returns the configuration associated with both the enterprise and the bookable service linked to the token.",
        "operationId": "configuration_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://api.mews-demo.com/"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        },
        "summary": "Get Configuration "
      },
      "x-zuplo-path": {
        "pathMode": "open-api"
      }
    },
    "/api/connector/v1/counters/getAll": {
      "post": {
        "tags": [
          "Counters"
        ],
        "description": "Returns all counters of an enterprise associated with the connector integration.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "counters_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CounterFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CounterResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/countries/getAll": {
      "post": {
        "tags": [
          "Countries"
        ],
        "description": "Returns all countries supported by the API.",
        "operationId": "countries_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/creditCards/getAll": {
      "post": {
        "tags": [
          "Credit cards"
        ],
        "description": "Returns all credit cards, possibly filtered by identifiers, [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "creditCards_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/creditCards/getAllByIds": {
      "post": {
        "tags": [
          "Credit cards"
        ],
        "operationId": "creditCards_getAllByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCreditCardParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/creditCards/getAllByCustomers": {
      "post": {
        "tags": [
          "Credit cards"
        ],
        "operationId": "creditCards_getAllByCustomers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/creditCards/addTokenized": {
      "post": {
        "tags": [
          "Credit cards"
        ],
        "description": "Adds a new tokenized credit card to the specified customer. To be able to use this operation special permission has to be granted during certification.",
        "operationId": "creditCards_addTokenized",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedCreditCardParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCreditCardResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/creditCards/charge": {
      "post": {
        "tags": [
          "Credit cards"
        ],
        "description": "Creates payment for specified customer credit card and charges the credit card via a gateway. Note that the kind of the card has to be `Gateway`.",
        "operationId": "creditCards_charge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCreditCardParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCreditCardResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/cultures/getAll": {
      "post": {
        "tags": [
          "Cultures"
        ],
        "operationId": "cultures_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CultureResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/currencies/getAll": {
      "post": {
        "tags": [
          "Currencies"
        ],
        "description": "Returns all currencies supported by the API.",
        "operationId": "currencies_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/getAll": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Returns all customers filtered by identifiers, emails, names and other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "customers_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/getAllByIds": {
      "post": {
        "tags": [
          "Customers"
        ],
        "operationId": "customers_getAllByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/getAllByEmails": {
      "post": {
        "tags": [
          "Customers"
        ],
        "operationId": "customers_getAllByEmails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerEmailParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/search": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Searches for customers that are active at the moment in the enterprise (e.g. companions of checked-in reservations or paymasters).",
        "operationId": "customers_search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/getAllByName": {
      "post": {
        "tags": [
          "Customers"
        ],
        "operationId": "customers_getAllByName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerNameParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/getOpenItems": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Use payments/getAll and orderItems/getAll",
        "operationId": "customers_getOpenItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerItemParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerItemResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/add": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Adds a new customer to the system and returns details of the added customer. If a customer with the specified email already exists, and `OverwriteExisting` is set to `true`, then the existing customer profile information is overwritten and the existing customer data returned. If `OverwriteExisting` is set to `false`, an error response is returned. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "customers_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/update": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Updates personal information of a customer. Note that if any of the fields is left blank, it won't clear the field in Mews. The field will be left intact. In case of email update, the email will change in Mews only if there is no other customer profile in the hotel with such email. Otherwise an error response is returned. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "customers_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/merge": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Use accounts/merge instead.",
        "operationId": "customers_merge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMergeParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/addFile": {
      "post": {
        "tags": [
          "Customers"
        ],
        "description": "Attaches the specified file to the customer profile. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "customers_addFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerFileParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAccountFileResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/departments/getAll": {
      "post": {
        "tags": [
          "Departments"
        ],
        "description": "Returns all departments of an enterprise associated with the connector integration.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "departments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/devices/getAll": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Returns all devices in the enterprise.",
        "operationId": "devices_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/enterprises/getAll": {
      "post": {
        "tags": [
          "Enterprises"
        ],
        "description": "Returns all enterprises within scope of the `Access Token`, optionally filtered by enterprise identifiers and external identifiers. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "enterprises_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/exchangeRates/getAll": {
      "post": {
        "tags": [
          "Exchange rates"
        ],
        "description": "Returns all available exchange rates among currencies of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise).",
        "operationId": "exchangeRates_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyAcceptanceFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/exports/add": {
      "post": {
        "tags": [
          "Exports"
        ],
        "description": "Create a pending export. Export all entities of the specified `EntityType` within the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/) but doesn't have filtering by `EnterpriseIds` or `ChainIds`, so will return entities from all enterprises within the scope of the portfolio.\nIf there is already an export with status `Pending` or `Processing` for the specified entity type, the request for a new export will be rejected. Successful exports remain available for download until the expiration date specified in `ExpiresUtc`.",
        "operationId": "exports_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/exports/getAll": {
      "post": {
        "tags": [
          "Exports"
        ],
        "description": "Get exports for the given `ExportIds`. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "exports_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/images/getUrls": {
      "post": {
        "tags": [
          "InternalsConnectorApi"
        ],
        "description": "Returns URLs of the specified images.",
        "operationId": "images_getUrls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageUrlParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUrlResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/languages/getAll": {
      "post": {
        "tags": [
          "Languages"
        ],
        "description": "Returns all languages supported by the API.",
        "operationId": "languages_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/languages/getTexts": {
      "post": {
        "tags": [
          "Languages"
        ],
        "description": "Returns translations of texts in the specified languages.",
        "operationId": "languages_getTexts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageTextParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageTextResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyMemberships/getAll": {
      "post": {
        "tags": [
          "Loyalty memberships"
        ],
        "description": "Returns all loyalty memberships of the enterprise (in the given activity states), optionally filtered by specific loyalty membership identifiers or other filter parameters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyMemberships_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyMembershipFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembershipResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyMemberships/add": {
      "post": {
        "tags": [
          "Loyalty memberships"
        ],
        "description": "Adds loyalty memberships to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyMemberships_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleLoyaltyMembershipAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembershipResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyMemberships/update": {
      "post": {
        "tags": [
          "Loyalty memberships"
        ],
        "description": "Updates information about the specified loyalty memberships. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyMemberships_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleLoyaltyMembershipUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyMembershipResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyMemberships/delete": {
      "post": {
        "tags": [
          "Loyalty memberships"
        ],
        "description": "Deletes loyalty memberships.",
        "operationId": "loyaltyMemberships_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyMembershipDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyPrograms/getAll": {
      "post": {
        "tags": [
          "Loyalty programs"
        ],
        "description": "Returns all loyalty programs of the enterprise (in the given activity state), optionally filtered by specific loyalty program identifiers or other filter parameters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyPrograms_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyProgramFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyProgramResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyPrograms/add": {
      "post": {
        "tags": [
          "Loyalty programs"
        ],
        "description": "Adds loyalty programs to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyPrograms_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleLoyaltyProgramAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyProgramResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyPrograms/update": {
      "post": {
        "tags": [
          "Loyalty programs"
        ],
        "description": "Updates information about the specified loyalty programs. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyPrograms_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleLoyaltyProgramUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyProgramResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyPrograms/delete": {
      "post": {
        "tags": [
          "Loyalty programs"
        ],
        "description": "Deletes loyalty programs. Note that a loyalty program containing active memberships cannot be deleted.",
        "operationId": "loyaltyPrograms_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyProgramDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyTiers/getAll": {
      "post": {
        "tags": [
          "Loyalty tiers"
        ],
        "description": "Returns all loyalty tiers of the chain (in the given activity state), filtered by loyalty program identifiers and optionally filtered by specific loyalty tier identifiers or other filter parameters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyTiers_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyTierFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTierResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyTiers/add": {
      "post": {
        "tags": [
          "Loyalty tiers"
        ],
        "description": "Adds loyalty tiers to a loyalty program of the enterprise chain. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "loyaltyTiers_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleLoyaltyTierAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTierResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyTiers/update": {
      "post": {
        "tags": [
          "Loyalty tiers"
        ],
        "description": "Updates information about the specified loyalty tiers.",
        "operationId": "loyaltyTiers_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleLoyaltyTierUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyTierResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/loyaltyTiers/delete": {
      "post": {
        "tags": [
          "Loyalty tiers"
        ],
        "description": "Deletes loyalty tiers.",
        "operationId": "loyaltyTiers_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyTierDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/messageThreads/getAll": {
      "post": {
        "tags": [
          "Message threads"
        ],
        "description": "Get all message threads that you have created, filtered by time interval and/or specific message thread IDs. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "messageThreads_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageThreadFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageThreadResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/messageThreads/add": {
      "post": {
        "tags": [
          "Message threads"
        ],
        "description": "Creates a new [Message thread](https://mews-systems.gitbook.io/connector-api/operations/#message-thread) on behalf of the specified customer, i.e. the sender of the original message in the message thread.",
        "operationId": "messageThreads_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageThreadAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageThreadResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/messages/getAll": {
      "post": {
        "tags": [
          "Messages"
        ],
        "description": "Get all messages belonging to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread). Messages can only be returned for message threads you have created. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "messages_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/messages/add": {
      "post": {
        "tags": [
          "Messages"
        ],
        "description": "Add the specified messages to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread). You can only add messages to message threads that you have created.",
        "operationId": "messages_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleMessageAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddedMessageResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/orderItems/getAll": {
      "post": {
        "tags": [
          "Order items"
        ],
        "description": "Returns all order items. At least one of the `OrderItemIds`, `ServiceOrderIds`, `ServiceIds` `BillIds`, `CreatedUtc`, `UpdatedUtc`, `ChargedUtc`, `ClosedUtc` filters must be specified in the request. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "orderItems_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/outletBills/add": {
      "post": {
        "tags": [
          "Outlet bills"
        ],
        "description": "Adds new outlet bills with their items.",
        "operationId": "outletBills_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOutletBillsParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddOutletBillsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/outletItems/getAll": {
      "post": {
        "tags": [
          "Outlet items"
        ],
        "description": "Returns all outlet items of the enterprise that were consumed (posted) or will be consumed within the specified interval. If the `Currency` is specified, costs of the items are converted to that currency.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "outletItems_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutletItemsFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutletItemResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/outlets/getAll": {
      "post": {
        "tags": [
          "Outlets"
        ],
        "description": "Returns all outlets of an enterprise associated with the connector integration.",
        "operationId": "outlets_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutletFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutletResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/paymentRequests/getAll": {
      "post": {
        "tags": [
          "Payment requests"
        ],
        "description": "Get all payment requests belonging to the specified customer accounts. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "paymentRequests_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequestFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRequestResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/paymentRequests/add": {
      "post": {
        "tags": [
          "Payment requests"
        ],
        "description": "Creates a payment request to the specified [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "paymentRequests_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiplePaymentRequestAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRequestResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/paymentRequests/cancel": {
      "post": {
        "tags": [
          "Payment requests"
        ],
        "description": "Cancels specified payment requests. Only payment requests which are in `Pending` state can be canceled.",
        "operationId": "paymentRequests_cancel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiplePaymentRequestCancelParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRequestResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/payments/getAll": {
      "post": {
        "tags": [
          "Payments"
        ],
        "description": "Returns all payments in the system, filtered by various parameters. At least one filter parameter must be specified. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "payments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/payments/refund": {
      "post": {
        "tags": [
          "Payments"
        ],
        "description": "Refunds a specified payment. Note only credit card or alternative payments can be refunded. The refund is itself a payment, so to get more information about the refund, use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/#get-all-payments) with the identifier from `RefundId`. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "payments_refund",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRefundParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRefundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/payments/addCreditCard": {
      "post": {
        "tags": [
          "Payments"
        ],
        "description": "Adds a new credit card payment to a bill of the specified customer. Note that the payment is added to open bill of the customer, either to the specified one or the default one. This operation only serves to record a credit card payment that has already been taken outside of Mews or Mews' payment terminal, and does not actually charge the customer's credit card. \nThe bill can then be closed manually by a Mews user, or automatically via API with the [Close bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#close-bill) operation.",
        "operationId": "payments_addCreditCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardPaymentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCreditCardResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/payments/addExternal": {
      "post": {
        "tags": [
          "Payments"
        ],
        "description": "Adds a new external payment to a bill of the specified customer. An external payment represents a payment that is tracked outside of the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "payments_addExternal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalPaymentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddExternalPaymentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/payments/addAlternative": {
      "post": {
        "tags": [
          "Payments"
        ],
        "description": "Adds a new alternative payment to a specified customer.\n**Pre-requisites:** The property must have the relevant type of alternative payment method enabled in their Mews subscriptions in order to accept such payments in their Mews environment. Please ask the property to confirm.",
        "operationId": "payments_addAlternative",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativePaymentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativePaymentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/preauthorizations/getAllByCustomers": {
      "post": {
        "tags": [
          "Preauthorizations"
        ],
        "description": "Returns all preauthorizations of specified customers.",
        "operationId": "preauthorizations_getAllByCustomers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreauthorizationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/productCategories/getAll": {
      "post": {
        "tags": [
          "Product categories"
        ],
        "description": "Returns all categories of products. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "productCategories_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/products/getPricing": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "products_getPricing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPricingFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPricingResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/products/getAll": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Returns all products offered together with the specified services. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "products_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/products/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Deletes specified products. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "products_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/rateGroups/getAll": {
      "post": {
        "tags": [
          "Rate groups"
        ],
        "description": "Returns all rate groups, filtered by unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "rateGroups_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateGroupFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateGroupResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/rates/getAll": {
      "post": {
        "tags": [
          "Rates"
        ],
        "description": "Returns all rates (pricing setups) and rate groups (condition settings) of the default service provided by the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "rates_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/rates/add": {
      "post": {
        "tags": [
          "Rates"
        ],
        "description": "Adds rates to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/). Rate type of `AvailabilityBlock` cannot be created via this operation.",
        "operationId": "rates_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateAddResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/rates/getPricing": {
      "post": {
        "tags": [
          "Rates"
        ],
        "description": "Returns prices for a given rate for a specified time interval. Prices will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of \"Day\"). UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), e.g. 00:00 converted to UTC for a time unit of \"Day\". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.\nThe price in the response is dependent on the enterprise's [pricing](https://mews-systems.gitbook.io/connector-api/operations/configuration/#pricing) setting. If the enterprise is set to a Gross pricing environment, then the price returned is the gross price (inclusive of tax). If the enterprise is set to a Net pricing environment, the price returned is the net price (excluding tax). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "rates_getPricing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatePricingParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatePricing"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/rates/updatePrice": {
      "post": {
        "tags": [
          "Rates"
        ],
        "description": "Updates the prices for a given rate. You can make multiple price updates with one API call, and for each one specify the time interval for which the update applies, the price value and the applicable [resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category). The price will be updated for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. The price is per time unit, e.g. per day or per month. If the resource category `CategoryId` is not specified, the updated price will apply to the base price for all resource categories.\nNote that prices are defined daily, so when the server receives the UTC interval, it first converts it to the enterprise timezone and updates the price on all dates that the interval intersects. Only root rates can be updated (the rates that have no base rate, that have `BaseRateId` set to `null`). It is not permitted to update historical prices older than specified by `EditableHistoryInterval`. Future prices may be updated up to 5 years in the future. The __maximum size of time interval__ is 100 time units or 2 years, whichever is the shorter amount of time.",
        "operationId": "rates_updatePrice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatePriceUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservationGroups/getAll": {
      "post": {
        "tags": [
          "Reservation groups"
        ],
        "description": "Returns all reservation groups, filtered by unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservationGroups_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationGroupFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationGroupResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/serviceOrders/reservations/getAll": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Use the equivalent endpoint reservations/getAll/2023-06-06",
        "operationId": "serviceOrders_reservations_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationServiceOrderFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationServiceOrderResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/getAll/2023-06-06": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Returns all reservations within scope of the Access Token, filtered according to the specified parameters. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property).\n",
        "operationId": "reservations_getAll_2023-06-06",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationServiceOrderFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationServiceOrderResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/getAll": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Use reservations/getAll/2023-06-06.",
        "operationId": "reservations_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/getAllByIds": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "operationId": "reservations_getAllByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleReservationParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/getAllByCustomers": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "operationId": "reservations_getAllByCustomers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationMultipleCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/getAllByNumbers": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "operationId": "reservations_getAllByNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationConfirmationNumberParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/price": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Returns prices of reservations with the specified parameters. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservations_price",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationDataParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationPricingResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/add": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Adds the specified reservations as a single group. If `GroupId` is specified, adds the reservations to an already existing group. Note that all reservations linked to an availability block must belong to the same reservation group.",
        "operationId": "reservations_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationAdditionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationAdditionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/update": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Updates information about the specified reservations. Note that if any of the fields are sent as `null`, it won't clear the field in Mews. If the `Value` within the object is sent as `null`, the field will be cleared in Mews. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservations_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleReservationUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/confirm": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Marks all specified reservations as `Confirmed`. Succeeds only if all confirmation conditions are met (the reservations have the `Optional` state).",
        "operationId": "reservations_confirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmReservationParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/start": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Marks a reservation as `Started` (= checked in). Succeeds only if all starting conditions are met (the reservation has the `Confirmed` state, does not have start set to future, has an inspected room assigned etc). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservations_start",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationStartParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/process": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Marks a reservation as `Processed` (= checked out). Succeeds only if all processing conditions are met (the reservation has the `Started` state, balance of all reservation members is zero etc). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).\n### Conditions\n- Reservation has already been checked in.\n- Reservation isn't alredy in `Processed` state.\n- Reservation can't be checked out sooner than last day of planned stay.\n- The companion profiles of reservation are complete (details can be found in error message).\n- If `AllowOpenBalance` set to `false`, all bills have to be closable (items on bills are either paid by current customer, or set to be paid by other customer). With `CloseBills` option set to `true` they can be automatically closed, when set to `false` they must be closed manually.\n- If `AllowOpenBalance` set to `true`, `Notes` must be filled in.",
        "operationId": "reservations_process",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationProcessingParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/cancel": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Cancels all reservation with specified identifiers. Succeeds only if the reservations are cancellable. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservations_cancel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationCancellationParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleReservationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/updateCustomer": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Updates customer of a reservation. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservations_updateCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationsUpdateCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/updateInterval": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Updates reservation interval (start, end or both). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "reservations_updateInterval",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationUpdateIntervalParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/addCompanion": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Adds a customer as a companion to the reservation. Succeeds only if there is space for the new companion (count of current companions is less than `AdultCount + ChildCount`).",
        "operationId": "reservations_addCompanion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCompanionshipResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/deleteCompanion": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Removes customer companionship from the reservation. Note that the customer profile stays untouched, only the relation between the customer and reservation is deleted.",
        "operationId": "reservations_deleteCompanion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationCustomerParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/addProduct": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Adds a new product order of the specified product to the reservation.",
        "operationId": "reservations_addProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationProductParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProductItemsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/reservations/getAllItems": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "description": "Use orderItems/getAll.",
        "operationId": "reservations_getAllItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationItemParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationItemResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceAccessTokens/getAll": {
      "post": {
        "tags": [
          "Resource access tokens"
        ],
        "description": "Returns all resource access tokens based on resource access token identifiers, reservations or interval. One of them must be specified in the request. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "resourceAccessTokens_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAccessTokenFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAccessTokenResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceAccessTokens/add": {
      "post": {
        "tags": [
          "Resource access tokens"
        ],
        "description": "Adds new resource access tokens with the specified data.",
        "operationId": "resourceAccessTokens_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleResourceAccessTokenParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAccessTokenResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceAccessTokens/update": {
      "post": {
        "tags": [
          "Resource access tokens"
        ],
        "description": "Updates the [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token) validity interval and [permissions](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-permission-parameter) that it grants.",
        "operationId": "resourceAccessTokens_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleResourceAccessTokenUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAccessTokenResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceAccessTokens/delete": {
      "post": {
        "tags": [
          "Resource access tokens"
        ],
        "description": "Delete specified resource access tokens.",
        "operationId": "resourceAccessTokens_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceAccessTokenDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceBlocks/getAll": {
      "post": {
        "tags": [
          "Resource blocks"
        ],
        "description": "Returns all resource blocks (out of order blocks or internal use blocks). \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "resourceBlocks_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceBlocks/add": {
      "post": {
        "tags": [
          "Resource blocks"
        ],
        "description": "Adds a new resource block to the specified resource for a defined period of time.",
        "operationId": "resourceBlocks_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleResourceBlockAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceBlockResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceBlocks/delete": {
      "post": {
        "tags": [
          "Resource blocks"
        ],
        "description": "Removes specified resource blocks from the resources.",
        "operationId": "resourceBlocks_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceBlockDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceCategories/getAll": {
      "post": {
        "tags": [
          "Resource categories"
        ],
        "description": "Returns all categories of resources. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "resourceCategories_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceCategoryFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCategoryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceCategoryAssignments/getAll": {
      "post": {
        "tags": [
          "Resource categories"
        ],
        "description": "Returns all resource category assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "resourceCategoryAssignments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceCategoryAssignmentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCategoryAssignmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceCategoryImageAssignments/getAll": {
      "post": {
        "tags": [
          "Resource categories"
        ],
        "description": "Returns all resource category image assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "resourceCategoryImageAssignments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceCategoryImageAssignmentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCategoryImageAssignmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceFeatureAssignments/getAll": {
      "post": {
        "tags": [
          "Resource feature assignments"
        ],
        "description": "Returns all resource feature assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "resourceFeatureAssignments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceFeatureAssignmentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceFeatureAssignmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resourceFeatures/getAll": {
      "post": {
        "tags": [
          "Resource features"
        ],
        "description": "Returns all resource features. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "resourceFeatures_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceFeatureFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceFeatureResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resources/getAll": {
      "post": {
        "tags": [
          "Resources"
        ],
        "description": "Returns all resources of an enterprise associated with the connector integration. Note that when any of the extents is set to `true`, the response contains the entities that are associated to a resource. If the extent is not associated to a resource (e.g. resource category not assigned to any resource), this information is not returned.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "resources_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/resources/update": {
      "post": {
        "tags": [
          "Resources"
        ],
        "description": "Updates details of the resources.",
        "operationId": "resources_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleResourceUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/restrictions/add": {
      "post": {
        "tags": [
          "Restrictions"
        ],
        "description": "Adds new restrictions with the specified conditions. Note care is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization/#datetimes).\n> **Important:** If consecutive restrictions are sent with the exact same conditions and exceptions, no attempt at merging them into a single restriction is made. This means that there can be a large number of restrictions per service, leading to sub-optimal performance. A quota limit of 150000 has been introduced for this reason. To mitigate the issue, the preferred way to add restrictions is new operation [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#set-restrictions). The new operation is currently marked as 'Restricted' and subject to change as part of beta testing, but in time we expect that to replace [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/#add-restrictions).",
        "operationId": "restrictions_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRestrictionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionAdditionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/restrictions/delete": {
      "post": {
        "tags": [
          "Restrictions"
        ],
        "description": "Removes restrictions from the service.",
        "operationId": "restrictions_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRestrictionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/restrictions/set": {
      "post": {
        "tags": [
          "Restrictions"
        ],
        "description": "> ### Restricted!\n> This operation is currently in beta-test and as such it is subject to change. Use of this operation must be enabled per enterprise. Please contact the Technical Partner Support team in order to enable it.\nAdds new restrictions with the specified conditions. For improved efficiency, multiple similar restrictions will be merged into a single restriction - see [Merging algorithm](https://mews-systems.gitbook.io/connector-api/operations/#merging-algorithm). A quota of 150000 restrictions per service applies, although it is unlikely to be exceeded because of the [Merging algorithm](https://mews-systems.gitbook.io/connector-api/operations/#merging-algorithm).\nNote care is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization/#datetimes). The validation of these properties is stronger in this operation than for [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/#add-restrictions).\n### Merging algorithm\nIf a restriction already exists with the same conditions, or if multiple supplied restrictions match in all properties but differ in time interval and follow each other chronologically, a merging algorithm is applied to combine them.\nThis reduces the overall number of restrictions and improves system performance. The merging algorithm is as follows:\n- A. If the exceptions of the new restriction match the old restriction:\n   1) If the new interval is longer than the old one, a new restriction is created joining the two intervals.\n   2) If the new interval is shorter, no changes are made.\n- B. If the exceptions of the new restriction do _not_ match the old restriction:\n   1) If the new interval overlaps the old interval, the old restriction will be spliced before and after the new interval. Restrictions matching the old restriction are then added at the appropriate interval along with the new restriction.\n   2) If the new interval does _not_ overlap the old interval, the new restriction is added as usual.\n### Affected restrictions\nOnly restrictions created through the API are affected by this operation, _not_ restrictions created by the user within **Mews Operations**. Similarly, if a user creates a restriction in **Mews Operations**, this will _not_ affect restrictions created through the API.",
        "operationId": "restrictions_set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRestrictionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/restrictions/clear": {
      "post": {
        "tags": [
          "Restrictions"
        ],
        "description": "> ### Restricted!\n> This operation is currently in beta-test and as such it is subject to change. Use of this operation must be enabled per enterprise. Please contact the Technical Partner Support team in order to enable it.\nDeletes restrictions that [match the conditions](https://mews-systems.gitbook.io/connector-api/operations/#matching-conditions) using the [splicing algorithm](https://mews-systems.gitbook.io/connector-api/operations/#splicing-algorithm). This operation is intended to be used alongside [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#set-restrictions).\nThe specified conditions must be met exactly - see [Matching conditions](https://mews-systems.gitbook.io/connector-api/operations/#matching-conditions) below. The time interval, however, does not need to correspond with an existing restriction in the system, instead the API uses a splicing algorithm to work out how to divide up any existing restrictions to meet the specified time interval - see [Time interval splicing](https://mews-systems.gitbook.io/connector-api/operations/#time-interval-splicing).\n### Matching conditions\nThe specified conditions must be met exactly. For example:\nA bookable service has two restrictions A and B. Restriction A applies to resource category C1 and rate R1. Restriction B applies to resource category C1 and to all rates.\nIf the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation is called, specifying a restriction condition of resource category C1 but with no rate specified (this defaults to all rates), then only Restriction B is cleared, not Restriction A.\n### Time interval splicing\nThe time interval does not need to correspond to an existing restriction in the system, instead the API uses a splicing algorithm to work out how to divide up any existing restrictions to meet the specified time interval. For example:\nAn existing restriction in the system applies from 5th January to 25th January. As usual, time intervals are inclusive, meaning that the time interval includes both the 5th January and the 25th January.\nIf the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation is called, specifying a restriction time interval of 10th January to 20th January, i.e. within the original restriction A, then the time interval of restriction A is split into three separate intervals.\nThe original restriction A is deleted, and in its place new restriction B is created for the period of time from 5th January to 9th January inclusive, and new restriction C is created for the period of time from 21st January to 25th January. Thus the period 10th January to 20th January has been cleared, but without affecting other time periods.\n### Affected restrictions\nTo avoid deleting user defined restrictions, the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation only affects restrictions created through the [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation or the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation.",
        "operationId": "restrictions_clear",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearRestrictionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/restrictions/getAll": {
      "post": {
        "tags": [
          "Restrictions"
        ],
        "description": "Returns all restrictions of the default service provided by the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "restrictions_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/routingRules/getAll": {
      "post": {
        "tags": [
          "Routing rules"
        ],
        "description": "Returns all routing rules.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "routingRules_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoutingRuleFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingRuleResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/routingRules/add": {
      "post": {
        "tags": [
          "Routing rules"
        ],
        "description": "Adds a new routing rules.",
        "operationId": "routingRules_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleRoutingRuleAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingRuleResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/routingRules/update": {
      "post": {
        "tags": [
          "Routing rules"
        ],
        "description": "Updates routing rules.",
        "operationId": "routingRules_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleRoutingRuleUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingRuleResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/routingRules/delete": {
      "post": {
        "tags": [
          "Routing rules"
        ],
        "description": "Deletes routing rules.",
        "operationId": "routingRules_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoutingRuleDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/rules/getAll": {
      "post": {
        "tags": [
          "Rules"
        ],
        "description": "Returns all rules applied with the reservations.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "rules_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/serviceOrderNotes/add": {
      "post": {
        "tags": [
          "Service order notes"
        ],
        "description": "Adds one or more notes with a provided text to a specific service order. Service orders can be reservations or product orders.",
        "operationId": "serviceOrderNotes_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleServiceOrderNoteAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrderNoteAdditionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/serviceOrderNotes/update": {
      "post": {
        "tags": [
          "Service order notes"
        ],
        "description": "Updates one or more given service order notes with new text.",
        "operationId": "serviceOrderNotes_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleServiceOrderNoteUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrderNoteUpdateResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/serviceOrderNotes/getAll": {
      "post": {
        "tags": [
          "Service order notes"
        ],
        "description": "Returns all notes associated with the given service orders. Service orders can be reservations or product orders. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "serviceOrderNotes_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceOrderNoteFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrderNoteResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/serviceOrderNotes/delete": {
      "post": {
        "tags": [
          "Service order notes"
        ],
        "description": "Deletes service order notes.",
        "operationId": "serviceOrderNotes_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceOrderNoteDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/productServiceOrders/getAll": {
      "post": {
        "tags": [
          "Service orders"
        ],
        "description": "Returns all product service orders orders associated with the given enterprise. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)..",
        "operationId": "productServiceOrders_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductServiceOrderFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductServiceOrderResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/customers/charge": {
      "post": {
        "tags": [
          "Service orders"
        ],
        "operationId": "customers_charge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAdditionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAdditionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/orders/add": {
      "post": {
        "tags": [
          "Service orders"
        ],
        "description": "Creates a new order, with the specified products and items. If the time of consumption is specified, it must be either in the future or within the Editable History Interval for the enterprise. Compared to a stay service order (i.e. a reservation), which is consumed over certain span of time, a product service order is consumed at a single point in time. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "orders_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAdditionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAdditionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/services/getAll": {
      "post": {
        "tags": [
          "Services"
        ],
        "description": "Returns all services offered by the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "services_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/services/updateAvailability": {
      "post": {
        "tags": [
          "Services"
        ],
        "description": "Updates the number of available resources in [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) by a certain amount (relative adjustment). Note that availabilities are defined per time unit, so when the server receives the UTC interval, it first converts it to enterprise timezone and updates the availability on all time units that the interval intersects. It's not allowed to update past availabilities outside of `EditableHistoryInterval`, future updates are allowed for up to 5 years.",
        "operationId": "services_updateAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAvailabilityUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/services/getAvailability": {
      "post": {
        "tags": [
          "Services"
        ],
        "description": "Returns availability of a bookable service for a specified time interval including applied availability adjustments. Availability will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of \"Day\"). UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), e.g. 00:00 converted to UTC for a time unit of \"Day\". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.",
        "operationId": "services_getAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAvailabilityFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAvailabilityResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/services/getAvailability/2024-01-22": {
      "post": {
        "tags": [
          "Services"
        ],
        "description": "> ### Restricted!\n> This operation is currently in beta-test and as such it is subject to change.\nReturns selected availability and occupancy metrics of a bookable service for a specified time interval, similar to [the availability & occupancy report](https://help.mews.com/s/article/Availability-Occupancy-report). Availability will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one time unit for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two time units for `2nd Jan` and `3rd Jan` (assuming a time unit period of \"Day\"). UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), e.g. 00:00 converted to UTC for a time unit of \"Day\". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.",
        "operationId": "services_getAvailability_2024-01-22",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAvailabilityFilterParametersV20240122"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAvailabilityResultV20240122"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/sourceAssignments/getAll": {
      "post": {
        "tags": [
          "Source assignments"
        ],
        "description": "Returns all [Sources](https://mews-systems.gitbook.io/connector-api/operations/sources/#source) assigned to a [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group). Each reservation group can have multiple sources. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "sourceAssignments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceAssignmentFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceAssignmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/sources/getAll": {
      "post": {
        "tags": [
          "Sources"
        ],
        "description": "Returns all sources from which reservations can originate. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).",
        "operationId": "sources_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/tasks/getAll": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "Returns all tasks of the enterprise, filtered by identifiers or other filters.",
        "operationId": "tasks_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/tasks/add": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "Adds a new task to the enterprise, optionally to a specified department.",
        "operationId": "tasks_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/taxEnvironments/getAll": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "description": "Returns all tax environments supported by the API.",
        "operationId": "taxEnvironments_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxEnvironmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/taxations/getAll": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "description": "Returns all taxations supported in tax environments.",
        "operationId": "taxations_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/voucherCodes/add": {
      "post": {
        "tags": [
          "Voucher codes"
        ],
        "description": "Adds voucher codes to the specified [Vouchers](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "voucherCodes_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleVoucherCodeAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherCodeResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/voucherCodes/delete": {
      "post": {
        "tags": [
          "Voucher codes"
        ],
        "description": "Delete specified voucher codes. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "voucherCodes_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleVoucherCodeDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/voucherCodes/getAll": {
      "post": {
        "tags": [
          "Voucher codes"
        ],
        "description": "Returns all voucher codes filtered by [Voucher](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher) or other filter parameters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "voucherCodes_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoucherCodeFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherCodeResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/vouchers/getAll": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "description": "Returns all rate vouchers filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service), voucher code or voucher identifier. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "vouchers_getAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoucherFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/vouchers/add": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "description": "Adds the specified vouchers to the specified [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "vouchers_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleVoucherAddParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherWriteResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/vouchers/update": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "description": "Updates information about the specified vouchers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "vouchers_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleVoucherUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherWriteResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/api/connector/v1/vouchers/delete": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "description": "Delete specified vouchers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).",
        "operationId": "vouchers_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleVoucherDeleteParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API)."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated."
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Error caused by too many requests sent in a given amount of time, please see Request limits for more information."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Message": {
                      "type": "string",
                      "example": "Description of the error."
                    },
                    "DebugDetails": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment."
                      }
                    },
                    "Details": {
                      "type": "object",
                      "example": {
                        "Sample": "Object with additional details about the error."
                      }
                    }
                  },
                  "description": "Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github."
                }
              }
            }
          }
        },
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "api-key-inbound",
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        }
      }
    },
    "/path-182": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "summary": "New Route",
        "description": "Lorem ipsum dolor sit amet, **consectetur adipiscing** elit, sed do `eiusmod tempor` incididunt ut labore et dolore magna aliqua.",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "https://echo.zuplo.io"
            }
          },
          "policies": {
            "inbound": [
              "transform-body-inbound",
              "rate-limit-inbound"
            ]
          }
        },
        "operationId": "1cec1f92-7da3-4dcf-9c49-c4285821210d"
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "title": "Account",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid"
          },
          "Discriminator": {
            "type": "string",
            "description": "Type of the account.",
            "nullable": true
          },
          "Customer": {
            "$ref": "#/components/schemas/CustomerAccount"
          },
          "Company": {
            "$ref": "#/components/schemas/CompanyAccount"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Account"
      },
      "AccountAddress": {
        "title": "Account address",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the address.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of a [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) or a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) within the enterprise.",
            "format": "uuid"
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain.",
            "format": "uuid",
            "nullable": true
          },
          "AccountType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "description": "A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type), e.g. customer or company.",
            "nullable": true
          },
          "Line1": {
            "maxLength": 255,
            "type": "string",
            "description": "First line of the address.",
            "nullable": true
          },
          "Line2": {
            "maxLength": 255,
            "type": "string",
            "description": "Second line of the address.",
            "nullable": true
          },
          "City": {
            "maxLength": 255,
            "type": "string",
            "description": "The city.",
            "nullable": true
          },
          "PostalCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Postal code.",
            "nullable": true
          },
          "CountryCode": {
            "maxLength": 3,
            "type": "string",
            "description": "ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).",
            "nullable": true
          },
          "CountrySubdivisionCode": {
            "maxLength": 3,
            "type": "string",
            "description": "ISO 3166-2 code of the administrative division, e.g. DE-BW.",
            "nullable": true
          },
          "Latitude": {
            "type": "number",
            "description": "The latitude.",
            "format": "double",
            "nullable": true
          },
          "Longitude": {
            "type": "number",
            "description": "The longitude.",
            "format": "double",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Last update date and time of the address in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the address is still active."
          },
          "IsUpdatedByMe": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountAddress"
      },
      "AccountCompanyUpdateParameters": {
        "title": "AccountCompanyUpdateParameters",
        "type": "object",
        "properties": {
          "Email": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "TaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "BillingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AccountingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Notes": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "MotherCompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "WebsiteUrl": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "InvoiceDueInterval": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Classifications": {
            "$ref": "#/components/schemas/CompanyClassificationUpdateParameters"
          },
          "Options": {
            "$ref": "#/components/schemas/CompanyOptionUpdateParameters"
          },
          "CreditRatingBasic": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Department": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "DunsNumber": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ReferenceId": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ExternalIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AdditionalTaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Contact": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ContactPerson": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "FiscalIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Iata": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Telephone": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "SourceId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountCompanyUpdateParameters"
      },
      "AccountCustomerUpdateParameters": {
        "title": "AccountCustomerUpdateParameters",
        "type": "object",
        "properties": {
          "Email": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "TaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "BillingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AccountingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Notes": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "LastName": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "FirstName": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "SecondLastName": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "BirthPlace": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Telephone": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Occupation": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CarRegistrationNumber": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "LoyaltyCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "NationalityCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "BirthDate": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Sex": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Title": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "PreferredLanguageCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Options": {
            "$ref": "#/components/schemas/CustomerOptionUpdateParameters"
          },
          "Classifications": {
            "$ref": "#/components/schemas/CustomerClassificationUpdateParameters"
          },
          "LegalEntityIdentifiers": {
            "$ref": "#/components/schemas/LegalEntityIdentifierUpdateParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountCustomerUpdateParameters"
      },
      "AccountMergeParameter": {
        "title": "AccountMergeParameter",
        "required": [
          "AccountType",
          "SourceAccountIds",
          "TargetAccountId"
        ],
        "type": "object",
        "properties": {
          "SourceAccountIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "TargetAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "AccountType": {
            "$ref": "#/components/schemas/MergeAccountType"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountMergeParameter"
      },
      "AccountNote": {
        "title": "Account note",
        "required": [
          "AccountId",
          "AccountType",
          "Classifications",
          "Content",
          "CreatorProfile",
          "Id",
          "IsActive",
          "UpdaterProfile"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the account note.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid"
          },
          "Content": {
            "minLength": 1,
            "type": "string",
            "description": "The content of the account note."
          },
          "AccountType": {
            "$ref": "#/components/schemas/AccountType"
          },
          "Classifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNoteClassification"
            },
            "description": "Specifying the classifactions of the note based on account type ([Customer note classification](https://mews-systems.gitbook.io/connector-api/operations/#customer-note-classifications), [Company note classifications](https://mews-systems.gitbook.io/connector-api/operations/#company-note-classifications))."
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the account note is still active."
          },
          "CreatorProfile": {
            "$ref": "#/components/schemas/ProfileData"
          },
          "UpdaterProfile": {
            "$ref": "#/components/schemas/ProfileData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNote"
      },
      "AccountNoteAddParameters": {
        "title": "AccountNoteAddParameters",
        "required": [
          "AccountId",
          "Classifications",
          "Content"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "Content": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "Classifications": {
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNoteClassification"
            }
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteAddParameters"
      },
      "AccountNoteAdditionResult": {
        "title": "AccountNoteAdditionResult",
        "type": "object",
        "properties": {
          "AccountNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNote"
            },
            "description": "Added account notes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteAdditionResult"
      },
      "AccountNoteClassification": {
        "enum": [
          "General",
          "FoodAndBeverage",
          "FrontOffice",
          "Reservations",
          "Housekeeping",
          "Maintenance",
          "PreviousStay",
          "FamilyRelations",
          "Gifts",
          "Accounting",
          "Complaints",
          "Other"
        ],
        "type": "string"
      },
      "AccountNoteFilterParameters": {
        "title": "AccountNoteFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "ChainIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.",
            "nullable": true
          },
          "AccountNoteIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Account note](https://mews-systems.gitbook.io/connector-api/operations/#account-note).",
            "nullable": true
          },
          "AccountIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the accounts ([Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteFilterParameters"
      },
      "AccountNoteResult": {
        "title": "AccountNoteResult",
        "type": "object",
        "properties": {
          "AccountNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNote"
            },
            "description": "The set of requested account notes.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteResult"
      },
      "AccountNoteUpdateClassifications": {
        "title": "AccountNoteUpdateClassifications",
        "type": "object",
        "properties": {
          "General": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "FoodAndBeverage": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "FrontOffice": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Reservations": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Housekeeping": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Maintenance": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "PreviousStay": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "FamilyRelations": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Gifts": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Accounting": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Complaints": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Other": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteUpdateClassifications"
      },
      "AccountNoteUpdateParameters": {
        "title": "AccountNoteUpdateParameters",
        "required": [
          "AccountNoteId"
        ],
        "type": "object",
        "properties": {
          "AccountNoteId": {
            "type": "string",
            "format": "uuid"
          },
          "Content": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Classifications": {
            "$ref": "#/components/schemas/AccountNoteUpdateClassifications"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteUpdateParameters"
      },
      "AccountNoteUpdateResult": {
        "title": "AccountNoteUpdateResult",
        "type": "object",
        "properties": {
          "AccountNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNote"
            },
            "description": "Updated account notes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountNoteUpdateResult"
      },
      "AccountResult": {
        "title": "AccountResult",
        "type": "object",
        "properties": {
          "Accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": "Updated accounts.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountResult"
      },
      "AccountType": {
        "enum": [
          "Company",
          "Customer"
        ],
        "type": "string"
      },
      "AccountUpdateParameters": {
        "title": "AccountUpdateParameters",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Discriminator": {
            "type": "string",
            "nullable": true
          },
          "Customer": {
            "$ref": "#/components/schemas/AccountCustomerUpdateParameters"
          },
          "Company": {
            "$ref": "#/components/schemas/AccountCompanyUpdateParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountUpdateParameters"
      },
      "AccountingCategory": {
        "title": "Accounting category",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "IsActive",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the category.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the accounting category is still active."
          },
          "Name": {
            "type": "string",
            "description": "Name of the category.",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "description": "Code of the category within Mews.",
            "nullable": true
          },
          "ExternalCode": {
            "type": "string",
            "description": "Code of the category in external systems.",
            "nullable": true
          },
          "LedgerAccountCode": {
            "type": "string",
            "description": "Code of the ledger account (double entry accounting).",
            "nullable": true
          },
          "PostingAccountCode": {
            "type": "string",
            "description": "Code of the posting account (double entry accounting).",
            "nullable": true
          },
          "CostCenterCode": {
            "type": "string",
            "description": "Code of cost center.",
            "nullable": true
          },
          "Classification": {
            "type": "string",
            "description": "Classification of the accounting category allowing cross-enterprise reporting.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the accounting category in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the accounting category in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingCategory"
      },
      "AccountingCategoryFilterParameters": {
        "title": "AccountingCategoryFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "AccountingCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Accounting categories](https://mews-systems.gitbook.io/connector-api/operations/#accounting-category).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingCategoryFilterParameters"
      },
      "AccountingCategoryParameters": {
        "title": "AccountingCategoryParameters",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingCategoryParameters"
      },
      "AccountingCategoryResult": {
        "title": "AccountingCategoryResult",
        "type": "object",
        "properties": {
          "AccountingCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingCategory"
            },
            "description": "Accounting categories of the enterprise.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingCategoryResult"
      },
      "AccountingConfiguration": {
        "title": "AccountingConfiguration",
        "required": [
          "SurchargeConfiguration"
        ],
        "type": "object",
        "properties": {
          "AdditionalTaxIdentifier": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "BankAccountNumber": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "BankName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "Iban": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "Bic": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "SurchargeConfiguration": {
            "$ref": "#/components/schemas/SurchargeConfiguration"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingConfiguration"
      },
      "AccountingItem": {
        "title": "AccountingItem",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "OrderId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BillId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "InvoiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CreditCardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "SubType": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "ConsumptionUtc": {
            "type": "string",
            "nullable": true
          },
          "ClosedUtc": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "SubState": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingItem"
      },
      "AccountingItemExtent": {
        "title": "AccountingItemExtent",
        "type": "object",
        "properties": {
          "AccountingItems": {
            "type": "boolean"
          },
          "OrderItems": {
            "type": "boolean"
          },
          "PaymentItems": {
            "type": "boolean"
          },
          "CreditCardTransactions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned. E.g. it is possible to specify that together with the accounting items, credit card transactions should be also returned.",
        "x-schema-id": "AccountingItemExtent"
      },
      "AccountingItemParameters": {
        "title": "AccountingItemParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "EndUtc",
          "Extent",
          "StartUtc"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "StartUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "EndUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "Extent": {
            "$ref": "#/components/schemas/AccountingItemExtent"
          },
          "ItemIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the Accounting items. Required if no other filter is provided.",
            "nullable": true
          },
          "RebatedItemIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the Accounting items we are finding rebates for. Required if no other filter is provided.",
            "nullable": true
          },
          "ClosedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ConsumedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "TimeFilter": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "currency",
            "nullable": true
          },
          "States": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "States the accounting items should be in. If not specified, accounting items in Open or Closed states are returned.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingItemParameters"
      },
      "AccountingItemResult": {
        "title": "AccountingItemResult",
        "type": "object",
        "properties": {
          "AccountingItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItem"
            },
            "nullable": true,
            "deprecated": true
          },
          "OrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemOld"
            },
            "description": "Updated order items (consumed items such as nights or products).",
            "nullable": true
          },
          "PaymentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentItemOld"
            },
            "description": "Updated payment items (such as cash, credit card payments or invoices).",
            "nullable": true
          },
          "CreditCardTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCardTransaction"
            },
            "description": "The credit card payment transactions.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingItemResult"
      },
      "AccountingItemUpdateParameters": {
        "title": "AccountingItemUpdateParameters",
        "required": [
          "AccountingItemId",
          "BillId"
        ],
        "type": "object",
        "properties": {
          "AccountingItemId": {
            "type": "string",
            "format": "uuid"
          },
          "AccountId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "BillId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AccountingItemUpdateParameters"
      },
      "AccountingState": {
        "enum": [
          "Open",
          "Closed",
          "Inactive",
          "Canceled"
        ],
        "type": "string"
      },
      "ActivityState": {
        "enum": [
          "Deleted",
          "Active"
        ],
        "type": "string"
      },
      "ActivityStates": {
        "enum": [
          "Deleted",
          "Active"
        ],
        "type": "string"
      },
      "AddAccountFileResult": {
        "title": "AddAccountFileResult",
        "type": "object",
        "properties": {
          "FileId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddAccountFileResult"
      },
      "AddCompanionshipResult": {
        "title": "AddCompanionshipResult",
        "type": "object",
        "properties": {
          "CompanionshipId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddCompanionshipResult"
      },
      "AddCreditCardResult": {
        "title": "AddCreditCardResult",
        "type": "object",
        "properties": {
          "CreditCardId": {
            "type": "string",
            "description": "Unique identifier of the [Credit card](https://mews-systems.gitbook.io/connector-api/operations/creditcards/#credit-card).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddCreditCardResult"
      },
      "AddExternalPaymentResult": {
        "title": "AddExternalPaymentResult",
        "type": "object",
        "properties": {
          "ExternalPaymentId": {
            "type": "string",
            "description": "Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddExternalPaymentResult"
      },
      "AddOutletBillsParameters": {
        "title": "AddOutletBillsParameters",
        "required": [
          "AccessToken",
          "Bills",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Bills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutletBillParameters"
            },
            "description": "The new outlet bills."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddOutletBillsParameters"
      },
      "AddOutletBillsResult": {
        "title": "AddOutletBillsResult",
        "type": "object",
        "properties": {
          "OutletBillIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of unique identifiers of the added Outlet bills.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddOutletBillsResult"
      },
      "AddProductItemsResult": {
        "title": "AddProductItemsResult",
        "type": "object",
        "properties": {
          "ItemIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddProductItemsResult"
      },
      "AddRestrictionParameters": {
        "title": "AddRestrictionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Restrictions",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) restrictions will be added in.",
            "format": "uuid"
          },
          "Restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestrictionData"
            },
            "description": "Parameters of restrictions."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddRestrictionParameters"
      },
      "AddTaskResult": {
        "title": "AddTaskResult",
        "type": "object",
        "properties": {
          "TaskId": {
            "type": "string",
            "description": "Unique identifier of added task.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddTaskResult"
      },
      "AddedMessage": {
        "title": "AddedMessage",
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "nullable": true
          },
          "Message": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddedMessage"
      },
      "AddedMessageResult": {
        "title": "AddedMessageResult",
        "required": [
          "Messages"
        ],
        "type": "object",
        "properties": {
          "Messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddedMessage"
            }
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddedMessageResult"
      },
      "AddedReservation": {
        "title": "Added reservation",
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "description": "Identifier of the reservation within the transaction.",
            "nullable": true
          },
          "Reservation": {
            "$ref": "#/components/schemas/ReservationOld"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddedReservation"
      },
      "AddedRestriction": {
        "title": "Added restriction",
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "description": "Identifier of the restriction within the transaction.",
            "nullable": true
          },
          "Restriction": {
            "$ref": "#/components/schemas/Restriction"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddedRestriction"
      },
      "AdditionalServiceData": {
        "title": "AdditionalServiceData",
        "type": "object",
        "properties": {
          "Promotions": {
            "$ref": "#/components/schemas/Promotions"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AdditionalServiceData"
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "Line1": {
            "type": "string",
            "nullable": true
          },
          "Line2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "nullable": true
          },
          "SubdivisionCode": {
            "type": "string",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Address"
      },
      "AddressAddParameters": {
        "title": "AddressAddParameters",
        "required": [
          "AccountId"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "Line1": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "Line2": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "City": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "maxLength": 255,
            "type": "string",
            "format": "postal-code",
            "nullable": true
          },
          "CountryCode": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "CountrySubdivisionCode": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "Latitude": {
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Longitude": {
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddressAddParameters"
      },
      "AddressDeleteParameters": {
        "title": "AddressDeleteParameters",
        "required": [
          "AccessToken",
          "AddressIds",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AddressIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Addresses](https://mews-systems.gitbook.io/connector-api/operations/#account-address) within the enterprise to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddressDeleteParameters"
      },
      "AddressFilterParameters": {
        "title": "AddressFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "ChainIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.",
            "nullable": true
          },
          "AccountIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) or [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) within the enterprise. Required if no other filter is provided.",
            "nullable": true
          },
          "AddressIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Addresses](https://mews-systems.gitbook.io/connector-api/operations/#account-address) within the enterprise. Use this property if you want to fetch specific addresses. Required if no other filter is provided.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddressFilterParameters"
      },
      "AddressParameters": {
        "title": "AddressParameters",
        "type": "object",
        "properties": {
          "Line1": {
            "type": "string",
            "nullable": true
          },
          "Line2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "format": "postal-code",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "nullable": true
          },
          "CountrySubdivisionCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "New address details.",
        "x-schema-id": "AddressParameters"
      },
      "AddressResult": {
        "title": "AddressResult",
        "type": "object",
        "properties": {
          "Addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountAddress"
            },
            "description": "Updated addresses.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest address item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older Account address.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddressResult"
      },
      "AddressUpdateParameters": {
        "title": "AddressUpdateParameters",
        "required": [
          "AccountId",
          "AddressId"
        ],
        "type": "object",
        "properties": {
          "AddressId": {
            "type": "string",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "Line1": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Line2": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "City": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "PostalCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CountryCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CountrySubdivisionCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AddressUpdateParameters"
      },
      "AgeCategory": {
        "title": "Age category",
        "required": [
          "CreatedUtc",
          "Id",
          "Names",
          "ServiceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of age category.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the age category belongs to.",
            "format": "uuid"
          },
          "MinimalAge": {
            "type": "integer",
            "description": "Minimal age for the age category.",
            "format": "int32",
            "nullable": true
          },
          "MaximalAge": {
            "type": "integer",
            "description": "Maximal age for the age category.",
            "format": "int32",
            "nullable": true
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the name of the age category."
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the age category in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the age category in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AgeCategory"
      },
      "AgeCategoryAdjustment": {
        "title": "AgeCategoryAdjustment",
        "type": "object",
        "properties": {
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "AbsoluteValue": {
            "type": "number",
            "format": "double"
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgeCategoryAdjustmentType"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AgeCategoryAdjustment"
      },
      "AgeCategoryAdjustmentType": {
        "enum": [
          "ExtraOccupancyAdjustment",
          "NegativeOccupancyAdjustment",
          "StandardOccupancyAdjustment"
        ],
        "type": "string"
      },
      "AgeCategoryParameters": {
        "title": "AgeCategoryParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "AgeCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Age categories](https://mews-systems.gitbook.io/connector-api/operations/#age-category).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) where the age category belong to."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AgeCategoryParameters"
      },
      "AgeCategoryResult": {
        "title": "AgeCategoryResult",
        "type": "object",
        "properties": {
          "AgeCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeCategory"
            },
            "description": "Age category of the enterprise.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AgeCategoryResult"
      },
      "AlternativePaymentMethods": {
        "enum": [
          "Ideal",
          "ApplePay",
          "GooglePay",
          "SepaDirectDebit"
        ],
        "type": "string"
      },
      "AlternativePaymentParameters": {
        "title": "AlternativePaymentParameters",
        "required": [
          "AccessToken",
          "Amount",
          "Client",
          "ClientToken",
          "CustomerId",
          "Method",
          "RedirectUrl"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          },
          "Amount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "Method": {
            "$ref": "#/components/schemas/AlternativePaymentMethods"
          },
          "RedirectUrl": {
            "minLength": 1,
            "type": "string",
            "description": "URL where the customer will be redirected after completing their payment.",
            "format": "uri"
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AlternativePaymentParameters"
      },
      "AlternativePaymentResult": {
        "title": "AlternativePaymentResult",
        "type": "object",
        "properties": {
          "PaymentId": {
            "type": "string",
            "description": "Unique identifier of the created payment.",
            "format": "uuid"
          },
          "NextAction": {
            "title": "NextAction",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/NextActionType"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NextAction"
                  }
                ]
              }
            },
            "description": "Next action to take in order to complete the payment."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AlternativePaymentResult"
      },
      "Amount": {
        "title": "Amount",
        "type": "object",
        "properties": {
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "NetValue": {
            "type": "number",
            "format": "double"
          },
          "GrossValue": {
            "type": "number",
            "format": "double"
          },
          "TaxValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxValue"
            },
            "nullable": true
          },
          "Breakdown": {
            "$ref": "#/components/schemas/TaxBreakdown"
          }
        },
        "additionalProperties": false,
        "description": "Value of the preauthorization.",
        "x-schema-id": "Amount"
      },
      "AmountParameters": {
        "title": "AmountParameters",
        "required": [
          "Currency",
          "TaxCodes"
        ],
        "type": "object",
        "properties": {
          "Currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "TaxCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "NetValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "GrossValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Price of the product that overrides the price defined in Mews.",
        "x-schema-id": "AmountParameters"
      },
      "AvailabilityAdjustment": {
        "title": "Availability adjustment",
        "required": [
          "ActivityState",
          "FirstTimeUnitStartUtc",
          "Id",
          "LastTimeUnitStartUtc",
          "ResourceCategoryId",
          "UnitCount",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the [Availability adjustment](https://mews-systems.gitbook.io/connector-api/operations/#availability-adjustment).",
            "format": "uuid"
          },
          "AvailabilityBlockId": {
            "type": "string",
            "description": "Unique identifier of the [Availability block](https://mews-systems.gitbook.io/connector-api/operations/availabilityblocks/#availability-block) which the availability adjustment belongs to.",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) whose availability is updated.",
            "format": "uuid"
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "FirstTimeUnitStartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "format": "date-time"
          },
          "LastTimeUnitStartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "format": "date-time"
          },
          "UnitCount": {
            "type": "integer",
            "description": "Adjustment value applied on the interval.",
            "format": "int32"
          },
          "ActivityState": {
            "$ref": "#/components/schemas/ActivityState"
          },
          "ReleaseOverrideUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the adjustment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityAdjustment"
      },
      "AvailabilityAdjustmentParameters": {
        "title": "AvailabilityAdjustmentParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "AvailabilityAdjustmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Availability adjustments](https://mews-systems.gitbook.io/connector-api/operations/#availability-adjustment).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityState"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityAdjustmentParameters"
      },
      "AvailabilityAdjustmentResult": {
        "title": "AvailabilityAdjustmentResult",
        "required": [
          "AvailabilityAdjustments"
        ],
        "type": "object",
        "properties": {
          "AvailabilityAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityAdjustment"
            },
            "description": "Availability adjustments."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityAdjustmentResult"
      },
      "AvailabilityBlock": {
        "title": "Availability block",
        "required": [
          "PickupDistribution"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the availability block.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the block is assigned to.",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "description": "Unique identifier of the [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate) the block is assigned to.",
            "format": "uuid"
          },
          "VoucherId": {
            "type": "string",
            "description": "Unique identifier of the [Voucher](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher) used to access specified private [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).",
            "format": "uuid",
            "nullable": true
          },
          "BookerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) on whose behalf the block was made.",
            "format": "uuid",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) linked to the block.",
            "format": "uuid",
            "nullable": true
          },
          "TravelAgencyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Budget": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "State": {
            "type": "string",
            "description": "State of the availability block.",
            "nullable": true
          },
          "ReservationPurpose": {
            "type": "string",
            "description": "The purpose of the block.",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Creation date and time of the block in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Last update date and time of the block in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "ActivityState": {
            "type": "string",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "description": "Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "description": "End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "nullable": true
          },
          "ReleasedUtc": {
            "type": "string",
            "description": "The moment when the block and its availability is released in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "RollingReleaseOffset": {
            "type": "string",
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "description": "Identifier of the block from external system.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "The name of the block in Mews.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes of the block.",
            "nullable": true
          },
          "PickupDistribution": {
            "$ref": "#/components/schemas/PickupDistribution"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlock"
      },
      "AvailabilityBlockAddParameters": {
        "title": "AvailabilityBlockAddParameters",
        "required": [
          "FirstTimeUnitStartUtc",
          "LastTimeUnitStartUtc",
          "RateId",
          "ReleasedUtc",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "FirstTimeUnitStartUtc": {
            "minLength": 1,
            "type": "string"
          },
          "LastTimeUnitStartUtc": {
            "minLength": 1,
            "type": "string"
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ReleasedUtc": {
            "minLength": 1,
            "type": "string"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "VoucherCode": {
            "type": "string",
            "nullable": true
          },
          "BookerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "TravelAgencyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Budget": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "ReservationPurpose": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReservationPurpose"
              }
            ],
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AvailabilityBlockState"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlockAddParameters"
      },
      "AvailabilityBlockAddResult": {
        "title": "AvailabilityBlockAddResult",
        "type": "object",
        "properties": {
          "AvailabilityBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityBlock"
            },
            "description": "Availability blocks.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlockAddResult"
      },
      "AvailabilityBlockAssignment": {
        "title": "AvailabilityBlockAssignment",
        "type": "object",
        "properties": {
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "AvailabilityBlockId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlockAssignment"
      },
      "AvailabilityBlockExtent": {
        "title": "AvailabilityBlockExtent",
        "type": "object",
        "properties": {
          "AvailabilityBlocks": {
            "type": "boolean"
          },
          "Adjustments": {
            "type": "boolean"
          },
          "ServiceOrders": {
            "type": "boolean"
          },
          "Rates": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned, e.g. it is possible to specify that related service orders (for example reservations) are returned.",
        "x-schema-id": "AvailabilityBlockExtent"
      },
      "AvailabilityBlockParameters": {
        "title": "AvailabilityBlockParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/AvailabilityBlockExtent"
          },
          "ServiceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which [Availability blocks](https://mews-systems.gitbook.io/connector-api/operations/#availability-block) are assigned.",
            "nullable": true
          },
          "AvailabilityBlockIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Availability blocks](https://mews-systems.gitbook.io/connector-api/operations/#availability-block).",
            "nullable": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "CollidingUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ReleasedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ExternalIdentifiers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of [Availability block](https://mews-systems.gitbook.io/connector-api/operations/#availability-block)s from external systems.",
            "nullable": true
          },
          "States": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "States the availability blocks should be in.",
            "nullable": true
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlockParameters"
      },
      "AvailabilityBlockResult": {
        "title": "AvailabilityBlockResult",
        "type": "object",
        "properties": {
          "AvailabilityBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityBlock"
            },
            "description": "Availability blocks.",
            "nullable": true
          },
          "ServiceOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationOld"
            },
            "description": "Service orders (for example reservations) linked to availability blocks.",
            "nullable": true
          },
          "Adjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityAdjustment"
            },
            "description": "Availability adjustments of availability blocks.",
            "nullable": true
          },
          "Rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlockResult"
      },
      "AvailabilityBlockState": {
        "enum": [
          "Confirmed",
          "Optional",
          "Inquired",
          "Canceled"
        ],
        "type": "string"
      },
      "AvailabilityBlockUpdateParameters": {
        "title": "AvailabilityBlockUpdateParameters",
        "type": "object",
        "properties": {
          "AvailabilityBlockId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "FirstTimeUnitStartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "LastTimeUnitStartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "StartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "EndUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ReleasedUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ExternalIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "State": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ReservationPurpose": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "TravelAgencyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "BookerId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "Notes": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Budget": {
            "$ref": "#/components/schemas/CurrencyValueOldUpdateValue"
          },
          "CancellationReason": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CancellationReasonDetail": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "AvailabilityBlockUpdateParameters"
      },
      "BaseRatePricingParameters": {
        "title": "BaseRatePricingParameters",
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "NegativeOccupancyAdjustment": {
            "type": "number",
            "format": "double"
          },
          "ExtraOccupancyAdjustment": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BaseRatePricingParameters"
      },
      "Bill": {
        "title": "Bill",
        "required": [
          "EnterpriseId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the bill.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account ([Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)) the bill is issued to.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) the bill is issued to. **Deprecated!**",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) specified in CompanyDetails or the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) the bill is issued to. **Deprecated!**",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "AssociatedAccountIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) that are associated to the bill.",
            "nullable": true
          },
          "CounterId": {
            "type": "string",
            "description": "Unique identifier of the bill Counter.",
            "format": "uuid",
            "nullable": true
          },
          "State": {
            "type": "string",
            "description": "State of the bill.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Type of the bill.",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "description": "Number of the bill.",
            "nullable": true
          },
          "VariableSymbol": {
            "type": "string",
            "description": "Variable symbol of the bill.",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Date and time of the bill creation in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "IssuedUtc": {
            "type": "string",
            "description": "Date and time of the bill issuance in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "TaxedUtc": {
            "type": "string",
            "description": "Taxation date of the bill in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "PaidUtc": {
            "type": "string",
            "description": "Date when the bill was paid in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "DueUtc": {
            "type": "string",
            "description": "Bill due date and time in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Date and time when the bill was last updated, in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "PurchaseOrderNumber": {
            "type": "string",
            "description": "Unique number of the purchase order from the buyer.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes.",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/BillOptions"
          },
          "Revenue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItem"
            },
            "nullable": true,
            "deprecated": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItem"
            },
            "nullable": true,
            "deprecated": true
          },
          "OrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemOld"
            },
            "description": "The order items (consumed items such as nights or products) on the bill.",
            "nullable": true,
            "deprecated": true
          },
          "PaymentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentItemOld"
            },
            "description": "The payment items (such as cash, credit card payments or invoices) on the bill.",
            "nullable": true,
            "deprecated": true
          },
          "AssigneeData": {
            "title": "AssigneeData",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/BillAssigneeDataDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BillCompanyData"
                  },
                  {
                    "$ref": "#/components/schemas/BillCustomerData"
                  }
                ]
              }
            },
            "deprecated": true
          },
          "OwnerData": {
            "title": "OwnerData",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/BillAssigneeDataDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BillCompanyData"
                  },
                  {
                    "$ref": "#/components/schemas/BillCustomerData"
                  }
                ]
              }
            },
            "description": "Additional information about owner of the bill. Can be a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company). Persisted at the time of closing of the bill."
          },
          "CompanyDetails": {
            "$ref": "#/components/schemas/BillCompanyData"
          },
          "AssociatedAccountData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillAccountData"
            },
            "description": "Additional information about the associated account of the bill. Can be a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company). Persisted at the time of closing of the bill. Currently only one account can be associated with a bill, but this may be extended in future.",
            "nullable": true
          },
          "EnterpriseData": {
            "$ref": "#/components/schemas/BillEnterpriseData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Bill"
      },
      "BillAccountData": {
        "title": "BillAccountData",
        "type": "object",
        "properties": {
          "Discriminator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BillAssigneeDataDiscriminator"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "BillCustomerData": {
            "$ref": "#/components/schemas/BillCustomerData"
          },
          "BillCompanyData": {
            "$ref": "#/components/schemas/BillCompanyData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillAccountData"
      },
      "BillAddParameters": {
        "title": "BillAddParameters",
        "required": [
          "AccountId"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillAddParameters"
      },
      "BillAssigneeDataDiscriminator": {
        "enum": [
          "BillCustomerData",
          "BillCompanyData"
        ],
        "type": "string"
      },
      "BillCloseAccountParameters": {
        "title": "BillCloseAccountParameters",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "TaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Address": {
            "$ref": "#/components/schemas/AddressParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillCloseAccountParameters"
      },
      "BillCloseParameters": {
        "title": "BillCloseParameters",
        "required": [
          "AccessToken",
          "BillId",
          "Client",
          "ClientToken",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill) to be closed.",
            "format": "uuid"
          },
          "Type": {
            "minLength": 1,
            "type": "string",
            "description": "Specifies the mode bill should be closed in."
          },
          "BillCounterId": {
            "type": "string",
            "description": "Unique identifier of the [Counter](https://mews-systems.gitbook.io/connector-api/operations/counters/#counter) to be used for closing. Default one is used when no value is provided.",
            "format": "uuid",
            "nullable": true
          },
          "FiscalMachineId": {
            "type": "string",
            "description": "Unique identifier of the [Fiscal Machine](https://mews-systems.gitbook.io/connector-api/operations/devices/#device) to be used for closing. Default one is used when no value is provided.",
            "format": "uuid",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/BillOptionsParameters"
          },
          "SendEmail": {
            "type": "boolean"
          },
          "EmailAddress": {
            "type": "string",
            "nullable": true
          },
          "TaxedDate": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "DueDate": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "VariableSymbol": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "TaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AccountTaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "CompanyTaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "PurchaseOrderNumber": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Notes": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Address": {
            "$ref": "#/components/schemas/AddressParameters"
          },
          "AccountAddress": {
            "$ref": "#/components/schemas/AddressParameters"
          },
          "CompanyAddress": {
            "$ref": "#/components/schemas/AddressParameters"
          },
          "AssociatedAccountData": {
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillCloseAccountParameters"
            },
            "description": "Account data of the associated account on a bill. Currently one object is supported and only populated when the bill is closed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillCloseParameters"
      },
      "BillCompanyData": {
        "title": "BillCompanyData",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "LegalIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "FiscalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "AdditionalTaxIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Additional information about the company assigned to the bill. Not the same as the owner. Persisted at the time of closing of the bill. **Deprecated!**",
        "x-schema-id": "BillCompanyData"
      },
      "BillCustomerData": {
        "title": "BillCustomerData",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "LegalIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "SecondLastName": {
            "type": "string",
            "nullable": true
          },
          "TitlePrefix": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillCustomerData"
      },
      "BillDeleteParameters": {
        "title": "BillDeleteParameters",
        "required": [
          "AccessToken",
          "BillIds",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "BillIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill)s to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillDeleteParameters"
      },
      "BillEnterpriseData": {
        "title": "BillEnterpriseData",
        "type": "object",
        "properties": {
          "AdditionalTaxIdentifier": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "BankAccount": {
            "type": "string",
            "nullable": true
          },
          "BankName": {
            "type": "string",
            "nullable": true
          },
          "Iban": {
            "type": "string",
            "nullable": true
          },
          "Bic": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Additional information about the enterprise issuing the bill, including bank account details. Persisted at the time of closing of the bill.",
        "x-schema-id": "BillEnterpriseData"
      },
      "BillExtent": {
        "title": "BillExtent",
        "type": "object",
        "properties": {
          "Items": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned. E.g. it is possible to specify that together with the bills, payments and revenue items should be also returned. **Deprecated!**",
        "x-schema-id": "BillExtent"
      },
      "BillFilterParameters": {
        "title": "BillFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/BillExtent"
          },
          "TimeFilter": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ClosedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "PaidUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "DueUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "BillIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Bills](https://mews-systems.gitbook.io/connector-api/operations/#bill). Required if no other filter is provided.",
            "nullable": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "nullable": true
          },
          "State": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BillState"
              }
            ],
            "description": "[Bill state](https://mews-systems.gitbook.io/connector-api/operations/#bill-state) the bills should be in. If not specified Open and Closed bills are returned.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillFilterParameters"
      },
      "BillFiscalMachineDataDiscriminator": {
        "enum": [
          "ItalianFiscalMachineData"
        ],
        "type": "string"
      },
      "BillOptions": {
        "title": "BillOptions",
        "type": "object",
        "properties": {
          "DisplayCustomer": {
            "type": "boolean"
          },
          "DisplayTaxation": {
            "type": "boolean"
          },
          "TrackReceivable": {
            "type": "boolean"
          },
          "DisplayCid": {
            "type": "boolean"
          },
          "Rebated": {
            "type": "boolean",
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Options of the bill.",
        "x-schema-id": "BillOptions"
      },
      "BillOptionsParameters": {
        "title": "BillOptionsParameters",
        "required": [
          "DisplayCustomer",
          "DisplayTaxation"
        ],
        "type": "object",
        "properties": {
          "DisplayCustomer": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "DisplayTaxation": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "TrackReceivable": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "DisplayCid": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "description": "Options of the bill. If not provided both DisplayCustomer and DisplayTaxation are set by default.",
        "x-schema-id": "BillOptionsParameters"
      },
      "BillPdfParameters": {
        "title": "BillPdfParameters",
        "required": [
          "AccessToken",
          "BillId",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill) to be printed.",
            "format": "uuid"
          },
          "BillPrintEventId": {
            "type": "string",
            "description": "Unique identifier of the [Bill print event](https://mews-systems.gitbook.io/connector-api/operations/#bill-print-event) returned by previous invocation.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillPdfParameters"
      },
      "BillResult": {
        "title": "BillResult",
        "type": "object",
        "properties": {
          "Bills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill"
            },
            "description": "The closed bill.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest bill returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older bills.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BillResult"
      },
      "BillState": {
        "enum": [
          "Open",
          "Closed"
        ],
        "type": "string"
      },
      "BookableServiceData": {
        "title": "BookableServiceData",
        "type": "object",
        "properties": {
          "StartOffset": {
            "type": "string",
            "nullable": true
          },
          "EndOffset": {
            "type": "string",
            "nullable": true
          },
          "OccupancyStartOffset": {
            "type": "string",
            "nullable": true
          },
          "OccupancyEndOffset": {
            "type": "string",
            "nullable": true
          },
          "TimeUnit": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "TimeUnitPeriod": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BookableServiceData"
      },
      "BooleanNullableUpdateValue": {
        "title": "BooleanNullableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BooleanNullableUpdateValue"
      },
      "BooleanUpdateValue": {
        "title": "BooleanUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BooleanUpdateValue"
      },
      "BusinessSegment": {
        "title": "Business segment",
        "required": [
          "CreatedUtc",
          "Id",
          "IsActive",
          "Name",
          "ServiceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the segment.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the business segment is still active."
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the segment."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the business segment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the business segment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BusinessSegment"
      },
      "BusinessSegmentFilterParameters": {
        "title": "BusinessSegmentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Ids": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Bussiness segment](https://mews-systems.gitbook.io/connector-api/operations/#business-segment).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) from which the business segments are requested."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BusinessSegmentFilterParameters"
      },
      "BusinessSegmentResult": {
        "title": "BusinessSegmentResult",
        "type": "object",
        "properties": {
          "BusinessSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessSegment"
            },
            "description": "Business segments of the default service.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "BusinessSegmentResult"
      },
      "CancellationFeeExtent": {
        "enum": [
          "TimeUnits",
          "Products"
        ],
        "type": "string"
      },
      "CancellationPolicy": {
        "title": "Cancellation Policy",
        "required": [
          "AbsoluteFee",
          "Applicability",
          "ApplicabilityOffset",
          "CreatedUtc",
          "FeeExtent",
          "Id",
          "RateGroupId",
          "RelativeFee",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the cancellation policy.",
            "format": "uuid"
          },
          "RateGroupId": {
            "type": "string",
            "description": "Unique identifier of the rate group the cancellation policy belongs to.",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the cancellation policy creation in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the cancellation policy update in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "Applicability": {
            "$ref": "#/components/schemas/CancellationPolicyApplicability"
          },
          "FeeExtent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancellationFeeExtent"
            },
            "description": "Extent for the cancellation fee, i.e. what should be in scope for the automatic payment."
          },
          "ApplicabilityOffset": {
            "minLength": 1,
            "type": "string",
            "description": "Offset for order start (assuming Applicability is set to Start) from which the fee is applied."
          },
          "FeeMaximumTimeUnits": {
            "type": "integer",
            "description": "Maximum number of time units the cancellation fee is applicable to.",
            "format": "int32",
            "nullable": true
          },
          "AbsoluteFee": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "RelativeFee": {
            "type": "number",
            "description": "Relative value of the fee, as a percentage of the reservation price.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CancellationPolicy"
      },
      "CancellationPolicyApplicability": {
        "enum": [
          "Creation",
          "Start",
          "StartDate"
        ],
        "type": "string"
      },
      "CancellationPolicyFilterParameters": {
        "title": "CancellationPolicyFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service)."
          },
          "CancellationPolicyIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Cancellation Policy](https://mews-systems.gitbook.io/connector-api/operations/#cancellationpolicy). Required if no other filter is provided.",
            "nullable": true
          },
          "RateGroupIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Rate group](https://mews-systems.gitbook.io/connector-api/operations/rates/#rategroup). Required if no other filter is provided.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CancellationPolicyFilterParameters"
      },
      "CancellationPolicyResult": {
        "title": "CancellationPolicyResult",
        "required": [
          "CancellationPolicies"
        ],
        "type": "object",
        "properties": {
          "CancellationPolicies": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancellationPolicy"
            },
            "description": "The filtered cancellation policies."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest cancellation policy returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older cancellation policies.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CancellationPolicyResult"
      },
      "Cashier": {
        "title": "Cashier",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "IsActive",
          "Name",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the cashier.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the cashier is still active."
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the cashier."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the rule in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the rule in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Cashier"
      },
      "CashierParameters": {
        "title": "CashierParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Ids": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Cashier](https://mews-systems.gitbook.io/connector-api/operations/#cashier).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CashierParameters"
      },
      "CashierResult": {
        "title": "CashierResult",
        "type": "object",
        "properties": {
          "Cashiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cashier"
            },
            "description": "Cashiers in the enterprise.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CashierResult"
      },
      "CashierTransaction": {
        "title": "Cashier transaction",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the transaction.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "CashierId": {
            "type": "string",
            "description": "Unique identifier of the [Cashier](https://mews-systems.gitbook.io/connector-api/operations/cashiers/#cashier).",
            "format": "uuid"
          },
          "PaymentId": {
            "type": "string",
            "description": "Unique identifier of the corresponding payment [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).",
            "format": "uuid",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Creation date and time of the transaction.",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "description": "Number of the transaction.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes of the transaction.",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CashierTransaction"
      },
      "CashierTransactionParameters": {
        "title": "CashierTransactionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "CashierTransactionIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CashierTransactionParameters"
      },
      "CashierTransactionResult": {
        "title": "CashierTransactionResult",
        "type": "object",
        "properties": {
          "CashierTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashierTransaction"
            },
            "description": "Cashier transactions created in the interval.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CashierTransactionResult"
      },
      "CategoryAdjustment": {
        "title": "CategoryAdjustment",
        "type": "object",
        "properties": {
          "CategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "ParentCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AbsoluteValue": {
            "type": "number",
            "format": "double"
          },
          "RelativeValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CategoryAdjustment"
      },
      "CategoryAvailability": {
        "title": "CategoryAvailability",
        "type": "object",
        "properties": {
          "CategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Availabilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "Adjustments": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CategoryAvailability"
      },
      "CategoryPricing": {
        "title": "CategoryPricing",
        "type": "object",
        "properties": {
          "CategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Prices": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true,
            "deprecated": true
          },
          "AmountPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CategoryPricing"
      },
      "ChannelManagerReservation": {
        "title": "ChannelManagerReservation",
        "type": "object",
        "properties": {
          "ReservationId": {
            "type": "string",
            "format": "uuid"
          },
          "RequestedRateCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ChannelManagerReservation"
      },
      "ChargeCreditCardParameters": {
        "title": "ChargeCreditCardParameters",
        "required": [
          "AccessToken",
          "Amount",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BillId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category).",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmountParameters"
          },
          "Category": {
            "$ref": "#/components/schemas/AccountingCategoryParameters"
          },
          "Notes": {
            "type": "string",
            "description": "Additional payment notes.",
            "nullable": true
          },
          "CreditCardId": {
            "type": "string",
            "description": "Unique identifier of the [Credit card](https://mews-systems.gitbook.io/connector-api/operations/#credit-card).",
            "format": "uuid"
          },
          "ReceiptIdentifier": {
            "type": "string",
            "description": "Identifier of the payment receipt.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ChargeCreditCardParameters"
      },
      "ChargeCreditCardResult": {
        "title": "ChargeCreditCardResult",
        "type": "object",
        "properties": {
          "PaymentId": {
            "type": "string",
            "description": "Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ChargeCreditCardResult"
      },
      "ChargeableCustomer": {
        "title": "ChargeableCustomer",
        "type": "object",
        "properties": {
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "Reservation": {
            "$ref": "#/components/schemas/ReservationOld"
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "RoomNumber": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ResourceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ChargeableCustomer"
      },
      "ClearRestrictionParameters": {
        "title": "ClearRestrictionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Data",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which the restrictions apply.",
            "format": "uuid"
          },
          "Data": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestrictionClearData"
            },
            "description": "Details of the matching conditions and time intervals for clearing restrictions."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ClearRestrictionParameters"
      },
      "Companionship": {
        "title": "Companionship",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/#companionship).",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          },
          "ReservationGroupId": {
            "type": "string",
            "description": "Unique identifier of [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).",
            "format": "uuid"
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of reservation.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Companionship"
      },
      "CompanionshipExtent": {
        "title": "CompanionshipExtent",
        "type": "object",
        "properties": {
          "Reservations": {
            "type": "boolean"
          },
          "ReservationGroups": {
            "type": "boolean"
          },
          "Customers": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned. E.g. it is possible to specify that together with the companionships, customers, reservations, and reservation groups should be also returned.",
        "x-schema-id": "CompanionshipExtent"
      },
      "CompanionshipFilterParameters": {
        "title": "CompanionshipFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "CompanionshipIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/#companionship).",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/CompanionshipExtent"
          },
          "ReservationIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of reservations.",
            "nullable": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "nullable": true
          },
          "ReservationGroupIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanionshipFilterParameters"
      },
      "CompanionshipResult": {
        "title": "CompanionshipResult",
        "type": "object",
        "properties": {
          "Companionships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Companionship"
            },
            "description": "Companionships.",
            "nullable": true
          },
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationOld"
            },
            "description": "The accompanied reservations.",
            "nullable": true
          },
          "ReservationGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationGroupOld"
            },
            "description": "The accompanied reservation groups.",
            "nullable": true
          },
          "Customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "description": "Customers that belong to the companionships.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanionshipResult"
      },
      "Company": {
        "title": "Company",
        "required": [
          "ChainId",
          "Id",
          "IsActive",
          "Name",
          "Number"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the company.",
            "format": "uuid"
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain.",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the company."
          },
          "MotherCompanyId": {
            "type": "string",
            "description": "Unique identifier of mother company.",
            "format": "uuid",
            "nullable": true
          },
          "InvoicingEmail": {
            "type": "string",
            "description": "Email for issuing invoices to the company.",
            "format": "email",
            "nullable": true
          },
          "WebsiteUrl": {
            "type": "string",
            "description": "The website url of the company.",
            "format": "uri",
            "nullable": true
          },
          "InvoiceDueInterval": {
            "type": "string",
            "description": "The maximum time, when the invoice has to be be paid in ISO 8601 duration format.",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/CompanyOptions"
          },
          "CreditRating": {
            "$ref": "#/components/schemas/CreditRating"
          },
          "Department": {
            "type": "string",
            "description": "The internal segmentation of a company, e.g. sales department.",
            "nullable": true
          },
          "DunsNumber": {
            "type": "string",
            "description": "The Dun & Bradstreet unique 9-digit DUNS number.",
            "nullable": true
          },
          "ReferenceIdentifier": {
            "type": "string",
            "description": "External system identifier - custom identifier used by an external system such as an external database.",
            "nullable": true
          },
          "AccountingCode": {
            "type": "string",
            "description": "Accounting code of the company.",
            "nullable": true
          },
          "AdditionalTaxIdentifier": {
            "type": "string",
            "description": "Additional tax identifier of the company.",
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "description": "Billing code of the company.",
            "nullable": true
          },
          "Contact": {
            "type": "string",
            "description": "Other contact details, such as telephone, email or similar.",
            "nullable": true
          },
          "ContactPerson": {
            "type": "string",
            "description": "Contact person of the company.",
            "nullable": true
          },
          "ElectronicInvoiceIdentifier": {
            "type": "string",
            "description": "Electronic invoice identifier of the company.",
            "nullable": true
          },
          "Identifier": {
            "type": "string",
            "description": "Other identifier of the company, e.g. legal identifier.",
            "nullable": true
          },
          "Iata": {
            "type": "string",
            "description": "Iata of the company.",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the company is still active."
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes.",
            "nullable": true
          },
          "Number": {
            "type": "integer",
            "description": "Unique number of the company.",
            "format": "int64"
          },
          "TaxIdentifier": {
            "type": "string",
            "description": "Tax identification number of the company.",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "description": "Contact telephone number.",
            "format": "tel",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Date of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company) creation date and time.",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Date of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company) last update date and time.",
            "format": "date-time",
            "nullable": true
          },
          "Address": {
            "$ref": "#/components/schemas/OldAddress"
          },
          "AddressId": {
            "type": "string",
            "description": "Unique identifier of the company [Address](https://mews-systems.gitbook.io/connector-api/operations/addresses/#account-address).",
            "format": "uuid",
            "nullable": true
          },
          "MergeTargetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "TaxIdentificationNumber": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of company from external system.",
            "nullable": true
          },
          "IsUpdatedByMe": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Company"
      },
      "CompanyAccount": {
        "title": "CompanyAccount",
        "type": "object",
        "properties": {
          "ChainId": {
            "type": "string",
            "format": "uuid"
          },
          "CreatedUtc": {
            "type": "string",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "nullable": true
          },
          "UpdaterProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "TaxIdentifier": {
            "type": "string",
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "nullable": true
          },
          "AccountingCode": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "MotherCompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "WebsiteUrl": {
            "type": "string",
            "nullable": true
          },
          "InvoiceDueInterval": {
            "type": "string",
            "nullable": true
          },
          "CreditRatingBasic": {
            "type": "string",
            "nullable": true
          },
          "Department": {
            "type": "string",
            "nullable": true
          },
          "DunsNumber": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "AdditionalTaxIdentifier": {
            "type": "string",
            "nullable": true
          },
          "Contact": {
            "type": "string",
            "nullable": true
          },
          "ContactPerson": {
            "type": "string",
            "nullable": true
          },
          "FiscalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "Iata": {
            "type": "string",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "nullable": true
          },
          "SourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Classifications": {
            "$ref": "#/components/schemas/CompanyAccountClassifications"
          },
          "Options": {
            "$ref": "#/components/schemas/CompanyAccountOptions"
          }
        },
        "additionalProperties": false,
        "description": "Updated company data.",
        "x-schema-id": "CompanyAccount"
      },
      "CompanyAccountClassifications": {
        "title": "CompanyAccountClassifications",
        "type": "object",
        "properties": {
          "Corporate": {
            "type": "boolean"
          },
          "Internal": {
            "type": "boolean"
          },
          "Private": {
            "type": "boolean"
          },
          "OnlineTravelAgency": {
            "type": "boolean"
          },
          "GlobalDistributionSystem": {
            "type": "boolean"
          },
          "Marketing": {
            "type": "boolean"
          },
          "Inactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyAccountClassifications"
      },
      "CompanyAccountOptions": {
        "title": "CompanyAccountOptions",
        "type": "object",
        "properties": {
          "Invoiceable": {
            "type": "boolean"
          },
          "AddFeesToInvoices": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyAccountOptions"
      },
      "CompanyAddParameters": {
        "title": "CompanyAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Name",
          "Options"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the company."
          },
          "MotherCompanyId": {
            "type": "string",
            "description": "Unique identifier of the mother company.",
            "format": "uuid",
            "nullable": true
          },
          "InvoicingEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "WebsiteUrl": {
            "type": "string",
            "description": "The website url of the company.",
            "format": "uri",
            "nullable": true
          },
          "InvoiceDueInterval": {
            "type": "string",
            "description": "The maximum time, when the invoice has to be be paid in ISO 8601 duration format.",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/CompanyOptionsParameters"
          },
          "CreditRating": {
            "$ref": "#/components/schemas/CreditRatingParameters"
          },
          "Department": {
            "type": "string",
            "description": "The internal segmentation of a company, e.g. sales department.",
            "nullable": true
          },
          "DunsNumber": {
            "type": "string",
            "description": "The Dun & Bradstreet unique 9-digit DUNS number.",
            "nullable": true
          },
          "ReferenceIdentifier": {
            "type": "string",
            "description": "External system identifier - custom identifier used by an external system such as an external database.",
            "nullable": true
          },
          "AccountingCode": {
            "type": "string",
            "description": "Accounting code of the company.",
            "nullable": true
          },
          "AdditionalTaxIdentifier": {
            "type": "string",
            "description": "Additional tax identifer of the company.",
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "description": "Billing code of the company.",
            "nullable": true
          },
          "Contact": {
            "type": "string",
            "description": "Other contact details, such as telephone, email or similar.",
            "nullable": true
          },
          "ContactPerson": {
            "type": "string",
            "description": "Contact person of the company.",
            "nullable": true
          },
          "Identifier": {
            "type": "string",
            "description": "Identifier of the company (e.g. legal identifier).",
            "nullable": true
          },
          "Iata": {
            "type": "string",
            "description": "Iata of the company.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Notes of the company.",
            "nullable": true
          },
          "TaxIdentifier": {
            "type": "string",
            "description": "Tax identification number of the company.",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "Address": {
            "$ref": "#/components/schemas/AddressParameters"
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of the company from external system.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyAddParameters"
      },
      "CompanyClassificationUpdateParameters": {
        "title": "CompanyClassificationUpdateParameters",
        "type": "object",
        "properties": {
          "Corporate": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Internal": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Private": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "OnlineTravelAgency": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "GlobalDistributionSystem": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Marketing": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Inactive": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyClassificationUpdateParameters"
      },
      "CompanyClassifications": {
        "title": "CompanyClassifications",
        "type": "object",
        "properties": {
          "Corporate": {
            "type": "boolean"
          },
          "Internal": {
            "type": "boolean"
          },
          "Private": {
            "type": "boolean"
          },
          "OnlineTravelAgency": {
            "type": "boolean"
          },
          "GlobalDistributionSystem": {
            "type": "boolean"
          },
          "Marketing": {
            "type": "boolean"
          },
          "Inactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyClassifications"
      },
      "CompanyClassificationsParameters": {
        "title": "CompanyClassificationsParameters",
        "type": "object",
        "properties": {
          "Corporate": {
            "type": "boolean"
          },
          "Internal": {
            "type": "boolean"
          },
          "Private": {
            "type": "boolean"
          },
          "OnlineTravelAgency": {
            "type": "boolean"
          },
          "GlobalDistributionSystem": {
            "type": "boolean"
          },
          "Marketing": {
            "type": "boolean"
          },
          "Inactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyClassificationsParameters"
      },
      "CompanyContractFilterParameters": {
        "title": "CompanyContractFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "CompanyContractIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the Travel agency contract to fetch.",
            "nullable": true
          },
          "CompanyIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) assigned with Travel agency contracts.",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) where the Travel agency contract belong to."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyContractFilterParameters"
      },
      "CompanyExtent": {
        "title": "CompanyExtent",
        "type": "object",
        "properties": {
          "Inactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyExtent"
      },
      "CompanyFilterParameters": {
        "title": "CompanyFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ChainIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.",
            "nullable": true
          },
          "TimeFilter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompanyTimeFilter"
              }
            ],
            "nullable": true,
            "deprecated": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "Ids": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/#company).",
            "nullable": true
          },
          "ExternalIdentifiers": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company) from external system.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Names": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names of [Companies](https://mews-systems.gitbook.io/connector-api/operations/#company).",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/CompanyExtent"
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyFilterParameters"
      },
      "CompanyNameParameters": {
        "title": "CompanyNameParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyNameParameters"
      },
      "CompanyOptionUpdateParameters": {
        "title": "CompanyOptionUpdateParameters",
        "type": "object",
        "properties": {
          "Invoiceable": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "AddFeesToInvoices": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "description": "Options of the company.",
        "x-schema-id": "CompanyOptionUpdateParameters"
      },
      "CompanyOptions": {
        "title": "CompanyOptions",
        "type": "object",
        "properties": {
          "Invoiceable": {
            "type": "boolean"
          },
          "AddFeesToInvoices": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Options of the company.",
        "x-schema-id": "CompanyOptions"
      },
      "CompanyOptionsParameters": {
        "title": "CompanyOptionsParameters",
        "type": "object",
        "properties": {
          "Invoiceable": {
            "type": "boolean"
          },
          "AddFeesToInvoices": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Options of the company.",
        "x-schema-id": "CompanyOptionsParameters"
      },
      "CompanyResult": {
        "title": "CompanyResult",
        "required": [
          "Companies"
        ],
        "type": "object",
        "properties": {
          "Companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "description": "The company profiles of the enterprise."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest company item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older companies. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) is specified in the request message, then Cursor will always be included in the response message; this is true even when using Extents set to false so that no actual data is returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyResult"
      },
      "CompanyTimeFilter": {
        "enum": [
          "Created",
          "Updated"
        ],
        "type": "string"
      },
      "CompanyUpdateParameters": {
        "title": "CompanyUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CompanyId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/#company).",
            "format": "uuid"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "MotherCompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "InvoicingEmail": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "WebsiteUrl": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "InvoiceDueInterval": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Options": {
            "$ref": "#/components/schemas/CompanyOptionUpdateParameters"
          },
          "CreditRating": {
            "$ref": "#/components/schemas/CreditRatingUpdateParameters"
          },
          "Department": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "DunsNumber": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ReferenceIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AccountingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AdditionalTaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "BillingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Contact": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ContactPerson": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Identifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Iata": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Notes": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "TaxIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Telephone": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ExternalIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CompanyUpdateParameters"
      },
      "Configuration": {
        "title": "Configuration",
        "type": "object",
        "properties": {
          "NowUtc": {
            "type": "string",
            "description": "Current server date and time in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "Enterprise": {
            "$ref": "#/components/schemas/Enterprise"
          },
          "Service": {
            "$ref": "#/components/schemas/Service"
          },
          "PaymentCardStorage": {
            "$ref": "#/components/schemas/PaymentCardStorage"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Configuration"
      },
      "ConfigurationFilterParameters": {
        "title": "ConfigurationFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/#enterprise), defaults to the enterprise associated with the given access token.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ConfigurationFilterParameters"
      },
      "ConfirmReservationParameters": {
        "title": "ConfirmReservationParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReservationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the reservations to confirm."
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ReservationExtent"
          },
          "SendConfirmationEmail": {
            "type": "boolean",
            "description": "Wheter the confirmation email is sent. Default value is true.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ConfirmReservationParameters"
      },
      "ContractResult": {
        "title": "ContractResult",
        "required": [
          "TravelAgencyContracts"
        ],
        "type": "object",
        "properties": {
          "TravelAgencyContracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelAgencyContract"
            },
            "description": "The updated travel agency contracts."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest contract returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older messages.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ContractResult"
      },
      "Coproduct": {
        "title": "Coproduct",
        "required": [
          "Discriminator",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Discriminator": {
            "minLength": 1,
            "type": "string"
          },
          "Value": {}
        },
        "additionalProperties": false,
        "x-schema-id": "Coproduct"
      },
      "CoproductParameters": {
        "title": "CoproductParameters",
        "type": "object",
        "properties": {
          "Discriminator": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "$ref": "#/components/schemas/JToken"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CoproductParameters"
      },
      "CostParameters": {
        "title": "CostParameters",
        "required": [
          "Amount",
          "Currency",
          "Tax"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "Tax": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CostParameters"
      },
      "Counter": {
        "title": "Counter",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "Format",
          "Id",
          "IsDefault",
          "Name",
          "Type",
          "UpdatedUtc",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the counter.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the counter."
          },
          "IsDefault": {
            "type": "boolean",
            "description": "Whether the counter is used by default."
          },
          "Value": {
            "type": "integer",
            "description": "Current value the counter.",
            "format": "int64"
          },
          "Format": {
            "minLength": 1,
            "type": "string",
            "description": "Format the counter is displayed in."
          },
          "Type": {
            "$ref": "#/components/schemas/EnterpriseScopeCounterDiscriminator"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the counter in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the counter in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Counter"
      },
      "CounterFilterParameters": {
        "title": "CounterFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "CounterIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnterpriseScopeCounterDiscriminator"
              }
            ],
            "description": "Type of the counter. If not specified, the operation returns all types.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CounterFilterParameters"
      },
      "CounterResult": {
        "title": "CounterResult",
        "required": [
          "BillCounters",
          "BillPreviewCounters",
          "Counters",
          "ProformaCounters",
          "RegistrationCardCounters",
          "ServiceOrderCounters"
        ],
        "type": "object",
        "properties": {
          "Counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            },
            "description": "All types of counters."
          },
          "BillCounters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            },
            "description": "The counters used to count closed [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill). **Deprecated!**",
            "deprecated": true
          },
          "ProformaCounters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            },
            "description": "The counters used to count Pro Forma invoices for [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill). **Deprecated!**",
            "deprecated": true
          },
          "BillPreviewCounters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            },
            "description": "The counters used to count bill previews for [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill). **Deprecated!**",
            "deprecated": true
          },
          "ServiceOrderCounters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            },
            "description": "The counters used to count service orders (for example reservations). **Deprecated!**",
            "deprecated": true
          },
          "RegistrationCardCounters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            },
            "description": "The counters used to count registration cards. **Deprecated!**",
            "deprecated": true
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CounterResult"
      },
      "Country": {
        "title": "Country",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 code, e.g. US or GB.",
            "nullable": true
          },
          "SovereignCountryCode": {
            "type": "string",
            "nullable": true
          },
          "EnglishName": {
            "type": "string",
            "description": "English name of the country.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Country"
      },
      "CountryGroup": {
        "title": "CountryGroup",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "EnglishName": {
            "type": "string",
            "nullable": true
          },
          "CountryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CountryGroup"
      },
      "CountryResult": {
        "title": "CountryResult",
        "type": "object",
        "properties": {
          "Countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Country"
            },
            "description": "The supported countries.",
            "nullable": true
          },
          "CountrySubdivisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountrySubdivision"
            },
            "description": "The supported country subdivisions.",
            "nullable": true
          },
          "CountryRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryRule"
            },
            "nullable": true
          },
          "CountryGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CountryResult"
      },
      "CountryRule": {
        "title": "CountryRule",
        "type": "object",
        "properties": {
          "CountryCode": {
            "type": "string",
            "nullable": true
          },
          "IdentityCardExpirationDateNotRequired": {
            "type": "boolean"
          },
          "DriverLicenceExpirationDateNotRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CountryRule"
      },
      "CountrySubdivision": {
        "title": "Country subdivision",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "ISO 3166-2 code of the administrative division, e.g AU-QLD.",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "description": "ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/#country).",
            "nullable": true
          },
          "EnglishName": {
            "type": "string",
            "description": "English name of the country subdivision.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CountrySubdivision"
      },
      "CreditCard": {
        "title": "Credit card",
        "required": [
          "CreatedUtc",
          "CustomerId",
          "Id",
          "IsActive",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the credit card.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the credit card [owner](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the credit card is still active."
          },
          "State": {
            "type": "string",
            "description": "State of the credit card.",
            "nullable": true
          },
          "Kind": {
            "type": "string",
            "description": "Kind of the credit card.",
            "nullable": true
          },
          "Format": {
            "type": "string",
            "description": "Format of the credit card.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Type of the credit card.",
            "nullable": true
          },
          "ObfuscatedNumber": {
            "type": "string",
            "description": "Obfuscated credit card number. At most first six digits and last four digits can be specified, otherwise the digits are replaced with *.",
            "nullable": true
          },
          "Expiration": {
            "type": "string",
            "description": "Expiration of the credit card in format MM/YYYY.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the credit card in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the credit card in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CreditCard"
      },
      "CreditCardData": {
        "title": "CreditCardData",
        "required": [
          "Expiration",
          "StorageData"
        ],
        "type": "object",
        "properties": {
          "MaskedStorageData": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "StorageData": {
            "minLength": 1,
            "type": "string"
          },
          "ObfuscatedNumber": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Expiration": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Credit card details provided by PCI provider.",
        "x-schema-id": "CreditCardData"
      },
      "CreditCardFilterParameters": {
        "title": "CreditCardFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "CreditCardIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Credit cards](https://mews-systems.gitbook.io/connector-api/operations/#credit-card). Required if no other filter is provided.",
            "nullable": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CreditCardFilterParameters"
      },
      "CreditCardParameters": {
        "title": "CreditCardParameters",
        "required": [
          "Name",
          "Number",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "minLength": 1,
            "type": "string"
          },
          "ObfuscatedNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Number": {
            "minLength": 1,
            "type": "string"
          },
          "Expiration": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Credit card details.",
        "x-schema-id": "CreditCardParameters"
      },
      "CreditCardPaymentParameters": {
        "title": "CreditCardPaymentParameters",
        "required": [
          "AccessToken",
          "Amount",
          "Client",
          "ClientToken",
          "CreditCard",
          "CustomerId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of an open bill of the customer where to assign the payment.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of an [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) to be assigned to the credit card payment.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmountParameters"
          },
          "Category": {
            "$ref": "#/components/schemas/AccountingCategoryParameters"
          },
          "Notes": {
            "type": "string",
            "description": "Additional payment notes.",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          },
          "CreditCard": {
            "$ref": "#/components/schemas/CreditCardParameters"
          },
          "ReceiptIdentifier": {
            "type": "string",
            "description": "Identifier of the payment receipt.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CreditCardPaymentParameters"
      },
      "CreditCardResult": {
        "title": "CreditCardResult",
        "type": "object",
        "properties": {
          "CreditCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCard"
            },
            "description": "The credit cards.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CreditCardResult"
      },
      "CreditCardTransaction": {
        "title": "Credit card transaction",
        "type": "object",
        "properties": {
          "PaymentId": {
            "type": "string",
            "description": "Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/#payment-item).",
            "format": "uuid"
          },
          "SettlementId": {
            "type": "string",
            "description": "Identifier of the settlement.",
            "nullable": true
          },
          "SettledUtc": {
            "type": "string",
            "description": "Settlement date and time in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "Fee": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "AdjustedFee": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "ChargedAmount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "SettledAmount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CreditCardTransaction"
      },
      "CreditRating": {
        "title": "CreditRating",
        "type": "object",
        "properties": {
          "Basic": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Credit rating to define creditworthiness of the company.",
        "x-schema-id": "CreditRating"
      },
      "CreditRatingParameters": {
        "title": "CreditRatingParameters",
        "type": "object",
        "properties": {
          "Basic": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Credit rating to define creditworthiness of the company.",
        "x-schema-id": "CreditRatingParameters"
      },
      "CreditRatingUpdateParameters": {
        "title": "CreditRatingUpdateParameters",
        "type": "object",
        "properties": {
          "Basic": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "description": "Credit rating to define creditworthiness of the company.",
        "x-schema-id": "CreditRatingUpdateParameters"
      },
      "Culture": {
        "title": "Culture",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "EnglishName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Culture"
      },
      "CultureResult": {
        "title": "CultureResult",
        "type": "object",
        "properties": {
          "Cultures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Culture"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CultureResult"
      },
      "Currency": {
        "title": "Currency",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "ISO-4217 three-letter code, e.g. USD or GBP.",
            "nullable": true
          },
          "Precision": {
            "type": "integer",
            "description": "Precision of the currency (count of decimal places).",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Currency"
      },
      "CurrencyAcceptance": {
        "title": "CurrencyAcceptance",
        "required": [
          "Currency",
          "IsDefault",
          "IsEnabled"
        ],
        "type": "object",
        "properties": {
          "Currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "IsDefault": {
            "type": "boolean"
          },
          "IsEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CurrencyAcceptance"
      },
      "CurrencyAcceptanceFilterParameters": {
        "title": "CurrencyAcceptanceFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "EnterpriseIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CurrencyAcceptanceFilterParameters"
      },
      "CurrencyResult": {
        "title": "CurrencyResult",
        "type": "object",
        "properties": {
          "Currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "description": "The supported currencies.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CurrencyResult"
      },
      "CurrencyValue": {
        "title": "CurrencyValue",
        "required": [
          "Currency",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "Value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Absolute value of the fee.",
        "x-schema-id": "CurrencyValue"
      },
      "CurrencyValueOld": {
        "title": "CurrencyValueOld",
        "required": [
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "Value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Net": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Tax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "TaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Total price of the reservation.",
        "x-schema-id": "CurrencyValueOld"
      },
      "CurrencyValueOldUpdateValue": {
        "title": "CurrencyValueOldUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CurrencyValueOldUpdateValue"
      },
      "Customer": {
        "title": "Customer",
        "required": [
          "ActivityState",
          "ChainId",
          "Classifications",
          "CreatedUtc",
          "Id",
          "LastName",
          "Options",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the customer.",
            "format": "uuid"
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain.",
            "format": "uuid"
          },
          "Number": {
            "type": "string",
            "description": "Number of the customer.",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "description": "Title prefix of the customer.",
            "nullable": true
          },
          "Sex": {
            "type": "string",
            "description": "Sex of the customer.",
            "nullable": true
          },
          "Gender": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "FirstName": {
            "type": "string",
            "description": "First name of the customer.",
            "nullable": true
          },
          "LastName": {
            "minLength": 1,
            "type": "string",
            "description": "Last name of the customer."
          },
          "SecondLastName": {
            "type": "string",
            "description": "Second last name of the customer.",
            "nullable": true
          },
          "NationalityCode": {
            "type": "string",
            "description": "ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).",
            "nullable": true
          },
          "LanguageCode": {
            "type": "string",
            "description": "Language and culture code of the customers preferred language. E.g. en-US or fr-FR.",
            "nullable": true
          },
          "BirthDate": {
            "type": "string",
            "description": "Date of birth in ISO 8601 format.",
            "nullable": true
          },
          "BirthPlace": {
            "type": "string",
            "description": "Place of birth.",
            "nullable": true
          },
          "CitizenNumber": {
            "type": "string",
            "nullable": true
          },
          "MotherName": {
            "type": "string",
            "nullable": true
          },
          "FatherName": {
            "type": "string",
            "nullable": true
          },
          "Occupation": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Email address of the customer.",
            "nullable": true
          },
          "HasOtaEmail": {
            "type": "boolean"
          },
          "Phone": {
            "type": "string",
            "description": "Phone number of the customer (possibly mobile).",
            "nullable": true
          },
          "TaxIdentificationNumber": {
            "type": "string",
            "description": "Tax identification number of the customer.",
            "nullable": true
          },
          "LoyaltyCode": {
            "type": "string",
            "description": "Loyalty code of the customer.",
            "nullable": true
          },
          "AccountingCode": {
            "type": "string",
            "description": "Accounting code of the customer.",
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "description": "Billing code of the customer.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Internal notes about the customer.",
            "nullable": true
          },
          "CarRegistrationNumber": {
            "type": "string",
            "description": "Registration number of the customer's car.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the customer in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the customer in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "Passport": {
            "$ref": "#/components/schemas/Document"
          },
          "IdentityCard": {
            "$ref": "#/components/schemas/Document"
          },
          "Visa": {
            "$ref": "#/components/schemas/Document"
          },
          "DriversLicense": {
            "$ref": "#/components/schemas/Document"
          },
          "Address": {
            "$ref": "#/components/schemas/OldAddress"
          },
          "AddressId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Classifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Classifications of the customer."
          },
          "Options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Options of the customer."
          },
          "CategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "BirthDateUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ItalianDestinationCode": {
            "type": "string",
            "description": "Value of Italian destination code.",
            "nullable": true
          },
          "ItalianFiscalCode": {
            "type": "string",
            "description": "Value of Italian fiscal code.",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) the customer is associated with.",
            "format": "uuid",
            "nullable": true
          },
          "MergeTargetId": {
            "type": "string",
            "description": "Unique identifier of the account ([Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer)) to which this customer is linked.",
            "format": "uuid",
            "nullable": true
          },
          "ActivityState": {
            "minLength": 1,
            "type": "string",
            "description": "[Activity State](https://mews-systems.gitbook.io/connector-api/operations/#activity-state) of customer record, i.e. whether active or deleted."
          },
          "IsUpdatedByMe": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Customer"
      },
      "CustomerAccount": {
        "title": "CustomerAccount",
        "type": "object",
        "properties": {
          "ChainId": {
            "type": "string",
            "format": "uuid"
          },
          "CreatedUtc": {
            "type": "string",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "nullable": true
          },
          "UpdaterProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "TaxIdentifier": {
            "type": "string",
            "nullable": true
          },
          "BillingCode": {
            "type": "string",
            "nullable": true
          },
          "AccountingCode": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "SecondLastName": {
            "type": "string",
            "nullable": true
          },
          "BirthPlace": {
            "type": "string",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "nullable": true
          },
          "Occupation": {
            "type": "string",
            "nullable": true
          },
          "CarRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyCode": {
            "type": "string",
            "nullable": true
          },
          "NationalityCode": {
            "type": "string",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BirthDate": {
            "type": "string",
            "nullable": true
          },
          "Sex": {
            "type": "string",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "PreferredLanguageCode": {
            "type": "string",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/CustomerAccountOptions"
          },
          "Classifications": {
            "$ref": "#/components/schemas/CustomerAccountClassifications"
          },
          "LegalEntityIdentifiers": {
            "$ref": "#/components/schemas/LegalEntityIdentifiers"
          }
        },
        "additionalProperties": false,
        "description": "Updated customer data.",
        "x-schema-id": "CustomerAccount"
      },
      "CustomerAccountClassifications": {
        "title": "CustomerAccountClassifications",
        "type": "object",
        "properties": {
          "PaymasterAccount": {
            "type": "boolean"
          },
          "Blacklist": {
            "type": "boolean"
          },
          "Media": {
            "type": "boolean"
          },
          "LoyaltyProgram": {
            "type": "boolean"
          },
          "PreviousComplaint": {
            "type": "boolean"
          },
          "Returning": {
            "type": "boolean"
          },
          "Staff": {
            "type": "boolean"
          },
          "FriendOrFamily": {
            "type": "boolean"
          },
          "TopManagement": {
            "type": "boolean"
          },
          "Important": {
            "type": "boolean"
          },
          "VeryImportant": {
            "type": "boolean"
          },
          "Problematic": {
            "type": "boolean"
          },
          "Cashlist": {
            "type": "boolean"
          },
          "DisabledPerson": {
            "type": "boolean"
          },
          "Military": {
            "type": "boolean"
          },
          "Airline": {
            "type": "boolean"
          },
          "HealthCompliant": {
            "type": "boolean"
          },
          "InRoom": {
            "type": "boolean"
          },
          "WaitingForRoom": {
            "type": "boolean"
          },
          "Student": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerAccountClassifications"
      },
      "CustomerAccountOptions": {
        "title": "CustomerAccountOptions",
        "type": "object",
        "properties": {
          "SendMarketingEmails": {
            "type": "boolean"
          },
          "Invoiceable": {
            "type": "boolean"
          },
          "BillAddressObjection": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerAccountOptions"
      },
      "CustomerAddParameters": {
        "title": "CustomerAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "OverwriteExisting"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Title": {
            "type": "string",
            "description": "Title prefix of the customer.",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "description": "First name of the customer.",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "description": "Last name of the customer.",
            "nullable": true
          },
          "SecondLastName": {
            "type": "string",
            "description": "Second last name of the customer.",
            "nullable": true
          },
          "NationalityCode": {
            "type": "string",
            "description": "ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).",
            "nullable": true
          },
          "Sex": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sex"
              }
            ],
            "description": "Sex of the customer.",
            "nullable": true
          },
          "Gender": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "BirthDate": {
            "type": "string",
            "description": "Date of birth in ISO 8601 format.",
            "nullable": true
          },
          "BirthPlace": {
            "type": "string",
            "description": "Place of birth.",
            "nullable": true
          },
          "Occupation": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Email address of the customer.",
            "format": "email",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Phone number of the customer (possibly mobile).",
            "format": "tel",
            "nullable": true
          },
          "LoyaltyCode": {
            "type": "string",
            "description": "Loyalty code of the customer.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Internal notes about the customer.",
            "nullable": true
          },
          "CarRegistrationNumber": {
            "type": "string",
            "description": "Registration number of the customer's car.",
            "nullable": true
          },
          "TaxIdentificationNumber": {
            "type": "string",
            "description": "Tax identification number of the customer.",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Address": {
            "$ref": "#/components/schemas/AddressParameters"
          },
          "IdentityCard": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "Passport": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "Visa": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "DriversLicense": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "Classifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Classifications of the customer.",
            "nullable": true
          },
          "Options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Options of the customer.",
            "nullable": true
          },
          "BirthDateUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "OverwriteExisting": {
            "type": "boolean",
            "description": "Whether an existing customer should be overwritten in case of duplicity. This applies only to basic personal information (Title, FirstName, LastName, ...)."
          },
          "ItalianDestinationCode": {
            "type": "string",
            "description": "Value of Italian destination code.",
            "nullable": true
          },
          "ItalianFiscalCode": {
            "type": "string",
            "description": "Value of Italian fiscal code.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerAddParameters"
      },
      "CustomerClassificationUpdateParameters": {
        "title": "CustomerClassificationUpdateParameters",
        "type": "object",
        "properties": {
          "PaymasterAccount": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Blacklist": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Media": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "LoyaltyProgram": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "PreviousComplaint": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Returning": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Staff": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "FriendOrFamily": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "TopManagement": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Important": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "VeryImportant": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Problematic": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Cashlist": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "DisabledPerson": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Military": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Airline": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "HealthCompliant": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "InRoom": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "WaitingForRoom": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Student": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerClassificationUpdateParameters"
      },
      "CustomerEmailParameters": {
        "title": "CustomerEmailParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerEmailParameters"
      },
      "CustomerExtent": {
        "title": "CustomerExtent",
        "type": "object",
        "properties": {
          "Customers": {
            "type": "boolean"
          },
          "Documents": {
            "type": "boolean"
          },
          "Addresses": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned.",
        "x-schema-id": "CustomerExtent"
      },
      "CustomerFileParameters": {
        "title": "CustomerFileParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerId",
          "Data",
          "Name",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the file."
          },
          "Type": {
            "minLength": 1,
            "type": "string",
            "description": "MIME type of the file (e.g. application/pdf)."
          },
          "Data": {
            "minLength": 1,
            "type": "string",
            "description": "Base64-encoded data of the file."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerFileParameters"
      },
      "CustomerFilterParameters": {
        "title": "CustomerFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ChainIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/CustomerExtent"
          },
          "TimeFilter": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "DeletedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer). Required if no other filter is provided.",
            "nullable": true
          },
          "Emails": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Emails of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "nullable": true
          },
          "FirstNames": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "First names of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "nullable": true
          },
          "LastNames": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Last names of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "nullable": true
          },
          "LoyaltyCodes": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Loyalty codes of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "nullable": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerFilterParameters"
      },
      "CustomerItemParameters": {
        "title": "CustomerItemParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer)."
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerItemParameters"
      },
      "CustomerItemResult": {
        "title": "CustomerItemResult",
        "type": "object",
        "properties": {
          "Customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerItems"
            },
            "description": "The customers with their items.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerItemResult"
      },
      "CustomerItems": {
        "title": "Customer items",
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "format": "uuid"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItem"
            },
            "nullable": true
          },
          "OrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemOld"
            },
            "description": "The open order items (consumed items such as nights or products).",
            "nullable": true
          },
          "PaymentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentItemOld"
            },
            "description": "The open payment items (such as cash, credit card payments or invoices).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerItems"
      },
      "CustomerMergeParameters": {
        "title": "CustomerMergeParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "SourceCustomerId",
          "TargetCustomerId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "SourceCustomerId": {
            "type": "string",
            "description": "Unique identifier of the source [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "format": "uuid"
          },
          "TargetCustomerId": {
            "type": "string",
            "description": "Unique identifier of the target [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerMergeParameters"
      },
      "CustomerNameParameters": {
        "title": "CustomerNameParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerNameParameters"
      },
      "CustomerOptionUpdateParameters": {
        "title": "CustomerOptionUpdateParameters",
        "type": "object",
        "properties": {
          "SendMarketingEmails": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Invoiceable": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "BillAddressObjection": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerOptionUpdateParameters"
      },
      "CustomerResult": {
        "title": "CustomerResult",
        "type": "object",
        "properties": {
          "Customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "description": "The customers.",
            "nullable": true
          },
          "Documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": "The identity documents of customers.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest customer item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older customers. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) is specified in the request message, then Cursor will always be included in the response message; this is true even when using Extents set to false so that no actual data is returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerResult"
      },
      "CustomerSearchParameters": {
        "title": "CustomerSearchParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Operator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SearchOperator"
              }
            ],
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name to search by (applies to first name, last name and full name).",
            "nullable": true
          },
          "ResourceId": {
            "type": "string",
            "description": "Identifier of [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource) to search by (members of reservation assigned there will be returned).",
            "format": "uuid",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/CustomerExtent"
          },
          "RoomNumber": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerSearchParameters"
      },
      "CustomerSearchResult": {
        "title": "CustomerSearchResult",
        "type": "object",
        "properties": {
          "Customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeableCustomer"
            },
            "description": "The customer search results.",
            "nullable": true
          },
          "Documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerSearchResult"
      },
      "CustomerUpdateParameters": {
        "title": "CustomerUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Title": {
            "type": "string",
            "description": "New title.",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "description": "New first name.",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "description": "New last name.",
            "nullable": true
          },
          "SecondLastName": {
            "type": "string",
            "description": "New second last name.",
            "nullable": true
          },
          "NationalityCode": {
            "type": "string",
            "description": "ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).",
            "nullable": true
          },
          "Sex": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sex"
              }
            ],
            "description": "Sex of the customer.",
            "nullable": true
          },
          "Gender": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "BirthDate": {
            "type": "string",
            "description": "New birth date in ISO 8601 format.",
            "nullable": true
          },
          "BirthPlace": {
            "type": "string",
            "nullable": true
          },
          "Occupation": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "New email address.",
            "format": "email",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "New phone number.",
            "format": "tel",
            "nullable": true
          },
          "LoyaltyCode": {
            "type": "string",
            "description": "Loyalty code of the customer.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Internal notes about the customer. Old value will be overwritten.",
            "nullable": true
          },
          "CarRegistrationNumber": {
            "type": "string",
            "description": "New registration number of the customer's car.",
            "nullable": true
          },
          "TaxIdentificationNumber": {
            "type": "string",
            "description": "New tax identification number of the customer.",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Address": {
            "$ref": "#/components/schemas/AddressParameters"
          },
          "IdentityCard": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "Passport": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "Visa": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "DriversLicense": {
            "$ref": "#/components/schemas/DocumentParameters"
          },
          "Classifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "New classifications of the customer.",
            "nullable": true
          },
          "Options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Options of the customer.",
            "nullable": true
          },
          "BirthDateUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "format": "uuid"
          },
          "ItalianDestinationCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ItalianFiscalCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "CustomerUpdateParameters"
      },
      "DateRestriction": {
        "title": "DateRestriction",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "IsInherited": {
            "type": "boolean"
          },
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          },
          "Days": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DateRestriction"
      },
      "DateTimeIntervalUtc": {
        "title": "DateTimeIntervalUtc",
        "type": "object",
        "properties": {
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DateTimeIntervalUtc"
      },
      "DaysParameters": {
        "title": "DaysParameters",
        "required": [
          "Friday",
          "Monday",
          "Saturday",
          "Sunday",
          "Thursday",
          "Tuesday",
          "Wednesday"
        ],
        "type": "object",
        "properties": {
          "Monday": {
            "type": "boolean"
          },
          "Tuesday": {
            "type": "boolean"
          },
          "Wednesday": {
            "type": "boolean"
          },
          "Thursday": {
            "type": "boolean"
          },
          "Friday": {
            "type": "boolean"
          },
          "Saturday": {
            "type": "boolean"
          },
          "Sunday": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DaysParameters"
      },
      "DecimalNullableUpdateValue": {
        "title": "DecimalNullableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DecimalNullableUpdateValue"
      },
      "DeleteRestrictionParameters": {
        "title": "DeleteRestrictionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "RestrictionIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "RestrictionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Restrictions](https://mews-systems.gitbook.io/connector-api/operations/#restriction)."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeleteRestrictionParameters"
      },
      "Department": {
        "title": "Department",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "IsActive",
          "Name",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the department.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the department is still active."
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the department."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the department in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the department in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Department"
      },
      "DepartmentFilterParameters": {
        "title": "DepartmentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "DepartmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Department](https://mews-systems.gitbook.io/connector-api/operations/#department).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DepartmentFilterParameters"
      },
      "DepartmentResult": {
        "title": "DepartmentResult",
        "required": [
          "Departments"
        ],
        "type": "object",
        "properties": {
          "Departments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            },
            "description": "The departments of the enterprise."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DepartmentResult"
      },
      "DependentRatePricingParameters": {
        "title": "DependentRatePricingParameters",
        "type": "object",
        "properties": {
          "BaseRateId": {
            "type": "string",
            "format": "uuid"
          },
          "RelativeAdjustment": {
            "type": "number",
            "format": "double"
          },
          "AbsoluteAdjustment": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DependentRatePricingParameters"
      },
      "DependentTaxRateStrategy": {
        "title": "DependentTaxRateStrategy",
        "type": "object",
        "properties": {
          "Value": {
            "type": "number",
            "format": "double"
          },
          "BaseTaxationCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DependentTaxRateStrategy"
      },
      "Device": {
        "title": "Device",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Device"
      },
      "DeviceCommand": {
        "title": "DeviceCommand",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "nullable": true
          },
          "Creator": {
            "$ref": "#/components/schemas/User"
          },
          "Device": {
            "$ref": "#/components/schemas/Device"
          },
          "Data": {
            "$ref": "#/components/schemas/DeviceCommandData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeviceCommand"
      },
      "DeviceCommandAddResult": {
        "title": "DeviceCommandAddResult",
        "type": "object",
        "properties": {
          "CommandId": {
            "type": "string",
            "description": "Unique identifier of the created [Command](https://mews-systems.gitbook.io/connector-api/operations/#command).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeviceCommandAddResult"
      },
      "DeviceCommandData": {
        "type": "object",
        "oneOf": [
          {
            "title": "PaymentTerminalCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "title": "PrinterCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "title": "KeyCutterCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "title": "FiscalMachineCommandData",
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/PaymentTerminalCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PrinterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/KeyCutterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/FiscalMachineCommandData"
                          },
                          {
                            "title": "PassportScannerCommandData",
                            "type": "object",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/PaymentTerminalCommandData"
                              },
                              {
                                "$ref": "#/components/schemas/PrinterCommandData"
                              },
                              {
                                "$ref": "#/components/schemas/KeyCutterCommandData"
                              },
                              {
                                "$ref": "#/components/schemas/FiscalMachineCommandData"
                              },
                              {
                                "$ref": "#/components/schemas/PassportScannerCommandData"
                              }
                            ],
                            "properties": {
                              "PassportScannerId": {
                                "type": "string",
                                "nullable": true
                              },
                              "ReservationId": {
                                "type": "string",
                                "format": "uuid",
                                "nullable": true
                              },
                              "CustomerId": {
                                "type": "string",
                                "format": "uuid",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false,
                            "x-schema-id": "PassportScannerCommandData"
                          }
                        ],
                        "properties": {
                          "FiscalMachineId": {
                            "type": "string",
                            "nullable": true
                          },
                          "ApiUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "FiscalMachineData": {
                            "type": "string",
                            "nullable": true
                          },
                          "Bill": {
                            "$ref": "#/components/schemas/Bill"
                          },
                          "TaxIdentifier": {
                            "type": "string",
                            "nullable": true
                          },
                          "BillFiscalMachineData": {
                            "title": "BillFiscalMachineData",
                            "properties": {
                              "discriminator": {
                                "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/ItalianFiscalMachineData"
                                  }
                                ]
                              }
                            }
                          },
                          "PayloadData": {
                            "title": "PayloadData",
                            "properties": {
                              "discriminator": {
                                "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-schema-id": "FiscalMachineCommandData"
                      },
                      {
                        "title": "PassportScannerCommandData",
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/PaymentTerminalCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PrinterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/KeyCutterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/FiscalMachineCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PassportScannerCommandData"
                          }
                        ],
                        "properties": {
                          "PassportScannerId": {
                            "type": "string",
                            "nullable": true
                          },
                          "ReservationId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "CustomerId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false,
                        "x-schema-id": "PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "KeyCutterId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ApiUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "UserName": {
                        "type": "string",
                        "nullable": true
                      },
                      "Password": {
                        "type": "string",
                        "nullable": true
                      },
                      "KeyCutterData": {
                        "type": "string",
                        "nullable": true
                      },
                      "KeyCount": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "LockIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      },
                      "StartUtc": {
                        "type": "string",
                        "nullable": true
                      },
                      "EndUtc": {
                        "type": "string",
                        "nullable": true
                      },
                      "FirstName": {
                        "type": "string",
                        "nullable": true
                      },
                      "LastName": {
                        "type": "string",
                        "nullable": true
                      },
                      "Telephone": {
                        "type": "string",
                        "nullable": true
                      },
                      "Email": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "ReservationNumber": {
                        "type": "string",
                        "nullable": true
                      },
                      "KeyMode": {
                        "type": "string",
                        "nullable": true
                      },
                      "ExternalRequestIdentifier": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "KeyCutterCommandData"
                  },
                  {
                    "title": "FiscalMachineCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "title": "PassportScannerCommandData",
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/PaymentTerminalCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PrinterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/KeyCutterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/FiscalMachineCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PassportScannerCommandData"
                          }
                        ],
                        "properties": {
                          "PassportScannerId": {
                            "type": "string",
                            "nullable": true
                          },
                          "ReservationId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "CustomerId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false,
                        "x-schema-id": "PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "FiscalMachineId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ApiUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "FiscalMachineData": {
                        "type": "string",
                        "nullable": true
                      },
                      "Bill": {
                        "$ref": "#/components/schemas/Bill"
                      },
                      "TaxIdentifier": {
                        "type": "string",
                        "nullable": true
                      },
                      "BillFiscalMachineData": {
                        "title": "BillFiscalMachineData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ItalianFiscalMachineData"
                              }
                            ]
                          }
                        }
                      },
                      "PayloadData": {
                        "title": "PayloadData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "CopyCount": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "FileType": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileData": {
                    "type": "string",
                    "nullable": true
                  },
                  "PrinterName": {
                    "type": "string",
                    "nullable": true
                  },
                  "PrinterDriverName": {
                    "type": "string",
                    "nullable": true
                  },
                  "PrinterPortName": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PrinterCommandData"
              },
              {
                "title": "KeyCutterCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "title": "FiscalMachineCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "title": "PassportScannerCommandData",
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/PaymentTerminalCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PrinterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/KeyCutterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/FiscalMachineCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PassportScannerCommandData"
                          }
                        ],
                        "properties": {
                          "PassportScannerId": {
                            "type": "string",
                            "nullable": true
                          },
                          "ReservationId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "CustomerId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false,
                        "x-schema-id": "PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "FiscalMachineId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ApiUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "FiscalMachineData": {
                        "type": "string",
                        "nullable": true
                      },
                      "Bill": {
                        "$ref": "#/components/schemas/Bill"
                      },
                      "TaxIdentifier": {
                        "type": "string",
                        "nullable": true
                      },
                      "BillFiscalMachineData": {
                        "title": "BillFiscalMachineData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ItalianFiscalMachineData"
                              }
                            ]
                          }
                        }
                      },
                      "PayloadData": {
                        "title": "PayloadData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "KeyCutterId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "UserName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Password": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyCutterData": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyCount": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LockIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "StartUtc": {
                    "type": "string",
                    "nullable": true
                  },
                  "EndUtc": {
                    "type": "string",
                    "nullable": true
                  },
                  "FirstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "LastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Telephone": {
                    "type": "string",
                    "nullable": true
                  },
                  "Email": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ReservationNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyMode": {
                    "type": "string",
                    "nullable": true
                  },
                  "ExternalRequestIdentifier": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "KeyCutterCommandData"
              },
              {
                "title": "FiscalMachineCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "FiscalMachineId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "FiscalMachineData": {
                    "type": "string",
                    "nullable": true
                  },
                  "Bill": {
                    "$ref": "#/components/schemas/Bill"
                  },
                  "TaxIdentifier": {
                    "type": "string",
                    "nullable": true
                  },
                  "BillFiscalMachineData": {
                    "title": "BillFiscalMachineData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ItalianFiscalMachineData"
                          }
                        ]
                      }
                    }
                  },
                  "PayloadData": {
                    "title": "PayloadData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "PaymentTerminalId": {
                "type": "string",
                "nullable": true
              },
              "CustomerId": {
                "type": "string",
                "format": "uuid"
              },
              "FullName": {
                "type": "string",
                "nullable": true
              },
              "BillId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "PaymentId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "PreauthorizationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "Amount": {
                "$ref": "#/components/schemas/ExtendedAmount"
              },
              "Fee": {
                "$ref": "#/components/schemas/ExtendedAmount"
              },
              "PaymentTerminalData": {
                "type": "string",
                "nullable": true
              },
              "PayworksData": {
                "$ref": "#/components/schemas/PayworksData"
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PaymentTerminalCommandData"
          },
          {
            "title": "PrinterCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "title": "KeyCutterCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "title": "FiscalMachineCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "title": "PassportScannerCommandData",
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/PaymentTerminalCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PrinterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/KeyCutterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/FiscalMachineCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PassportScannerCommandData"
                          }
                        ],
                        "properties": {
                          "PassportScannerId": {
                            "type": "string",
                            "nullable": true
                          },
                          "ReservationId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "CustomerId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false,
                        "x-schema-id": "PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "FiscalMachineId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ApiUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "FiscalMachineData": {
                        "type": "string",
                        "nullable": true
                      },
                      "Bill": {
                        "$ref": "#/components/schemas/Bill"
                      },
                      "TaxIdentifier": {
                        "type": "string",
                        "nullable": true
                      },
                      "BillFiscalMachineData": {
                        "title": "BillFiscalMachineData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ItalianFiscalMachineData"
                              }
                            ]
                          }
                        }
                      },
                      "PayloadData": {
                        "title": "PayloadData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "KeyCutterId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "UserName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Password": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyCutterData": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyCount": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LockIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "StartUtc": {
                    "type": "string",
                    "nullable": true
                  },
                  "EndUtc": {
                    "type": "string",
                    "nullable": true
                  },
                  "FirstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "LastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Telephone": {
                    "type": "string",
                    "nullable": true
                  },
                  "Email": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ReservationNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyMode": {
                    "type": "string",
                    "nullable": true
                  },
                  "ExternalRequestIdentifier": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "KeyCutterCommandData"
              },
              {
                "title": "FiscalMachineCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "FiscalMachineId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "FiscalMachineData": {
                    "type": "string",
                    "nullable": true
                  },
                  "Bill": {
                    "$ref": "#/components/schemas/Bill"
                  },
                  "TaxIdentifier": {
                    "type": "string",
                    "nullable": true
                  },
                  "BillFiscalMachineData": {
                    "title": "BillFiscalMachineData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ItalianFiscalMachineData"
                          }
                        ]
                      }
                    }
                  },
                  "PayloadData": {
                    "title": "PayloadData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "CopyCount": {
                "type": "integer",
                "format": "int32"
              },
              "FileType": {
                "type": "string",
                "nullable": true
              },
              "FileData": {
                "type": "string",
                "nullable": true
              },
              "PrinterName": {
                "type": "string",
                "nullable": true
              },
              "PrinterDriverName": {
                "type": "string",
                "nullable": true
              },
              "PrinterPortName": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PrinterCommandData"
          },
          {
            "title": "KeyCutterCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "title": "FiscalMachineCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "FiscalMachineId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "FiscalMachineData": {
                    "type": "string",
                    "nullable": true
                  },
                  "Bill": {
                    "$ref": "#/components/schemas/Bill"
                  },
                  "TaxIdentifier": {
                    "type": "string",
                    "nullable": true
                  },
                  "BillFiscalMachineData": {
                    "title": "BillFiscalMachineData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ItalianFiscalMachineData"
                          }
                        ]
                      }
                    }
                  },
                  "PayloadData": {
                    "title": "PayloadData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "KeyCutterId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "UserName": {
                "type": "string",
                "nullable": true
              },
              "Password": {
                "type": "string",
                "nullable": true
              },
              "KeyCutterData": {
                "type": "string",
                "nullable": true
              },
              "KeyCount": {
                "type": "integer",
                "format": "int32"
              },
              "LockIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "StartUtc": {
                "type": "string",
                "nullable": true
              },
              "EndUtc": {
                "type": "string",
                "nullable": true
              },
              "FirstName": {
                "type": "string",
                "nullable": true
              },
              "LastName": {
                "type": "string",
                "nullable": true
              },
              "Telephone": {
                "type": "string",
                "nullable": true
              },
              "Email": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "ReservationNumber": {
                "type": "string",
                "nullable": true
              },
              "KeyMode": {
                "type": "string",
                "nullable": true
              },
              "ExternalRequestIdentifier": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "KeyCutterCommandData"
          },
          {
            "title": "FiscalMachineCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "FiscalMachineId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "FiscalMachineData": {
                "type": "string",
                "nullable": true
              },
              "Bill": {
                "$ref": "#/components/schemas/Bill"
              },
              "TaxIdentifier": {
                "type": "string",
                "nullable": true
              },
              "BillFiscalMachineData": {
                "title": "BillFiscalMachineData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ItalianFiscalMachineData"
                      }
                    ]
                  }
                }
              },
              "PayloadData": {
                "title": "PayloadData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false,
            "x-schema-id": "FiscalMachineCommandData"
          },
          {
            "title": "PassportScannerCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "$ref": "#/components/schemas/PassportScannerCommandData"
              }
            ],
            "properties": {
              "PassportScannerId": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "CustomerId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PassportScannerCommandData"
          }
        ],
        "additionalProperties": false
      },
      "DeviceCommandFilterParameters": {
        "title": "DeviceCommandFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CommandIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CommandIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Commands](https://mews-systems.gitbook.io/connector-api/operations/#command) to be returned."
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeviceCommandFilterParameters"
      },
      "DeviceCommandResult": {
        "title": "DeviceCommandResult",
        "type": "object",
        "properties": {
          "Commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceCommand"
            },
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeviceCommandResult"
      },
      "DeviceCommandResultDiscriminator": {
        "enum": [
          "ItalianFiscalMachine"
        ],
        "type": "string"
      },
      "DeviceCommandState": {
        "enum": [
          "Pending",
          "Received",
          "Processing",
          "Processed",
          "Cancelled",
          "Error"
        ],
        "type": "string"
      },
      "DeviceCommandUpdateParameters": {
        "title": "DeviceCommandUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CommandId",
          "State"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CommandId": {
            "type": "string",
            "description": "Identifier of the [Command](https://mews-systems.gitbook.io/connector-api/operations/#command) to be updated.",
            "format": "uuid"
          },
          "State": {
            "$ref": "#/components/schemas/DeviceCommandState"
          },
          "Progress": {
            "type": "number",
            "description": "Progress of the command processing. Only used if the State is Processing, otherwise ignored.",
            "format": "double",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Notes about command execution. Only used if the State is Processed, Cancelled or Error, otherwise ignored.",
            "nullable": true
          },
          "ExternalRequestIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeviceCommandUpdateParameters"
      },
      "DeviceResult": {
        "title": "DeviceResult",
        "type": "object",
        "properties": {
          "Devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            },
            "description": "The devices.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "DeviceResult"
      },
      "Document": {
        "title": "Document",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the document.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "description": "Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).",
            "format": "uuid"
          },
          "Type": {
            "type": "string",
            "description": "Type of the document.",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "description": "Number of the document (e.g. passport number).",
            "nullable": true
          },
          "Expiration": {
            "type": "string",
            "description": "Expiration date in ISO 8601 format.",
            "nullable": true
          },
          "Issuance": {
            "type": "string",
            "description": "Date of issuance in ISO 8601 format.",
            "nullable": true
          },
          "IssuingCountryCode": {
            "type": "string",
            "description": "ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).",
            "nullable": true
          },
          "IssuingCity": {
            "type": "string",
            "description": "City from which document issued",
            "nullable": true
          },
          "ExpirationUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "IssuanceUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Document"
      },
      "DocumentParameters": {
        "title": "DocumentParameters",
        "type": "object",
        "properties": {
          "Number": {
            "type": "string",
            "nullable": true
          },
          "Expiration": {
            "type": "string",
            "nullable": true
          },
          "Issuance": {
            "type": "string",
            "nullable": true
          },
          "IssuingCountryCode": {
            "type": "string",
            "nullable": true
          },
          "IssuingCity": {
            "type": "string",
            "nullable": true
          },
          "ExpirationUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "IssuanceUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "New drivers license details.",
        "x-schema-id": "DocumentParameters"
      },
      "EarlinessRestriction": {
        "title": "EarlinessRestriction",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "IsInherited": {
            "type": "boolean"
          },
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          },
          "Days": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "MinAdvance": {
            "type": "string",
            "nullable": true
          },
          "MaxAdvance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "EarlinessRestriction"
      },
      "Enterprise": {
        "title": "Enterprise",
        "required": [
          "AccountingEditableHistoryInterval",
          "AddressId",
          "ChainId",
          "CreatedUtc",
          "Currencies",
          "DefaultLanguageCode",
          "EditableHistoryInterval",
          "Id",
          "LegalEnvironmentCode",
          "Name",
          "OperationalEditableHistoryInterval",
          "Pricing",
          "TimeZoneIdentifier",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ChainId": {
            "type": "string",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "Name": {
            "minLength": 1,
            "type": "string"
          },
          "TimeZoneIdentifier": {
            "minLength": 1,
            "type": "string"
          },
          "LegalEnvironmentCode": {
            "minLength": 1,
            "type": "string"
          },
          "AccommodationEnvironmentCode": {
            "type": "string",
            "nullable": true
          },
          "AccountingEnvironmentCode": {
            "type": "string",
            "nullable": true
          },
          "TaxEnvironmentCode": {
            "type": "string",
            "nullable": true
          },
          "DefaultLanguageCode": {
            "minLength": 1,
            "type": "string"
          },
          "EditableHistoryInterval": {
            "minLength": 1,
            "type": "string",
            "deprecated": true
          },
          "AccountingEditableHistoryInterval": {
            "minLength": 1,
            "type": "string"
          },
          "OperationalEditableHistoryInterval": {
            "minLength": 1,
            "type": "string"
          },
          "WebsiteUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "LogoImageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CoverImageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Pricing": {
            "$ref": "#/components/schemas/PricingMode"
          },
          "TaxPrecision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AddressId": {
            "type": "string",
            "format": "uuid"
          },
          "Address": {
            "$ref": "#/components/schemas/OldAddress"
          },
          "Currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyAcceptance"
            }
          },
          "AccountingConfiguration": {
            "$ref": "#/components/schemas/AccountingConfiguration"
          },
          "IsPortfolio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "The enterprise (e.g. hotel, hostel) associated with the access token.",
        "x-schema-id": "Enterprise"
      },
      "EnterpriseBase": {
        "title": "EnterpriseBase",
        "required": [
          "AccountingEditableHistoryInterval",
          "AddressId",
          "ChainId",
          "CreatedUtc",
          "DefaultLanguageCode",
          "EditableHistoryInterval",
          "Id",
          "LegalEnvironmentCode",
          "Name",
          "OperationalEditableHistoryInterval",
          "Pricing",
          "TimeZoneIdentifier",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ChainId": {
            "type": "string",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "Name": {
            "minLength": 1,
            "type": "string"
          },
          "TimeZoneIdentifier": {
            "minLength": 1,
            "type": "string"
          },
          "LegalEnvironmentCode": {
            "minLength": 1,
            "type": "string"
          },
          "AccommodationEnvironmentCode": {
            "type": "string",
            "nullable": true
          },
          "AccountingEnvironmentCode": {
            "type": "string",
            "nullable": true
          },
          "TaxEnvironmentCode": {
            "type": "string",
            "nullable": true
          },
          "DefaultLanguageCode": {
            "minLength": 1,
            "type": "string"
          },
          "EditableHistoryInterval": {
            "minLength": 1,
            "type": "string",
            "deprecated": true
          },
          "AccountingEditableHistoryInterval": {
            "minLength": 1,
            "type": "string"
          },
          "OperationalEditableHistoryInterval": {
            "minLength": 1,
            "type": "string"
          },
          "WebsiteUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "LogoImageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CoverImageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Pricing": {
            "$ref": "#/components/schemas/PricingMode"
          },
          "TaxPrecision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AddressId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "EnterpriseBase"
      },
      "EnterpriseFilterParameters": {
        "title": "EnterpriseFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/#enterprise). If not specified, all enterprises within scope of the Access Token are returned.",
            "nullable": true
          },
          "ExternalIdentifiers": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/#enterprise) from external system.",
            "nullable": true
          },
          "LinkedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "EnterpriseFilterParameters"
      },
      "EnterpriseProfileData": {
        "title": "EnterpriseProfileData",
        "type": "object",
        "properties": {
          "ProfileId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "EnterpriseProfileData"
      },
      "EnterpriseResult": {
        "title": "EnterpriseResult",
        "required": [
          "Enterprises"
        ],
        "type": "object",
        "properties": {
          "Enterprises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnterpriseBase"
            },
            "description": "The filtered enterprises."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest enterprise returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older enterprises.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "EnterpriseResult"
      },
      "EnterpriseScopeCounterDiscriminator": {
        "enum": [
          "Counter",
          "AccountingCounter",
          "AvailabilityBlockCounter",
          "BillCounter",
          "BillPreviewCounter",
          "FiscalCounter",
          "ProformaCounter",
          "RegistrationCardCounter",
          "ServiceOrderCounter",
          "CorrectionBillCounter"
        ],
        "type": "string"
      },
      "ExchangeRate": {
        "title": "Exchange rate",
        "required": [
          "SourceCurrency",
          "TargetCurrency",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "SourceCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "ISO-4217 code of the source [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).",
            "format": "currency"
          },
          "TargetCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "ISO-4217 code of the target [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).",
            "format": "currency"
          },
          "Value": {
            "type": "number",
            "description": "The exchange rate from the source currency to the target currency.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExchangeRate"
      },
      "ExchangeRateResult": {
        "title": "ExchangeRateResult",
        "required": [
          "ExchangeRates"
        ],
        "type": "object",
        "properties": {
          "ExchangeRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeRate"
            },
            "description": "The available exchange rates."
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExchangeRateResult"
      },
      "Export": {
        "title": "Export",
        "required": [
          "EntityType",
          "Files",
          "Id",
          "Status"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Status": {
            "$ref": "#/components/schemas/ExportStatus"
          },
          "EntityType": {
            "$ref": "#/components/schemas/ExportEntityType"
          },
          "Files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportFileEntry"
            }
          },
          "ExpiresUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Export"
      },
      "ExportAddParameters": {
        "title": "ExportAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "EntityType"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EntityType": {
            "$ref": "#/components/schemas/ExportEntityType"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExportAddParameters"
      },
      "ExportAddResult": {
        "title": "ExportAddResult",
        "type": "object",
        "properties": {
          "Export": {
            "$ref": "#/components/schemas/Export"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExportAddResult"
      },
      "ExportEntityType": {
        "enum": [
          "OrderItem",
          "Payment",
          "Reservation",
          "Customer",
          "Company"
        ],
        "type": "string"
      },
      "ExportFileEntry": {
        "title": "ExportFileEntry",
        "required": [
          "SizeInBytes",
          "Url"
        ],
        "type": "object",
        "properties": {
          "Url": {
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "SizeInBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExportFileEntry"
      },
      "ExportFilterParameters": {
        "title": "ExportFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ExportIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ExportIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Exports](https://mews-systems.gitbook.io/connector-api/operations/#export)."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExportFilterParameters"
      },
      "ExportResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ExportStatus": {
        "enum": [
          "Pending",
          "Processing",
          "Success",
          "Failed",
          "Expired"
        ],
        "type": "string"
      },
      "ExtendedAmount": {
        "title": "ExtendedAmount",
        "type": "object",
        "properties": {
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "NetValue": {
            "type": "number",
            "format": "double"
          },
          "GrossValue": {
            "type": "number",
            "format": "double"
          },
          "TaxValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxValue"
            },
            "nullable": true
          },
          "Breakdown": {
            "$ref": "#/components/schemas/TaxBreakdown"
          },
          "Value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Net": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Tax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "TaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Price representing price of the product.",
        "x-schema-id": "ExtendedAmount"
      },
      "ExtendedAmountParameters": {
        "title": "ExtendedAmountParameters",
        "required": [
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "NetValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "GrossValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "TaxCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "Net": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "Tax": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "TaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Amount of the external card payment.",
        "x-schema-id": "ExtendedAmountParameters"
      },
      "ExternalPaymentParameters": {
        "title": "ExternalPaymentParameters",
        "required": [
          "AccessToken",
          "Amount",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company). Company billing may not be enabled for your integration.",
            "format": "uuid",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer). **Deprecated!**",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of an open bill of the customer where to assign the payment.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of an [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) to be assigned to the external payment.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmountParameters"
          },
          "Category": {
            "$ref": "#/components/schemas/AccountingCategoryParameters"
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExternalPaymentTypeOld"
              }
            ],
            "description": "Type of the external payment. *Except for the enterprises based in the French Legal Environment. Unspecified is considered as fraud.",
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "description": "Identifier of the payment from external system.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional payment notes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ExternalPaymentParameters"
      },
      "ExternalPaymentType": {
        "enum": [
          "Unspecified",
          "BadDebts",
          "Bacs",
          "WireTransfer",
          "Invoice",
          "ExchangeRateDifference",
          "Complimentary",
          "Reseller",
          "ExchangeRoundingDifference",
          "Barter",
          "Commission",
          "BankCharges",
          "CrossSettlement",
          "Cash",
          "CreditCard",
          "Prepayment",
          "Cheque",
          "Bancontact",
          "IDeal",
          "PayPal",
          "GiftCard",
          "LoyaltyPoints",
          "ChequeVacances",
          "OnlinePayment",
          "CardCheck",
          "PaymentHubRedirection",
          "Voucher",
          "MasterCard",
          "Visa",
          "Amex",
          "Discover",
          "DinersClub",
          "Jcb",
          "UnionPay",
          "Twint",
          "Reka",
          "LoyaltyCard",
          "PosDiningAndSpaReward",
          "DirectDebit",
          "DepositCheck",
          "DepositCash",
          "DepositCreditCard",
          "DepositWireTransfer"
        ],
        "type": "string"
      },
      "ExternalPaymentTypeOld": {
        "enum": [
          "Bacs",
          "WireTransfer",
          "Invoice",
          "Reseller",
          "CrossSettlement",
          "Cash",
          "CreditCard",
          "PayPal",
          "Twint",
          "DepositWireTransfer"
        ],
        "type": "string"
      },
      "FiscalMachineCommandData": {
        "title": "FiscalMachineCommandData",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PaymentTerminalCommandData"
          },
          {
            "$ref": "#/components/schemas/PrinterCommandData"
          },
          {
            "$ref": "#/components/schemas/KeyCutterCommandData"
          },
          {
            "$ref": "#/components/schemas/FiscalMachineCommandData"
          },
          {
            "title": "PassportScannerCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "$ref": "#/components/schemas/PassportScannerCommandData"
              }
            ],
            "properties": {
              "PassportScannerId": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "CustomerId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PassportScannerCommandData"
          }
        ],
        "properties": {
          "FiscalMachineId": {
            "type": "string",
            "nullable": true
          },
          "ApiUrl": {
            "type": "string",
            "nullable": true
          },
          "FiscalMachineData": {
            "type": "string",
            "nullable": true
          },
          "Bill": {
            "$ref": "#/components/schemas/Bill"
          },
          "TaxIdentifier": {
            "type": "string",
            "nullable": true
          },
          "BillFiscalMachineData": {
            "title": "BillFiscalMachineData",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ItalianFiscalMachineData"
                  }
                ]
              }
            }
          },
          "PayloadData": {
            "title": "PayloadData",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        "additionalProperties": false,
        "x-schema-id": "FiscalMachineCommandData"
      },
      "FiscalMachinePayloadDataDiscriminator": {
        "enum": [
          "ItalianFiscalMachine"
        ],
        "type": "string"
      },
      "FlatTaxRateStrategy": {
        "title": "FlatTaxRateStrategy",
        "type": "object",
        "properties": {
          "CurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "FlatTaxRateStrategy"
      },
      "GetAllActiveCommandsParameters": {
        "title": "GetAllActiveCommandsParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "GetAllActiveCommandsParameters"
      },
      "GuidIEnumerableUpdateValue": {
        "title": "GuidIEnumerableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "GuidIEnumerableUpdateValue"
      },
      "GuidNullableUpdateValue": {
        "title": "GuidNullableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "GuidNullableUpdateValue"
      },
      "GuidUpdateValue": {
        "title": "GuidUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "GuidUpdateValue"
      },
      "Hours": {
        "title": "Hours",
        "required": [
          "Eight",
          "Eighteen",
          "Eleven",
          "Fifteen",
          "Five",
          "Four",
          "Fourteen",
          "Nine",
          "Nineteen",
          "One",
          "Seven",
          "Seventeen",
          "Six",
          "Sixteen",
          "Ten",
          "Thirteen",
          "Three",
          "Twelve",
          "Twenty",
          "TwentyOne",
          "TwentyThree",
          "TwentyTwo",
          "Two",
          "Zero"
        ],
        "type": "object",
        "properties": {
          "Zero": {
            "type": "boolean"
          },
          "One": {
            "type": "boolean"
          },
          "Two": {
            "type": "boolean"
          },
          "Three": {
            "type": "boolean"
          },
          "Four": {
            "type": "boolean"
          },
          "Five": {
            "type": "boolean"
          },
          "Six": {
            "type": "boolean"
          },
          "Seven": {
            "type": "boolean"
          },
          "Eight": {
            "type": "boolean"
          },
          "Nine": {
            "type": "boolean"
          },
          "Ten": {
            "type": "boolean"
          },
          "Eleven": {
            "type": "boolean"
          },
          "Twelve": {
            "type": "boolean"
          },
          "Thirteen": {
            "type": "boolean"
          },
          "Fourteen": {
            "type": "boolean"
          },
          "Fifteen": {
            "type": "boolean"
          },
          "Sixteen": {
            "type": "boolean"
          },
          "Seventeen": {
            "type": "boolean"
          },
          "Eighteen": {
            "type": "boolean"
          },
          "Nineteen": {
            "type": "boolean"
          },
          "Twenty": {
            "type": "boolean"
          },
          "TwentyOne": {
            "type": "boolean"
          },
          "TwentyTwo": {
            "type": "boolean"
          },
          "TwentyThree": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Hours"
      },
      "HoursParameters": {
        "title": "HoursParameters",
        "required": [
          "Eight",
          "Eighteen",
          "Eleven",
          "Fifteen",
          "Five",
          "Four",
          "Fourteen",
          "Nine",
          "Nineteen",
          "One",
          "Seven",
          "Seventeen",
          "Six",
          "Sixteen",
          "Ten",
          "Thirteen",
          "Three",
          "Twelve",
          "Twenty",
          "TwentyOne",
          "TwentyThree",
          "TwentyTwo",
          "Two",
          "Zero"
        ],
        "type": "object",
        "properties": {
          "Zero": {
            "type": "boolean"
          },
          "One": {
            "type": "boolean"
          },
          "Two": {
            "type": "boolean"
          },
          "Three": {
            "type": "boolean"
          },
          "Four": {
            "type": "boolean"
          },
          "Five": {
            "type": "boolean"
          },
          "Six": {
            "type": "boolean"
          },
          "Seven": {
            "type": "boolean"
          },
          "Eight": {
            "type": "boolean"
          },
          "Nine": {
            "type": "boolean"
          },
          "Ten": {
            "type": "boolean"
          },
          "Eleven": {
            "type": "boolean"
          },
          "Twelve": {
            "type": "boolean"
          },
          "Thirteen": {
            "type": "boolean"
          },
          "Fourteen": {
            "type": "boolean"
          },
          "Fifteen": {
            "type": "boolean"
          },
          "Sixteen": {
            "type": "boolean"
          },
          "Seventeen": {
            "type": "boolean"
          },
          "Eighteen": {
            "type": "boolean"
          },
          "Nineteen": {
            "type": "boolean"
          },
          "Twenty": {
            "type": "boolean"
          },
          "TwentyOne": {
            "type": "boolean"
          },
          "TwentyTwo": {
            "type": "boolean"
          },
          "TwentyThree": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "HoursParameters"
      },
      "ImageResizeMode": {
        "enum": [
          "Cover",
          "CoverExact",
          "Fit",
          "FitExact"
        ],
        "type": "string"
      },
      "ImageSizeParameters": {
        "title": "ImageSizeParameters",
        "required": [
          "ImageId"
        ],
        "type": "object",
        "properties": {
          "ImageId": {
            "type": "string",
            "format": "uuid"
          },
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ResizeMode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageResizeMode"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ImageSizeParameters"
      },
      "ImageUrl": {
        "title": "Image URL",
        "type": "object",
        "properties": {
          "ImageId": {
            "type": "string",
            "description": "Unique identifier of the image.",
            "format": "uuid"
          },
          "Url": {
            "type": "string",
            "description": "URL of the image.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ImageUrl"
      },
      "ImageUrlParameters": {
        "title": "ImageUrlParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Images"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSizeParameters"
            },
            "description": "Parameters of images whose URLs should be returned."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ImageUrlParameters"
      },
      "ImageUrlResult": {
        "title": "ImageUrlResult",
        "type": "object",
        "properties": {
          "ImageUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageUrl"
            },
            "description": "URLs of the images.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ImageUrlResult"
      },
      "Int32NullableUpdateValue": {
        "title": "Int32NullableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Int32NullableUpdateValue"
      },
      "Int32UpdateValue": {
        "title": "Int32UpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Int32UpdateValue"
      },
      "InvoicePaymentData": {
        "title": "InvoicePaymentData",
        "type": "object",
        "properties": {
          "InvoiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "InvoicePaymentData"
      },
      "ItalianFiscalMachineData": {
        "title": "ItalianFiscalMachineData",
        "type": "object",
        "properties": {
          "IsRefund": {
            "type": "boolean"
          },
          "RebatedReceiptNumber": {
            "type": "string",
            "nullable": true
          },
          "RebatedReceiptSequence": {
            "type": "string",
            "nullable": true
          },
          "RebatedReceiptDateTimeUtc": {
            "type": "string",
            "nullable": true
          },
          "PrinterSerialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ItalianFiscalMachineData"
      },
      "ItalianFiscalMachineResultData": {
        "title": "ItalianFiscalMachineResultData",
        "type": "object",
        "properties": {
          "SerialNumber": {
            "type": "string",
            "nullable": true
          },
          "Base64Data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ItalianFiscalMachineResultData"
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "KeyCutterCommandData": {
        "title": "KeyCutterCommandData",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PaymentTerminalCommandData"
          },
          {
            "$ref": "#/components/schemas/PrinterCommandData"
          },
          {
            "$ref": "#/components/schemas/KeyCutterCommandData"
          },
          {
            "title": "FiscalMachineCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "FiscalMachineId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "FiscalMachineData": {
                "type": "string",
                "nullable": true
              },
              "Bill": {
                "$ref": "#/components/schemas/Bill"
              },
              "TaxIdentifier": {
                "type": "string",
                "nullable": true
              },
              "BillFiscalMachineData": {
                "title": "BillFiscalMachineData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ItalianFiscalMachineData"
                      }
                    ]
                  }
                }
              },
              "PayloadData": {
                "title": "PayloadData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false,
            "x-schema-id": "FiscalMachineCommandData"
          },
          {
            "title": "PassportScannerCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "$ref": "#/components/schemas/PassportScannerCommandData"
              }
            ],
            "properties": {
              "PassportScannerId": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "CustomerId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PassportScannerCommandData"
          }
        ],
        "properties": {
          "KeyCutterId": {
            "type": "string",
            "nullable": true
          },
          "ApiUrl": {
            "type": "string",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "KeyCutterData": {
            "type": "string",
            "nullable": true
          },
          "KeyCount": {
            "type": "integer",
            "format": "int32"
          },
          "LockIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ReservationNumber": {
            "type": "string",
            "nullable": true
          },
          "KeyMode": {
            "type": "string",
            "nullable": true
          },
          "ExternalRequestIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "KeyCutterCommandData"
      },
      "KeyCutterCommandParameters": {
        "title": "KeyCutterCommandParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "KeyCount",
          "KeyCutterId",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "KeyCutterId": {
            "type": "string",
            "description": "Unique identifier of the KeyCutter [Device](https://mews-systems.gitbook.io/connector-api/operations/devices/#device) where to encode the key.",
            "format": "uuid"
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation to encode the key for.",
            "format": "uuid"
          },
          "KeyCount": {
            "type": "integer",
            "description": "Count of keys to encode.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "KeyCutterCommandParameters"
      },
      "Language": {
        "title": "Language",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Language-culture code of the language.",
            "nullable": true
          },
          "FallbackLanguageCode": {
            "type": "string",
            "description": "Language-culture code of the fallback language.",
            "nullable": true
          },
          "EnglishName": {
            "type": "string",
            "description": "English name of the language.",
            "nullable": true
          },
          "LocalName": {
            "type": "string",
            "description": "Local name of the language.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Language"
      },
      "LanguageResult": {
        "title": "LanguageResult",
        "type": "object",
        "properties": {
          "Languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            },
            "description": "The supported languages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LanguageResult"
      },
      "LanguageTextParameters": {
        "title": "LanguageTextParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LanguageCodes",
          "Scope"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LanguageCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Language-culture codes of the [Languages](https://mews-systems.gitbook.io/connector-api/operations/#language) whose texts to return."
          },
          "Scope": {
            "minLength": 1,
            "type": "string",
            "description": "Scope of texts to return."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LanguageTextParameters"
      },
      "LanguageTextResult": {
        "title": "LanguageTextResult",
        "type": "object",
        "properties": {
          "LanguageTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTexts"
            },
            "description": "Texts in the specified languages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LanguageTextResult"
      },
      "LanguageTexts": {
        "title": "Language texts",
        "type": "object",
        "properties": {
          "LanguageCode": {
            "type": "string",
            "description": "Language-culture code of the [Language](https://mews-systems.gitbook.io/connector-api/operations/#language).",
            "nullable": true
          },
          "Texts": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Texts in the specified language by their keys.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LanguageTexts"
      },
      "LegalEntityIdentifierUpdateParameters": {
        "title": "LegalEntityIdentifierUpdateParameters",
        "type": "object",
        "properties": {
          "ItDestinationCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ItFiscalCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LegalEntityIdentifierUpdateParameters"
      },
      "LegalEntityIdentifiers": {
        "title": "LegalEntityIdentifiers",
        "type": "object",
        "properties": {
          "ItDestinationCode": {
            "type": "string",
            "nullable": true
          },
          "ItFiscalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LegalEntityIdentifiers"
      },
      "LengthRestriction": {
        "title": "LengthRestriction",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "IsInherited": {
            "type": "boolean"
          },
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          },
          "Days": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "MinLength": {
            "type": "string",
            "nullable": true
          },
          "MaxLength": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LengthRestriction"
      },
      "Limitation": {
        "title": "Limitation",
        "required": [
          "Count"
        ],
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Limitation on the quantity of data returned.",
        "x-schema-id": "Limitation"
      },
      "LoyaltyMembership": {
        "title": "Loyalty membership",
        "required": [
          "AccountId",
          "ChainId",
          "Id",
          "IsPrimary",
          "LoyaltyProgramId",
          "State"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the loyalty membership.",
            "format": "uuid"
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account.",
            "format": "uuid"
          },
          "LoyaltyProgramId": {
            "type": "string",
            "description": "Unique identifier of the loyalty program.",
            "format": "uuid"
          },
          "State": {
            "$ref": "#/components/schemas/LoyaltyMembershipState"
          },
          "IsPrimary": {
            "type": "boolean",
            "description": "Defines the primary loyalty membership."
          },
          "Code": {
            "type": "string",
            "description": "Code of the loyalty membership.",
            "nullable": true
          },
          "Points": {
            "type": "integer",
            "description": "The loyalty points for the account in that membership.",
            "format": "int32",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date of the loyalty membership in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "description": "Url of the loyalty membership.",
            "nullable": true
          },
          "LoyaltyTierId": {
            "type": "string",
            "description": "Unique identifier of the loyalty tier.",
            "format": "uuid",
            "nullable": true
          },
          "CreatorProfile": {
            "$ref": "#/components/schemas/ProfileData"
          },
          "UpdaterProfile": {
            "$ref": "#/components/schemas/ProfileData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyMembership"
      },
      "LoyaltyMembershipAddParameters": {
        "title": "LoyaltyMembershipAddParameters",
        "required": [
          "AccountId",
          "IsPrimary",
          "LoyaltyProgramId"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "LoyaltyProgramId": {
            "type": "string",
            "format": "uuid"
          },
          "IsPrimary": {
            "type": "boolean"
          },
          "State": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyMembershipState"
              }
            ],
            "nullable": true
          },
          "Code": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "Points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "LoyaltyTierId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyMembershipAddParameters"
      },
      "LoyaltyMembershipDeleteParameters": {
        "title": "LoyaltyMembershipDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyMembershipIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LoyaltyMembershipIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the loyalty memberships to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyMembershipDeleteParameters"
      },
      "LoyaltyMembershipFilterParameters": {
        "title": "LoyaltyMembershipFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ChainIds": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.",
            "nullable": true
          },
          "LoyaltyMembershipIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Loyalty memberships](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-membership).",
            "nullable": true
          },
          "AccountIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of accounts (for example [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)) the membership is associated with.",
            "nullable": true
          },
          "LoyaltyProgramIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/loyaltyprograms/#loyalty-program).",
            "nullable": true
          },
          "MembershipStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembershipState"
            },
            "description": "States of the loyalty memberships.",
            "nullable": true
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          },
          "Codes": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyMembershipFilterParameters"
      },
      "LoyaltyMembershipResult": {
        "title": "LoyaltyMembershipResult",
        "required": [
          "LoyaltyMemberships"
        ],
        "type": "object",
        "properties": {
          "LoyaltyMemberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembership"
            },
            "description": "Added loyalty memberships."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyMembershipResult"
      },
      "LoyaltyMembershipState": {
        "enum": [
          "New",
          "Pending",
          "Enrolled",
          "Canceled",
          "Declined"
        ],
        "type": "string"
      },
      "LoyaltyMembershipUpdateParameters": {
        "title": "LoyaltyMembershipUpdateParameters",
        "required": [
          "LoyaltyMembershipId"
        ],
        "type": "object",
        "properties": {
          "LoyaltyMembershipId": {
            "type": "string",
            "format": "uuid"
          },
          "LoyaltyProgramId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "State": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyMembershipState"
              }
            ],
            "nullable": true
          },
          "IsPrimary": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Code": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Points": {
            "$ref": "#/components/schemas/Int32NullableUpdateValue"
          },
          "ExpirationDate": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Url": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "LoyaltyTierId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyMembershipUpdateParameters"
      },
      "LoyaltyProgram": {
        "title": "Loyalty program",
        "required": [
          "ChainId",
          "Code",
          "Id",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the loyalty program.",
            "format": "uuid"
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain.",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the loyalty program."
          },
          "Code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the loyalty program."
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyProgramType"
              }
            ],
            "nullable": true
          },
          "Subscription": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyProgramSubscription"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyProgram"
      },
      "LoyaltyProgramAddParameters": {
        "title": "LoyaltyProgramAddParameters",
        "required": [
          "Code",
          "Name"
        ],
        "type": "object",
        "properties": {
          "DataClusterId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "Name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "Code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyProgramType"
              }
            ],
            "nullable": true
          },
          "Subscription": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyProgramSubscription"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyProgramAddParameters"
      },
      "LoyaltyProgramDeleteParameters": {
        "title": "LoyaltyProgramDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyProgramIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LoyaltyProgramIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the loyalty programs to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyProgramDeleteParameters"
      },
      "LoyaltyProgramFilterParameters": {
        "title": "LoyaltyProgramFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ChainIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.",
            "nullable": true
          },
          "LoyaltyProgramIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-program).",
            "nullable": true
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          },
          "Codes": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyProgramFilterParameters"
      },
      "LoyaltyProgramResult": {
        "title": "LoyaltyProgramResult",
        "required": [
          "LoyaltyPrograms"
        ],
        "type": "object",
        "properties": {
          "LoyaltyPrograms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyProgram"
            },
            "description": "Updated loyalty programs."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyProgramResult"
      },
      "LoyaltyProgramSubscription": {
        "enum": [
          "Free",
          "Paid"
        ],
        "type": "string"
      },
      "LoyaltyProgramType": {
        "enum": [
          "Hotel",
          "ExternalPartner",
          "SoftBrand",
          "Unknown"
        ],
        "type": "string"
      },
      "LoyaltyProgramUpdateParameters": {
        "title": "LoyaltyProgramUpdateParameters",
        "required": [
          "LoyaltyProgramId"
        ],
        "type": "object",
        "properties": {
          "LoyaltyProgramId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyProgramType"
              }
            ],
            "nullable": true
          },
          "Subscription": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LoyaltyProgramSubscription"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyProgramUpdateParameters"
      },
      "LoyaltyTier": {
        "title": "Loyalty tier",
        "required": [
          "Code",
          "Id",
          "LoyaltyProgramId",
          "Name",
          "Ordering"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the loyalty tier.",
            "format": "uuid"
          },
          "LoyaltyProgramId": {
            "type": "string",
            "description": "Unique identifier of the loyalty program of that loyalty tier.",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the loyalty tier."
          },
          "Code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the loyalty tier."
          },
          "Ordering": {
            "type": "integer",
            "description": "Ordering of the loyalty tier.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyTier"
      },
      "LoyaltyTierAddParameters": {
        "title": "LoyaltyTierAddParameters",
        "required": [
          "Code",
          "LoyaltyProgramId",
          "Name",
          "Ordering"
        ],
        "type": "object",
        "properties": {
          "LoyaltyProgramId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "Code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "Ordering": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyTierAddParameters"
      },
      "LoyaltyTierDeleteParameters": {
        "title": "LoyaltyTierDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyTierIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LoyaltyTierIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the loyalty tiers to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyTierDeleteParameters"
      },
      "LoyaltyTierFilterParameters": {
        "title": "LoyaltyTierFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyProgramIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.",
            "nullable": true
          },
          "LoyaltyProgramIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-program)."
          },
          "LoyaltyTierIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Loyalty tiers](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-tier).",
            "nullable": true
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyTierFilterParameters"
      },
      "LoyaltyTierResult": {
        "title": "LoyaltyTierResult",
        "required": [
          "LoyaltyTiers"
        ],
        "type": "object",
        "properties": {
          "LoyaltyTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTier"
            },
            "description": "Updated loyalty tiers."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyTierResult"
      },
      "LoyaltyTierUpdateParameters": {
        "title": "LoyaltyTierUpdateParameters",
        "required": [
          "LoyaltyTierId"
        ],
        "type": "object",
        "properties": {
          "LoyaltyTierId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Code": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Ordering": {
            "$ref": "#/components/schemas/Int32UpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "LoyaltyTierUpdateParameters"
      },
      "MergeAccountType": {
        "enum": [
          "Customer",
          "Company"
        ],
        "type": "string"
      },
      "Message": {
        "title": "Message",
        "required": [
          "CreatedUtc",
          "Id",
          "MessageThreadId",
          "Sender",
          "Text"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the message.",
            "format": "uuid"
          },
          "MessageThreadId": {
            "type": "string",
            "description": "Unique identifier of the [Message thread](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread) which the message belongs to.",
            "format": "uuid"
          },
          "Text": {
            "minLength": 1,
            "type": "string",
            "description": "Text of the message."
          },
          "Sender": {
            "$ref": "#/components/schemas/SenderDiscriminator"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the message in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Message"
      },
      "MessageAddParameters": {
        "title": "MessageAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "MessageThreadId",
          "Text"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MessageThreadId": {
            "type": "string",
            "format": "uuid"
          },
          "Text": {
            "minLength": 1,
            "type": "string"
          },
          "Identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageAddParameters"
      },
      "MessageFilterParameters": {
        "title": "MessageFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "MessageThreadIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "MessageThreadIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread) from where to return messages."
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageFilterParameters"
      },
      "MessageResult": {
        "title": "MessageResult",
        "required": [
          "Messages"
        ],
        "type": "object",
        "properties": {
          "Messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": "The filtered messages."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest message returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older messages.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageResult"
      },
      "MessageThread": {
        "title": "Message thread",
        "required": [
          "CreatedUtc",
          "Id",
          "OriginalSender",
          "Subject",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the message thread.",
            "format": "uuid"
          },
          "OriginalSender": {
            "minLength": 1,
            "type": "string",
            "description": "The sender of the original message in the thread."
          },
          "Subject": {
            "minLength": 1,
            "type": "string",
            "description": "Subject of the message thread."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the message thread in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the message thread in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "IsResolved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageThread"
      },
      "MessageThreadAddParameters": {
        "title": "MessageThreadAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "OriginalSender",
          "Subject"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OriginalSender": {
            "minLength": 1,
            "type": "string",
            "description": "The sender of the original message in the thread."
          },
          "Subject": {
            "minLength": 1,
            "type": "string",
            "description": "Subject of the message thread."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageThreadAddParameters"
      },
      "MessageThreadFilterParameters": {
        "title": "MessageThreadFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "MessageThreadIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Message threads](https://mews-systems.gitbook.io/connector-api/operations/#message-thread). Required if no other filter is provided.",
            "nullable": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageThreadFilterParameters"
      },
      "MessageThreadResult": {
        "title": "MessageThreadResult",
        "required": [
          "MessageThreads"
        ],
        "type": "object",
        "properties": {
          "MessageThreads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageThread"
            },
            "description": "The filtered message threads."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest message thread returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older message threads.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MessageThreadResult"
      },
      "MultipleAccountMergeParameters": {
        "title": "MultipleAccountMergeParameters",
        "required": [
          "AccessToken",
          "AccountMergeParameters",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AccountMergeParameters": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountMergeParameter"
            },
            "description": "Accounts to be merged."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAccountMergeParameters"
      },
      "MultipleAccountNoteAddParameters": {
        "title": "MultipleAccountNoteAddParameters",
        "required": [
          "AccessToken",
          "AccountNotes",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AccountNotes": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNoteAddParameters"
            },
            "description": "Account notes to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAccountNoteAddParameters"
      },
      "MultipleAccountNoteDeleteParameters": {
        "title": "MultipleAccountNoteDeleteParameters",
        "required": [
          "AccessToken",
          "AccountNoteIds",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountNoteIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the account notes to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAccountNoteDeleteParameters"
      },
      "MultipleAccountNoteUpdateParameters": {
        "title": "MultipleAccountNoteUpdateParameters",
        "required": [
          "AccessToken",
          "AccountNoteUpdates",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountNoteUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNoteUpdateParameters"
            },
            "description": "Account notes to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAccountNoteUpdateParameters"
      },
      "MultipleAccountUpdateParameters": {
        "title": "MultipleAccountUpdateParameters",
        "required": [
          "AccessToken",
          "AccountUpdates",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountUpdates": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUpdateParameters"
            },
            "description": "Accounts to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAccountUpdateParameters"
      },
      "MultipleAccountingItemsUpdateParameters": {
        "title": "MultipleAccountingItemsUpdateParameters",
        "required": [
          "AccessToken",
          "AccountingItemUpdates",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingItemUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItemUpdateParameters"
            },
            "description": "List of requested updates."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAccountingItemsUpdateParameters"
      },
      "MultipleAddressAddParameters": {
        "title": "MultipleAddressAddParameters",
        "required": [
          "AccessToken",
          "Addresses",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "Addresses": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressAddParameters"
            },
            "description": "Collection of addresses to be created."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAddressAddParameters"
      },
      "MultipleAddressUpdateParameters": {
        "title": "MultipleAddressUpdateParameters",
        "required": [
          "AccessToken",
          "AddressUpdates",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AddressUpdates": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressUpdateParameters"
            },
            "description": "Collection of addresses to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAddressUpdateParameters"
      },
      "MultipleAvailabilityBlockAddParameters": {
        "title": "MultipleAvailabilityBlockAddParameters",
        "required": [
          "AccessToken",
          "AvailabilityBlocks",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AvailabilityBlocks": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityBlockAddParameters"
            },
            "description": "Availability blocks to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAvailabilityBlockAddParameters"
      },
      "MultipleAvailabilityBlockDeleteParameters": {
        "title": "MultipleAvailabilityBlockDeleteParameters",
        "required": [
          "AccessToken",
          "AvailabilityBlockIds",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AvailabilityBlockIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the Availability block to delete."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAvailabilityBlockDeleteParameters"
      },
      "MultipleAvailabilityBlockUpdateParameters": {
        "title": "MultipleAvailabilityBlockUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "AvailabilityBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityBlockUpdateParameters"
            },
            "description": "Availability blocks to be updated.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleAvailabilityBlockUpdateParameters"
      },
      "MultipleBillAddParameters": {
        "title": "MultipleBillAddParameters",
        "required": [
          "AccessToken",
          "Bills",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "Bills": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillAddParameters"
            },
            "description": "Information about bills to be created."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleBillAddParameters"
      },
      "MultipleCompanyContractAddParameters": {
        "title": "MultipleCompanyContractAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TravelAgencyContracts": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelAgencyContractAddParameters"
            },
            "description": "Information about travel agency contracts to be created.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleCompanyContractAddParameters"
      },
      "MultipleCompanyContractDeleteParameters": {
        "title": "MultipleCompanyContractDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ServiceIds",
          "TravelAgencyContractIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the travel agency contract belongs to."
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "TravelAgencyContractIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the Travel agency contract to delete."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleCompanyContractDeleteParameters"
      },
      "MultipleCompanyContractUpdateParameters": {
        "title": "MultipleCompanyContractUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "TravelAgencyContractUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TravelAgencyContractUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelAgencyContractUpdateParameters"
            },
            "description": "Information about travel agency contracts to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleCompanyContractUpdateParameters"
      },
      "MultipleCompanyDeleteParameters": {
        "title": "MultipleCompanyDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CompanyIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CompanyIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the companies to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleCompanyDeleteParameters"
      },
      "MultipleCreditCardParameters": {
        "title": "MultipleCreditCardParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CreditCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleCreditCardParameters"
      },
      "MultipleCustomerParameters": {
        "title": "MultipleCustomerParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleCustomerParameters"
      },
      "MultipleLoyaltyMembershipAddParameters": {
        "title": "MultipleLoyaltyMembershipAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyMemberships"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "LoyaltyMemberships": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembershipAddParameters"
            },
            "description": "Loyalty memberships to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleLoyaltyMembershipAddParameters"
      },
      "MultipleLoyaltyMembershipUpdateParameters": {
        "title": "MultipleLoyaltyMembershipUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyMembershipUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "LoyaltyMembershipUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMembershipUpdateParameters"
            },
            "description": "Loyalty memberships to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleLoyaltyMembershipUpdateParameters"
      },
      "MultipleLoyaltyProgramAddParameters": {
        "title": "MultipleLoyaltyProgramAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyPrograms"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "LoyaltyPrograms": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyProgramAddParameters"
            },
            "description": "Loyalty programs to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleLoyaltyProgramAddParameters"
      },
      "MultipleLoyaltyProgramUpdateParameters": {
        "title": "MultipleLoyaltyProgramUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyProgramUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "LoyaltyProgramUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyProgramUpdateParameters"
            },
            "description": "Loyalty programs to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleLoyaltyProgramUpdateParameters"
      },
      "MultipleLoyaltyTierAddParameters": {
        "title": "MultipleLoyaltyTierAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyTiers"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ChainId": {
            "type": "string",
            "description": "Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "LoyaltyTiers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTierAddParameters"
            },
            "description": "Loyalty tiers to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleLoyaltyTierAddParameters"
      },
      "MultipleLoyaltyTierUpdateParameters": {
        "title": "MultipleLoyaltyTierUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "LoyaltyTierUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LoyaltyTierUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTierUpdateParameters"
            },
            "description": "Loyalty tiers to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleLoyaltyTierUpdateParameters"
      },
      "MultipleMessageAddParameters": {
        "title": "MultipleMessageAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Messages"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Messages": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageAddParameters"
            },
            "description": "Messages to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleMessageAddParameters"
      },
      "MultiplePaymentRequestAddParameters": {
        "title": "MultiplePaymentRequestAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "PaymentRequests"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "PaymentRequests": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentRequestAddParameters"
            },
            "description": "Payment requests to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultiplePaymentRequestAddParameters"
      },
      "MultiplePaymentRequestCancelParameters": {
        "title": "MultiplePaymentRequestCancelParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "PaymentRequestIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "PaymentRequestIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Identifiers of payment requests to be canceled."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultiplePaymentRequestCancelParameters"
      },
      "MultipleReservationParameters": {
        "title": "MultipleReservationParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReservationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ReservationExtent"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleReservationParameters"
      },
      "MultipleReservationResult": {
        "title": "MultipleReservationResult",
        "type": "object",
        "properties": {
          "ReservationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleReservationResult"
      },
      "MultipleReservationUpdateParameters": {
        "title": "MultipleReservationUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationId",
          "ReservationUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid"
          },
          "ChannelNumber": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "StartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "EndUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ReleasedUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AdultCount": {
            "$ref": "#/components/schemas/Int32UpdateValue"
          },
          "ChildCount": {
            "$ref": "#/components/schemas/Int32UpdateValue"
          },
          "PersonCounts": {
            "$ref": "#/components/schemas/PersonCountParametersIEnumerableUpdateValue"
          },
          "AssignedResourceId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "RequestedCategoryId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "TraveAgencyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "TravelAgencyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "BusinessSegmentId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "Purpose": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "RateId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "CreditCardId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "TimeUnitPrices": {
            "$ref": "#/components/schemas/PerUnitPriceParametersIEnumerableUpdateValue"
          },
          "BookerId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "AssignedResourceLocked": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "AvailabilityBlockId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "Options": {
            "$ref": "#/components/schemas/ReservationUpdateOptionsParameters"
          },
          "ReservationUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationUpdateParameters"
            },
            "description": "Array of properties to be updated in each reservation specified."
          },
          "CheckOverbooking": {
            "type": "boolean",
            "description": "Indicates whether the system will check and prevent a booking being made in the case of an overbooking, i.e. where there is an insufficient number of resources available to meet the request<sup>\\*1</sup>. The default is true, i.e. the system will normally check for this unless the property is set to false.",
            "nullable": true
          },
          "CheckRateApplicability": {
            "type": "boolean",
            "description": "Indicates whether the system will check and prevent a booking being made using a restricted rate, e.g. a private rate. The default is true, i.e. the system will normally check for this unless the property is set to false.",
            "nullable": true
          },
          "Reprice": {
            "type": "boolean",
            "description": "Whether the price should be updated to latest value for date/rate/category combination set in Mews. If not specified, the reservation price is updated.",
            "nullable": true
          },
          "ApplyCancelationFee": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "ApplyCancellationFee": {
            "type": "boolean",
            "description": "Whether the cancellation fees should be applied according to rate cancellation policies. If not specified, the cancellation fees are applied.",
            "nullable": true
          },
          "Reason": {
            "type": "string",
            "description": "Reason for updating the reservation. Required when updating the price of the reservation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleReservationUpdateParameters"
      },
      "MultipleResourceAccessTokenParameters": {
        "title": "MultipleResourceAccessTokenParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ResourceAccessTokenParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAccessTokenParameters"
            },
            "description": "Parameters of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleResourceAccessTokenParameters"
      },
      "MultipleResourceAccessTokenUpdateParameters": {
        "title": "MultipleResourceAccessTokenUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ResourceAccessTokenUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAccessTokenUpdateParameters"
            },
            "description": "Parameters of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleResourceAccessTokenUpdateParameters"
      },
      "MultipleResourceBlockAddParameters": {
        "title": "MultipleResourceBlockAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ResourceBlocks"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ResourceBlocks": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceBlockAddParameters"
            },
            "description": "Resource block parameters."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleResourceBlockAddParameters"
      },
      "MultipleResourceUpdateParameters": {
        "title": "MultipleResourceUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ResourceUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ResourceUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceUpdateParameters"
            },
            "description": "Resource updates."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleResourceUpdateParameters"
      },
      "MultipleRoutingRuleAddParameters": {
        "title": "MultipleRoutingRuleAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "RoutingRules"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "RoutingRules": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingRuleAddParameter"
            },
            "description": "Collection of Routing rules to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleRoutingRuleAddParameters"
      },
      "MultipleRoutingRuleUpdateParameters": {
        "title": "MultipleRoutingRuleUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "RoutingRuleUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "RoutingRuleUpdates": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingRuleUpdateParameters"
            },
            "description": "Collection of Routing rules to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleRoutingRuleUpdateParameters"
      },
      "MultipleServiceOrderNoteAddParameters": {
        "title": "MultipleServiceOrderNoteAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ServiceOrderNotes"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceOrderNotes": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOrderNoteAddParameters"
            },
            "description": "Notes to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleServiceOrderNoteAddParameters"
      },
      "MultipleServiceOrderNoteUpdateParameters": {
        "title": "MultipleServiceOrderNoteUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ServiceOrderNoteUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceOrderNoteUpdates": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOrderNoteUpdateParameters"
            },
            "description": "Notes to be updated."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleServiceOrderNoteUpdateParameters"
      },
      "MultipleVoucherAddParameters": {
        "title": "MultipleVoucherAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "VoucherParameters"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "VoucherParameters": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherAddParameters"
            },
            "description": "Vouchers to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleVoucherAddParameters"
      },
      "MultipleVoucherCodeAddParameters": {
        "title": "MultipleVoucherCodeAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "VoucherCodeParameters"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "VoucherCodeParameters": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherCodeAddParameters"
            },
            "description": "Voucher codes to be added."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleVoucherCodeAddParameters"
      },
      "MultipleVoucherCodeDeleteParameters": {
        "title": "MultipleVoucherCodeDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "VoucherCodeIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "VoucherCodeIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the voucher codes to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleVoucherCodeDeleteParameters"
      },
      "MultipleVoucherDeleteParameters": {
        "title": "MultipleVoucherDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "VoucherIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "VoucherIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the vouchers to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleVoucherDeleteParameters"
      },
      "MultipleVoucherUpdateParameters": {
        "title": "MultipleVoucherUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "VoucherUpdates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "VoucherUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherUpdateParameters"
            },
            "description": "Details of voucher updates."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "MultipleVoucherUpdateParameters"
      },
      "NextAction": {
        "title": "NextAction",
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "NextAction"
      },
      "NextActionType": {
        "enum": [
          "RedirectToUrl"
        ],
        "type": "string"
      },
      "ObjectData": {
        "type": "object",
        "additionalProperties": false
      },
      "OldAddress": {
        "title": "OldAddress",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Line1": {
            "type": "string",
            "nullable": true
          },
          "Line2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "nullable": true
          },
          "CountrySubdivisionCode": {
            "type": "string",
            "nullable": true
          },
          "Latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Address of the customer.",
        "x-schema-id": "OldAddress"
      },
      "OldTaxation": {
        "title": "OldTaxation",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "TaxEnvironmentCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "LocalName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OldTaxation"
      },
      "OrderAdditionOptions": {
        "title": "OrderAdditionOptions",
        "type": "object",
        "properties": {
          "DisableItemGrouping": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderAdditionOptions"
      },
      "OrderAdditionParameters": {
        "title": "OrderAdditionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to be ordered.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) to be charged. Company billing may not be enabled for your integration.",
            "format": "uuid",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) to be charged.  **Deprecated!**",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "Options": {
            "$ref": "#/components/schemas/OrderAdditionOptions"
          },
          "ProductOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrderAdditionData"
            },
            "description": "Parameters of the ordered products.",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemAdditionData"
            },
            "description": "Parameters of the ordered custom items.",
            "nullable": true
          },
          "ConsumptionUtc": {
            "type": "string",
            "description": "Date and time of the order consumption in UTC timezone in ISO 8601 format. If not specified, current date and time is used. Please note, as order consumption is one-time event, the optional parameters StartUtc and EndUtc in [Product order parameters](https://mews-systems.gitbook.io/connector-api/operations/#product-order-parameters) should not be used.",
            "format": "date-time",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes of the order.",
            "nullable": true
          },
          "BusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BillId": {
            "type": "string",
            "description": "Identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) to which the created order will be assigned. The bill needs to be issued to the same account as the order.",
            "format": "uuid",
            "nullable": true
          },
          "LinkedReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderAdditionParameters"
      },
      "OrderAdditionResult": {
        "title": "OrderAdditionResult",
        "type": "object",
        "properties": {
          "OrderId": {
            "type": "string",
            "description": "Unique identifier of the created order.",
            "format": "uuid"
          },
          "ChargeId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderAdditionResult"
      },
      "OrderItem": {
        "title": "Order item",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the order item.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the order item belongs to.",
            "format": "uuid",
            "nullable": true
          },
          "AccountType": {
            "type": "string",
            "description": "A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type), e.g. customer or company.",
            "nullable": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the order item is assigned to.",
            "format": "uuid"
          },
          "ServiceOrderId": {
            "type": "string",
            "description": "Unique identifier of the [Service order](https://mews-systems.gitbook.io/connector-api/operations/serviceorders/#service-order) the order item is assigned to.",
            "format": "uuid"
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes.",
            "nullable": true
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) the order item is assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the order item belongs to.",
            "format": "uuid",
            "nullable": true
          },
          "UnitCount": {
            "type": "integer",
            "description": "Unit count of item, i.e. the number of sub-items or units, if applicable.",
            "format": "int32"
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "OriginalAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "RevenueType": {
            "type": "string",
            "description": "Revenue type of the item.",
            "nullable": true
          },
          "CreatorProfileId": {
            "type": "string",
            "description": "Unique identifier of the user who created the order item.",
            "format": "uuid"
          },
          "UpdaterProfileId": {
            "type": "string",
            "description": "Unique identifier of the user who updated the order item.",
            "format": "uuid"
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Creation date and time of the order item created in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Last update date and time of the order item in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "ConsumedUtc": {
            "type": "string",
            "description": "Date and time of the item consumption in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "CanceledUtc": {
            "type": "string",
            "nullable": true
          },
          "ClosedUtc": {
            "type": "string",
            "description": "Date and time of the item bill closure in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "description": "Start of the order item in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "ClaimedUtc": {
            "type": "string",
            "nullable": true
          },
          "AccountingState": {
            "type": "string",
            "description": "Accounting state of the order item.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Order item type, e.g. whether product order or space order.",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/OrderItemOptions"
          },
          "Data": {
            "$ref": "#/components/schemas/OrderItemData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItem"
      },
      "OrderItemAdditionData": {
        "title": "OrderItemAdditionData",
        "required": [
          "Name",
          "UnitAmount",
          "UnitCount"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "minLength": 1,
            "type": "string"
          },
          "UnitCount": {
            "type": "integer",
            "format": "int32"
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "AccountingCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Category": {
            "$ref": "#/components/schemas/AccountingCategoryParameters"
          },
          "UnitCost": {
            "$ref": "#/components/schemas/CostParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItemAdditionData"
      },
      "OrderItemData": {
        "title": "OrderItemData",
        "type": "object",
        "properties": {
          "Discriminator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderItemDataDiscriminator"
              }
            ],
            "nullable": true
          },
          "Rebate": {
            "$ref": "#/components/schemas/OrderItemRebateData"
          },
          "Product": {
            "$ref": "#/components/schemas/OrderItemProductData"
          }
        },
        "additionalProperties": false,
        "description": "Additional order item data.",
        "x-schema-id": "OrderItemData"
      },
      "OrderItemDataDiscriminator": {
        "enum": [
          "Rebate",
          "Product"
        ],
        "type": "string"
      },
      "OrderItemFilterParameters": {
        "title": "OrderItemFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the order items for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "OrderItemIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Order items](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item). Required if no other filter is provided.",
            "nullable": true
          },
          "ServiceOrderIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the service orders ([product service orders](https://mews-systems.gitbook.io/connector-api/operations/productserviceorders/#product-service-order) or [reservations](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06)). Required if no other filter is provided.",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Required if no other filter is provided.",
            "nullable": true
          },
          "BillIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) to which order item is assigned. Required if no other filter is provided.",
            "nullable": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ConsumedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "CanceledUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ClosedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "currency",
            "nullable": true
          },
          "AccountingStates": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingState"
            },
            "description": "Accounting state of the item.",
            "nullable": true
          },
          "Types": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemType"
            },
            "description": "Order item type, e.g. whether product order or space order.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItemFilterParameters"
      },
      "OrderItemOld": {
        "title": "Order item",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the item.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the item belongs to.",
            "format": "uuid"
          },
          "OrderId": {
            "type": "string",
            "description": "Unique identifier of the order (or [Reservation](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06) which is a special type of order) the item belongs to.",
            "format": "uuid"
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) the item is assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the item belongs to.",
            "format": "uuid",
            "nullable": true
          },
          "UnitCount": {
            "type": "integer",
            "description": "Unit count of item, i.e. the number of sub-items or units, if applicable.",
            "format": "int32"
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "OriginalAmount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "RevenueType": {
            "type": "string",
            "description": "Revenue type of the item.",
            "nullable": true
          },
          "CreatorProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "UpdaterProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "CreatedUtc": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "ConsumedUtc": {
            "type": "string",
            "description": "Date and time of the item consumption in UTC timezone in ISO 8601 format.",
            "format": "date",
            "nullable": true
          },
          "CanceledUtc": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "ClosedUtc": {
            "type": "string",
            "description": "Date and time of the item bill closure in UTC timezone in ISO 8601 format.",
            "format": "date",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "AccountingState": {
            "type": "string",
            "description": "Accounting state of the item.",
            "nullable": true
          },
          "Data": {
            "title": "Data",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/OrderItemTypeOld"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RebateOrderItemData"
                  },
                  {
                    "$ref": "#/components/schemas/ProductOrderItemData"
                  }
                ]
              }
            },
            "description": "Additional data specific to particular order item."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItemOld"
      },
      "OrderItemOptions": {
        "title": "OrderItemOptions",
        "type": "object",
        "properties": {
          "CanceledWithReservation": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Options of the order item.",
        "x-schema-id": "OrderItemOptions"
      },
      "OrderItemProductData": {
        "title": "OrderItemProductData",
        "type": "object",
        "properties": {
          "ProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItemProductData"
      },
      "OrderItemRebateData": {
        "title": "OrderItemRebateData",
        "type": "object",
        "properties": {
          "RebatedItemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItemRebateData"
      },
      "OrderItemResult": {
        "title": "OrderItemResult",
        "required": [
          "OrderItems"
        ],
        "type": "object",
        "properties": {
          "OrderItems": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "description": "Set of requested order items."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest order item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older order items.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderItemResult"
      },
      "OrderItemType": {
        "enum": [
          "CancellationFee",
          "NightRebate",
          "ProductOrderRebate",
          "AdditionalExpenseRebate",
          "Deposit",
          "ExchangeRateDifference",
          "CustomItem",
          "ServiceCharge",
          "CityTax",
          "CityTaxDiscount",
          "SpaceOrder",
          "ProductOrder",
          "Surcharge",
          "TaxCorrection",
          "ResourceUpgradeFee",
          "InvoiceFee"
        ],
        "type": "string"
      },
      "OrderItemTypeOld": {
        "enum": [
          "CancellationFee",
          "Rebate",
          "Deposit",
          "ExchangeRateDifference",
          "CustomItem",
          "Surcharge",
          "SurchargeDiscount",
          "SpaceOrder",
          "ProductOrder",
          "Other",
          "TaxCorrection",
          "ResourceUpgradeFee",
          "InvoiceFee"
        ],
        "type": "string"
      },
      "OrderNote": {
        "title": "OrderNote",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "OrderId": {
            "type": "string",
            "format": "uuid"
          },
          "Text": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderNoteType"
              }
            ],
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OrderNote"
      },
      "OrderNoteType": {
        "enum": [
          "General",
          "ChannelManager"
        ],
        "type": "string"
      },
      "Outlet": {
        "title": "Outlet",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "IsActive",
          "Name",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the outlet.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the outlet is still active."
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the outlet."
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the outlet in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the outlet in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Outlet"
      },
      "OutletBill": {
        "title": "Outlet bill",
        "required": [
          "ClosedUtc",
          "EnterpriseId",
          "Id",
          "OutletId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the bill.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "OutletId": {
            "type": "string",
            "description": "Unique identifier of the [Outlet](https://mews-systems.gitbook.io/connector-api/operations/outlets/#outlet) where the bill was issued.",
            "format": "uuid"
          },
          "Number": {
            "type": "string",
            "description": "Number of the bill.",
            "nullable": true
          },
          "ClosedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the bill closure in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the bill in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes on the bill.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletBill"
      },
      "OutletBillParameters": {
        "title": "OutletBillParameters",
        "required": [
          "ClosedUtc",
          "Items",
          "Number",
          "OutletId"
        ],
        "type": "object",
        "properties": {
          "OutletId": {
            "type": "string",
            "format": "uuid"
          },
          "Number": {
            "minLength": 1,
            "type": "string"
          },
          "ClosedUtc": {
            "minLength": 1,
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutletItemParameters"
            }
          },
          "AccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletBillParameters"
      },
      "OutletFilterParameters": {
        "title": "OutletFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "OutletIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Outlets](https://mews-systems.gitbook.io/connector-api/operations/#outlet).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletFilterParameters"
      },
      "OutletItem": {
        "title": "Outlet item",
        "required": [
          "BillId",
          "ConsumedUtc",
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "Type",
          "UnitCount",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the item.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Outlet bill](https://mews-systems.gitbook.io/connector-api/operations/#outlet-bill) the item belongs to.",
            "format": "uuid"
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the item belongs to.",
            "format": "uuid",
            "nullable": true
          },
          "Type": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the item."
          },
          "Name": {
            "type": "string",
            "description": "Name of the item.",
            "nullable": true
          },
          "UnitCount": {
            "type": "integer",
            "description": "Unit count of the item.",
            "format": "int32"
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the item creation in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the item in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "ConsumedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the item consumption in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "ExternalIdentifier": {
            "type": "string",
            "description": "An identifier of this item from another system.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes.",
            "nullable": true
          },
          "PaymentCardPaymentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "UnitCost": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletItem"
      },
      "OutletItemParameters": {
        "title": "OutletItemParameters",
        "required": [
          "ConsumedUtc",
          "Name",
          "UnitAmount",
          "UnitCount"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "minLength": 1,
            "type": "string"
          },
          "UnitCount": {
            "type": "integer",
            "format": "int32"
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "ConsumedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategory": {
            "$ref": "#/components/schemas/AccountingCategoryParameters"
          },
          "UnitCost": {
            "$ref": "#/components/schemas/CostParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletItemParameters"
      },
      "OutletItemResult": {
        "title": "OutletItemResult",
        "type": "object",
        "properties": {
          "OutletItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutletItem"
            },
            "description": "The outlet items.",
            "nullable": true
          },
          "OutletBills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutletBill"
            },
            "description": "The outlet bills of the items.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest outlet item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older outlet items.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletItemResult"
      },
      "OutletItemsFilterParameters": {
        "title": "OutletItemsFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Ids": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "TimeFilter": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ConsumedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ClosedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "currency",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletItemsFilterParameters"
      },
      "OutletResult": {
        "title": "OutletResult",
        "required": [
          "Outlets"
        ],
        "type": "object",
        "properties": {
          "Outlets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Outlet"
            },
            "description": "The outlets of the enterprise."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "OutletResult"
      },
      "Parameters": {
        "title": "Parameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Parameters"
      },
      "ParentProductCategory": {
        "title": "ParentProductCategory",
        "required": [
          "Id",
          "Names"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false,
        "description": "[Parent product category](https://mews-systems.gitbook.io/connector-api/operations/#parent-product-category).",
        "x-schema-id": "ParentProductCategory"
      },
      "PassportScannerCommandData": {
        "title": "PassportScannerCommandData",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PaymentTerminalCommandData"
          },
          {
            "$ref": "#/components/schemas/PrinterCommandData"
          },
          {
            "$ref": "#/components/schemas/KeyCutterCommandData"
          },
          {
            "$ref": "#/components/schemas/FiscalMachineCommandData"
          },
          {
            "$ref": "#/components/schemas/PassportScannerCommandData"
          }
        ],
        "properties": {
          "PassportScannerId": {
            "type": "string",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PassportScannerCommandData"
      },
      "Payment": {
        "title": "Payment",
        "required": [
          "AccountingState",
          "EnterpriseId",
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "nullable": true
          },
          "BillId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "OriginalAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "SettlementId": {
            "type": "string",
            "nullable": true
          },
          "ConsumedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ClosedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ChargedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SettlementUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AccountingState": {
            "$ref": "#/components/schemas/AccountingState"
          },
          "State": {
            "$ref": "#/components/schemas/PaymentState"
          },
          "Identifier": {
            "type": "string",
            "nullable": true
          },
          "Kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentKind"
              }
            ],
            "nullable": true
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentDiscriminator"
              }
            ],
            "nullable": true
          },
          "Data": {
            "$ref": "#/components/schemas/PaymentData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Payment"
      },
      "PaymentCardPaymentData": {
        "title": "PaymentCardPaymentData",
        "type": "object",
        "properties": {
          "PaymentCardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentCardPaymentData"
      },
      "PaymentCardStorage": {
        "title": "PaymentCardStorage",
        "type": "object",
        "properties": {
          "PublicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains information about payment card storage.",
        "x-schema-id": "PaymentCardStorage"
      },
      "PaymentCreditCardData": {
        "title": "PaymentCreditCardData",
        "type": "object",
        "properties": {
          "CreditCardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Transaction": {
            "$ref": "#/components/schemas/CreditCardTransaction"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentCreditCardData"
      },
      "PaymentData": {
        "title": "PaymentData",
        "type": "object",
        "properties": {
          "Discriminator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentDataDiscriminator"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "CreditCard": {
            "$ref": "#/components/schemas/PaymentCreditCardData"
          },
          "Invoice": {
            "$ref": "#/components/schemas/PaymentInvoiceData"
          },
          "External": {
            "$ref": "#/components/schemas/PaymentExternalData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentData"
      },
      "PaymentDataDiscriminator": {
        "enum": [
          "CreditCard",
          "Invoice",
          "External"
        ],
        "type": "string"
      },
      "PaymentDiscriminator": {
        "enum": [
          "Payment",
          "CreditCardPayment",
          "AlternativePayment",
          "CashPayment",
          "InvoicePayment",
          "ExternalPayment"
        ],
        "type": "string"
      },
      "PaymentExternalData": {
        "title": "PaymentExternalData",
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/ExternalPaymentType"
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentExternalData"
      },
      "PaymentFilterParameters": {
        "title": "PaymentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the payments for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "PaymentIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of specific [Payments](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment). Required if no other filter is provided.",
            "nullable": true
          },
          "BillIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of specific [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) to which payments are assigned. Required if no other filter is provided.",
            "nullable": true
          },
          "ReservationIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ChargedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ClosedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "SettlementUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "currency",
            "nullable": true
          },
          "AccountingStates": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingState"
            },
            "description": "Accounting state of the item.",
            "nullable": true
          },
          "States": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentState"
            },
            "nullable": true
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentDiscriminator"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentFilterParameters"
      },
      "PaymentInvoiceData": {
        "title": "PaymentInvoiceData",
        "type": "object",
        "properties": {
          "InvoiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentInvoiceData"
      },
      "PaymentItemOld": {
        "title": "Payment item",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the item.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the item belongs to.",
            "format": "uuid"
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) the item is assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the item belongs to.",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "OriginalAmount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "AmountDefault": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes.",
            "nullable": true
          },
          "SettlementId": {
            "type": "string",
            "description": "Identifier of the settled payment from the external system (ApplePay/GooglePay).",
            "nullable": true
          },
          "ConsumedUtc": {
            "type": "string",
            "description": "Date and time of the item consumption in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "ClosedUtc": {
            "type": "string",
            "description": "Date and time of the item bill closure in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "AccountingState": {
            "type": "string",
            "description": "Accounting state of the item.",
            "nullable": true
          },
          "State": {
            "type": "string",
            "description": "Payment state of the item.",
            "nullable": true
          },
          "Identifier": {
            "type": "string",
            "nullable": true
          },
          "Data": {
            "title": "Data",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/PaymentType"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentCardPaymentData"
                  },
                  {
                    "$ref": "#/components/schemas/InvoicePaymentData"
                  }
                ]
              }
            },
            "description": "Additional data specific to particular payment item."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentItemOld"
      },
      "PaymentKind": {
        "enum": [
          "Payment",
          "Chargeback",
          "ChargebackReversal",
          "Refund"
        ],
        "type": "string"
      },
      "PaymentRefundParameters": {
        "title": "PaymentRefundParameters",
        "required": [
          "AccessToken",
          "AccountId",
          "Client",
          "ClientToken",
          "PaymentId",
          "Reason"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "PaymentId": {
            "type": "string",
            "description": "Unique identifier of specific [Payment](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the payment belongs to.",
            "format": "uuid"
          },
          "Reason": {
            "minLength": 1,
            "type": "string",
            "description": "Refund reason."
          },
          "ValueToRefund": {
            "type": "number",
            "description": "Refund amount. If not provided, the whole payment will be refunded.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentRefundParameters"
      },
      "PaymentRefundResult": {
        "title": "PaymentRefundResult",
        "required": [
          "PaymentId",
          "RefundId",
          "Type"
        ],
        "type": "object",
        "properties": {
          "PaymentId": {
            "type": "string",
            "description": "Unique identifier of specific [Payment](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).",
            "format": "uuid"
          },
          "RefundId": {
            "type": "string",
            "description": "Unique identifier of refund.",
            "format": "uuid"
          },
          "Type": {
            "$ref": "#/components/schemas/RefundType"
          },
          "Amount": {
            "$ref": "#/components/schemas/CurrencyValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentRefundResult"
      },
      "PaymentRequest": {
        "title": "Payment request",
        "required": [
          "AccountId",
          "Amount",
          "CreatedUtc",
          "Description",
          "EnterpriseId",
          "ExpirationUtc",
          "Id",
          "Reason",
          "State",
          "Type",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the payment request.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) to which the payment request was issued.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "ReservationGroupId": {
            "type": "string",
            "description": "Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations#reservation-group).",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/PaymentRequestState"
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "Type": {
            "$ref": "#/components/schemas/PaymentRequestType"
          },
          "Reason": {
            "$ref": "#/components/schemas/PaymentRequestReason"
          },
          "ExpirationUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the payment request's expiration in ISO 8601 format.",
            "format": "date-time"
          },
          "Description": {
            "minLength": 1,
            "type": "string",
            "description": "Description of the payment request."
          },
          "Notes": {
            "type": "string",
            "description": "Payment request's notes.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the payment request in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the payment request in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentRequest"
      },
      "PaymentRequestAddParameters": {
        "title": "PaymentRequestAddParameters",
        "required": [
          "AccountId",
          "Amount",
          "Description",
          "ExpirationUtc",
          "Reason",
          "Type"
        ],
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "Amount": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "Type": {
            "$ref": "#/components/schemas/PaymentRequestType"
          },
          "Reason": {
            "$ref": "#/components/schemas/PaymentRequestReason"
          },
          "ExpirationUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "Description": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "Notes": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentRequestAddParameters"
      },
      "PaymentRequestFilterParameters": {
        "title": "PaymentRequestFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "PaymentRequestIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Payment requests](https://mews-systems.gitbook.io/connector-api/operations/#payment-request).",
            "nullable": true
          },
          "AccountIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) accounts to which payment requests were issued.",
            "nullable": true
          },
          "ReservationIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "States": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentRequestState"
            },
            "description": "A list of payment request states to filter by.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentRequestFilterParameters"
      },
      "PaymentRequestReason": {
        "enum": [
          "Other",
          "PaymentCardMissing",
          "PaymentCardDeclined",
          "Deposit",
          "Prepayment",
          "Fee"
        ],
        "type": "string"
      },
      "PaymentRequestResult": {
        "title": "PaymentRequestResult",
        "required": [
          "PaymentRequests"
        ],
        "type": "object",
        "properties": {
          "PaymentRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentRequest"
            },
            "description": "The filtered payment requests."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest payment request returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older payment requests.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentRequestResult"
      },
      "PaymentRequestState": {
        "enum": [
          "Pending",
          "Completed",
          "Canceled",
          "Expired"
        ],
        "type": "string"
      },
      "PaymentRequestType": {
        "enum": [
          "Payment",
          "Preauthorization"
        ],
        "type": "string"
      },
      "PaymentResult": {
        "title": "PaymentResult",
        "required": [
          "Payments"
        ],
        "type": "object",
        "properties": {
          "Payments": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "description": "The list of filtered payments."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest payment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of payments.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentResult"
      },
      "PaymentState": {
        "enum": [
          "Charged",
          "Canceled",
          "Pending",
          "Failed",
          "Verifying"
        ],
        "type": "string"
      },
      "PaymentTerminalCommandData": {
        "title": "PaymentTerminalCommandData",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PaymentTerminalCommandData"
          },
          {
            "title": "PrinterCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "title": "KeyCutterCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "title": "FiscalMachineCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "title": "PassportScannerCommandData",
                        "type": "object",
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/PaymentTerminalCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PrinterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/KeyCutterCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/FiscalMachineCommandData"
                          },
                          {
                            "$ref": "#/components/schemas/PassportScannerCommandData"
                          }
                        ],
                        "properties": {
                          "PassportScannerId": {
                            "type": "string",
                            "nullable": true
                          },
                          "ReservationId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "CustomerId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false,
                        "x-schema-id": "PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "FiscalMachineId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ApiUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "FiscalMachineData": {
                        "type": "string",
                        "nullable": true
                      },
                      "Bill": {
                        "$ref": "#/components/schemas/Bill"
                      },
                      "TaxIdentifier": {
                        "type": "string",
                        "nullable": true
                      },
                      "BillFiscalMachineData": {
                        "title": "BillFiscalMachineData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ItalianFiscalMachineData"
                              }
                            ]
                          }
                        }
                      },
                      "PayloadData": {
                        "title": "PayloadData",
                        "properties": {
                          "discriminator": {
                            "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "KeyCutterId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "UserName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Password": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyCutterData": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyCount": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LockIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "StartUtc": {
                    "type": "string",
                    "nullable": true
                  },
                  "EndUtc": {
                    "type": "string",
                    "nullable": true
                  },
                  "FirstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "LastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Telephone": {
                    "type": "string",
                    "nullable": true
                  },
                  "Email": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ReservationNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "KeyMode": {
                    "type": "string",
                    "nullable": true
                  },
                  "ExternalRequestIdentifier": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "KeyCutterCommandData"
              },
              {
                "title": "FiscalMachineCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "FiscalMachineId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "FiscalMachineData": {
                    "type": "string",
                    "nullable": true
                  },
                  "Bill": {
                    "$ref": "#/components/schemas/Bill"
                  },
                  "TaxIdentifier": {
                    "type": "string",
                    "nullable": true
                  },
                  "BillFiscalMachineData": {
                    "title": "BillFiscalMachineData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ItalianFiscalMachineData"
                          }
                        ]
                      }
                    }
                  },
                  "PayloadData": {
                    "title": "PayloadData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "CopyCount": {
                "type": "integer",
                "format": "int32"
              },
              "FileType": {
                "type": "string",
                "nullable": true
              },
              "FileData": {
                "type": "string",
                "nullable": true
              },
              "PrinterName": {
                "type": "string",
                "nullable": true
              },
              "PrinterDriverName": {
                "type": "string",
                "nullable": true
              },
              "PrinterPortName": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PrinterCommandData"
          },
          {
            "title": "KeyCutterCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "title": "FiscalMachineCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "FiscalMachineId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "FiscalMachineData": {
                    "type": "string",
                    "nullable": true
                  },
                  "Bill": {
                    "$ref": "#/components/schemas/Bill"
                  },
                  "TaxIdentifier": {
                    "type": "string",
                    "nullable": true
                  },
                  "BillFiscalMachineData": {
                    "title": "BillFiscalMachineData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ItalianFiscalMachineData"
                          }
                        ]
                      }
                    }
                  },
                  "PayloadData": {
                    "title": "PayloadData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "KeyCutterId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "UserName": {
                "type": "string",
                "nullable": true
              },
              "Password": {
                "type": "string",
                "nullable": true
              },
              "KeyCutterData": {
                "type": "string",
                "nullable": true
              },
              "KeyCount": {
                "type": "integer",
                "format": "int32"
              },
              "LockIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "StartUtc": {
                "type": "string",
                "nullable": true
              },
              "EndUtc": {
                "type": "string",
                "nullable": true
              },
              "FirstName": {
                "type": "string",
                "nullable": true
              },
              "LastName": {
                "type": "string",
                "nullable": true
              },
              "Telephone": {
                "type": "string",
                "nullable": true
              },
              "Email": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "ReservationNumber": {
                "type": "string",
                "nullable": true
              },
              "KeyMode": {
                "type": "string",
                "nullable": true
              },
              "ExternalRequestIdentifier": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "KeyCutterCommandData"
          },
          {
            "title": "FiscalMachineCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "FiscalMachineId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "FiscalMachineData": {
                "type": "string",
                "nullable": true
              },
              "Bill": {
                "$ref": "#/components/schemas/Bill"
              },
              "TaxIdentifier": {
                "type": "string",
                "nullable": true
              },
              "BillFiscalMachineData": {
                "title": "BillFiscalMachineData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ItalianFiscalMachineData"
                      }
                    ]
                  }
                }
              },
              "PayloadData": {
                "title": "PayloadData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false,
            "x-schema-id": "FiscalMachineCommandData"
          },
          {
            "title": "PassportScannerCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "$ref": "#/components/schemas/PassportScannerCommandData"
              }
            ],
            "properties": {
              "PassportScannerId": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "CustomerId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PassportScannerCommandData"
          }
        ],
        "properties": {
          "PaymentTerminalId": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid"
          },
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "BillId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "PaymentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "PreauthorizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "Fee": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "PaymentTerminalData": {
            "type": "string",
            "nullable": true
          },
          "PayworksData": {
            "$ref": "#/components/schemas/PayworksData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentTerminalCommandData"
      },
      "PaymentTerminalCommandParameters": {
        "title": "PaymentTerminalCommandParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerId",
          "TerminalId",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token authenticating access to the enterprise integration."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token authenticating the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TerminalId": {
            "type": "string",
            "description": "Unique identifier of the payment terminal.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          },
          "Type": {
            "$ref": "#/components/schemas/PaymentTerminalCommandType"
          },
          "Amount": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "BillId": {
            "type": "string",
            "description": "Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill).",
            "format": "uuid",
            "nullable": true
          },
          "PaymentRequestId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PaymentTerminalCommandParameters"
      },
      "PaymentTerminalCommandType": {
        "enum": [
          "Payment",
          "Preauthorization"
        ],
        "type": "string"
      },
      "PaymentType": {
        "enum": [
          "CreditCard",
          "Invoice",
          "Cash",
          "Unspecified",
          "BadDebts",
          "WireTransfer",
          "ExchangeRateDifference",
          "ExchangeRoundingDifference",
          "BankCharges",
          "Cheque",
          "Other"
        ],
        "type": "string"
      },
      "PayworksData": {
        "title": "PayworksData",
        "type": "object",
        "properties": {
          "MerchantIdentifier": {
            "type": "string",
            "nullable": true
          },
          "MerchantSecretKey": {
            "type": "string",
            "nullable": true
          },
          "ApiUrl": {
            "type": "string",
            "nullable": true
          },
          "Descriptor": {
            "type": "string",
            "nullable": true
          },
          "AcceptedCreditCardTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PayworksData"
      },
      "PerUnitPriceParameters": {
        "title": "PerUnitPriceParameters",
        "type": "object",
        "properties": {
          "Index": {
            "type": "integer",
            "format": "int32"
          },
          "Amount": {
            "$ref": "#/components/schemas/AmountParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PerUnitPriceParameters"
      },
      "PerUnitPriceParametersIEnumerableUpdateValue": {
        "title": "PerUnitPriceParametersIEnumerableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerUnitPriceParameters"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PerUnitPriceParametersIEnumerableUpdateValue"
      },
      "PersonCount": {
        "title": "PersonCount",
        "type": "object",
        "properties": {
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PersonCount"
      },
      "PersonCountParameters": {
        "title": "PersonCountParameters",
        "type": "object",
        "properties": {
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PersonCountParameters"
      },
      "PersonCountParametersIEnumerableUpdateValue": {
        "title": "PersonCountParametersIEnumerableUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonCountParameters"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PersonCountParametersIEnumerableUpdateValue"
      },
      "PersonData": {
        "type": "object",
        "additionalProperties": false
      },
      "PickupDistribution": {
        "enum": [
          "AllInOneGroup",
          "IndividualGroups"
        ],
        "type": "string"
      },
      "Preauthorization": {
        "title": "Preauthorization",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the preauthorization.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid"
          },
          "CreditCardId": {
            "type": "string",
            "description": "Unique identifier of the credit card.",
            "format": "uuid",
            "nullable": true
          },
          "Amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "State": {
            "type": "string",
            "description": "State of the preauthorization.",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "description": "Code of the preauthorization.",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Preauthorization"
      },
      "PreauthorizationResult": {
        "title": "PreauthorizationResult",
        "type": "object",
        "properties": {
          "Preauthorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Preauthorization"
            },
            "description": "Preauthorizations of the specified [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PreauthorizationResult"
      },
      "PricingMode": {
        "enum": [
          "Gross",
          "Net"
        ],
        "type": "string"
      },
      "PrinterCommandData": {
        "title": "PrinterCommandData",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PaymentTerminalCommandData"
          },
          {
            "$ref": "#/components/schemas/PrinterCommandData"
          },
          {
            "title": "KeyCutterCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "title": "FiscalMachineCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "title": "PassportScannerCommandData",
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PaymentTerminalCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PrinterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/KeyCutterCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/FiscalMachineCommandData"
                      },
                      {
                        "$ref": "#/components/schemas/PassportScannerCommandData"
                      }
                    ],
                    "properties": {
                      "PassportScannerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "ReservationId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "CustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false,
                    "x-schema-id": "PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "FiscalMachineId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ApiUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "FiscalMachineData": {
                    "type": "string",
                    "nullable": true
                  },
                  "Bill": {
                    "$ref": "#/components/schemas/Bill"
                  },
                  "TaxIdentifier": {
                    "type": "string",
                    "nullable": true
                  },
                  "BillFiscalMachineData": {
                    "title": "BillFiscalMachineData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ItalianFiscalMachineData"
                          }
                        ]
                      }
                    }
                  },
                  "PayloadData": {
                    "title": "PayloadData",
                    "properties": {
                      "discriminator": {
                        "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "KeyCutterId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "UserName": {
                "type": "string",
                "nullable": true
              },
              "Password": {
                "type": "string",
                "nullable": true
              },
              "KeyCutterData": {
                "type": "string",
                "nullable": true
              },
              "KeyCount": {
                "type": "integer",
                "format": "int32"
              },
              "LockIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "StartUtc": {
                "type": "string",
                "nullable": true
              },
              "EndUtc": {
                "type": "string",
                "nullable": true
              },
              "FirstName": {
                "type": "string",
                "nullable": true
              },
              "LastName": {
                "type": "string",
                "nullable": true
              },
              "Telephone": {
                "type": "string",
                "nullable": true
              },
              "Email": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "ReservationNumber": {
                "type": "string",
                "nullable": true
              },
              "KeyMode": {
                "type": "string",
                "nullable": true
              },
              "ExternalRequestIdentifier": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "KeyCutterCommandData"
          },
          {
            "title": "FiscalMachineCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "title": "PassportScannerCommandData",
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentTerminalCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PrinterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/KeyCutterCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/FiscalMachineCommandData"
                  },
                  {
                    "$ref": "#/components/schemas/PassportScannerCommandData"
                  }
                ],
                "properties": {
                  "PassportScannerId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReservationId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "CustomerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "x-schema-id": "PassportScannerCommandData"
              }
            ],
            "properties": {
              "FiscalMachineId": {
                "type": "string",
                "nullable": true
              },
              "ApiUrl": {
                "type": "string",
                "nullable": true
              },
              "FiscalMachineData": {
                "type": "string",
                "nullable": true
              },
              "Bill": {
                "$ref": "#/components/schemas/Bill"
              },
              "TaxIdentifier": {
                "type": "string",
                "nullable": true
              },
              "BillFiscalMachineData": {
                "title": "BillFiscalMachineData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/BillFiscalMachineDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ItalianFiscalMachineData"
                      }
                    ]
                  }
                }
              },
              "PayloadData": {
                "title": "PayloadData",
                "properties": {
                  "discriminator": {
                    "$ref": "#/components/schemas/FiscalMachinePayloadDataDiscriminator"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false,
            "x-schema-id": "FiscalMachineCommandData"
          },
          {
            "title": "PassportScannerCommandData",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentTerminalCommandData"
              },
              {
                "$ref": "#/components/schemas/PrinterCommandData"
              },
              {
                "$ref": "#/components/schemas/KeyCutterCommandData"
              },
              {
                "$ref": "#/components/schemas/FiscalMachineCommandData"
              },
              {
                "$ref": "#/components/schemas/PassportScannerCommandData"
              }
            ],
            "properties": {
              "PassportScannerId": {
                "type": "string",
                "nullable": true
              },
              "ReservationId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "CustomerId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "x-schema-id": "PassportScannerCommandData"
          }
        ],
        "properties": {
          "CopyCount": {
            "type": "integer",
            "format": "int32"
          },
          "FileType": {
            "type": "string",
            "nullable": true
          },
          "FileData": {
            "type": "string",
            "nullable": true
          },
          "PrinterName": {
            "type": "string",
            "nullable": true
          },
          "PrinterDriverName": {
            "type": "string",
            "nullable": true
          },
          "PrinterPortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PrinterCommandData"
      },
      "PrinterCommandParameters": {
        "title": "PrinterCommandParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CopyCount",
          "Data",
          "PrinterId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "PrinterId": {
            "type": "string",
            "description": "Uniqque identifier of the Printer [Device](https://mews-systems.gitbook.io/connector-api/operations/devices/#device) where to print the document.",
            "format": "uuid"
          },
          "Data": {
            "minLength": 1,
            "type": "string",
            "description": "Base64 encoded data of PDF document to print."
          },
          "CopyCount": {
            "type": "integer",
            "description": "Count of copies to be printed.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "PrinterCommandParameters"
      },
      "Product": {
        "title": "Product",
        "required": [
          "CreatedUtc",
          "Id",
          "IsActive",
          "ServiceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the product.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).",
            "format": "uuid"
          },
          "CategoryId": {
            "type": "string",
            "description": "Unique identifier of the Product category.",
            "format": "uuid",
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "description": "Unique identifier of [Accounting Category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category).",
            "format": "uuid",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the product is still active."
          },
          "IsDefault": {
            "type": "boolean"
          },
          "Name": {
            "type": "string",
            "description": "Name of the product. **Deprecated!** Please use Names",
            "nullable": true,
            "deprecated": true
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the product name.",
            "nullable": true
          },
          "ExternalName": {
            "type": "string",
            "description": "Name of the product meant to be displayed to customer. **Deprecated!** Please use ExternalNames",
            "nullable": true,
            "deprecated": true
          },
          "ExternalNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the product name meant to be displayed to customer.",
            "nullable": true
          },
          "ShortName": {
            "type": "string",
            "description": "Short name of the product. **Deprecated!** Please use ShortNames",
            "nullable": true,
            "deprecated": true
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the product short name.",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description of the product. **Deprecated!** Please use Descriptions",
            "nullable": true,
            "deprecated": true
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the product description.",
            "nullable": true
          },
          "Charging": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "ChargingMode": {
            "type": "string",
            "description": "Charging mode of the product.",
            "nullable": true
          },
          "Posting": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "PostingMode": {
            "type": "string",
            "description": "Posting mode of the product.",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/ProductOptions"
          },
          "Promotions": {
            "$ref": "#/components/schemas/Promotions"
          },
          "Classifications": {
            "$ref": "#/components/schemas/ProductClassifications"
          },
          "Price": {
            "$ref": "#/components/schemas/ExtendedAmount"
          },
          "Pricing": {
            "title": "Pricing",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/ProductPricing"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ExtendedAmount"
                  },
                  {
                    "$ref": "#/components/schemas/RelativeProductPrice"
                  }
                ]
              }
            }
          },
          "ImageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "Ordering": {
            "type": "integer",
            "format": "int32"
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of the product from external system.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the product in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the product in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Product"
      },
      "ProductAgeCategoryPrice": {
        "title": "ProductAgeCategoryPrice",
        "type": "object",
        "properties": {
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductAgeCategoryPrice"
      },
      "ProductCategory": {
        "title": "Product category",
        "required": [
          "CreatedUtc",
          "Id",
          "Names",
          "Ordering",
          "ServiceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the category.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) of the resource category.",
            "format": "uuid"
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the name."
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the short name.",
            "nullable": true
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the description.",
            "nullable": true
          },
          "ParentProductCategory": {
            "$ref": "#/components/schemas/ParentProductCategory"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the product category update in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time of the product category creation in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "Ordering": {
            "type": "integer",
            "description": "Ordering of the category, lower number corresponds to lower category (note that neither uniqueness nor continuous sequence is guaranteed).",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductCategory"
      },
      "ProductCategoryFilterParameters": {
        "title": "ProductCategoryFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource categories for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ProductCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Product category](https://mews-systems.gitbook.io/connector-api/operations/#product-category).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which the resource categories belong.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductCategoryFilterParameters"
      },
      "ProductCategoryResult": {
        "title": "ProductCategoryResult",
        "required": [
          "ProductCategories"
        ],
        "type": "object",
        "properties": {
          "ProductCategories": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategory"
            },
            "description": "Product categories."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductCategoryResult"
      },
      "ProductClassifications": {
        "title": "ProductClassifications",
        "type": "object",
        "properties": {
          "Food": {
            "type": "boolean"
          },
          "Beverage": {
            "type": "boolean"
          },
          "Wellness": {
            "type": "boolean"
          },
          "CityTax": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Classifications of the service.",
        "x-schema-id": "ProductClassifications"
      },
      "ProductDeleteParameters": {
        "title": "ProductDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ProductIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ProductIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Products](https://mews-systems.gitbook.io/connector-api/operations/#product) to delete."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductDeleteParameters"
      },
      "ProductFilterParameters": {
        "title": "ProductFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ProductIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)."
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductFilterParameters"
      },
      "ProductOptions": {
        "title": "ProductOptions",
        "type": "object",
        "properties": {
          "BillAsPackage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Options of the product.",
        "x-schema-id": "ProductOptions"
      },
      "ProductOrderAdditionData": {
        "title": "ProductOrderAdditionData",
        "required": [
          "ProductId"
        ],
        "type": "object",
        "properties": {
          "ProductId": {
            "type": "string",
            "format": "uuid"
          },
          "Count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UnitCost": {
            "$ref": "#/components/schemas/CostParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductOrderAdditionData"
      },
      "ProductOrderItemData": {
        "title": "ProductOrderItemData",
        "type": "object",
        "properties": {
          "ProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductOrderItemData"
      },
      "ProductPricing": {
        "enum": [
          "Absolute",
          "Relative"
        ],
        "type": "string"
      },
      "ProductPricingFilterParameters": {
        "title": "ProductPricingFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "format": "uuid"
          },
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductPricingFilterParameters"
      },
      "ProductPricingResult": {
        "title": "ProductPricingResult",
        "type": "object",
        "properties": {
          "ProductId": {
            "type": "string",
            "format": "uuid"
          },
          "TimeUnitStartsUtc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "BaseAmountPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amount"
            },
            "nullable": true
          },
          "AgeCategoryPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAgeCategoryPrice"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductPricingResult"
      },
      "ProductResult": {
        "title": "ProductResult",
        "type": "object",
        "properties": {
          "Products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "Products offered with the service.",
            "nullable": true
          },
          "CustomerProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "Products offered specifically to customers.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductResult"
      },
      "ProductServiceOrderFilterParameters": {
        "title": "ProductServiceOrderFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "nullable": true
          },
          "ProductServiceOrderIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Product service order](https://mews-systems.gitbook.io/connector-api/operations/#product-service-order).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)."
          },
          "AccountIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "States": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOrderState"
            },
            "description": "A list of product service order states to filter by.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductServiceOrderFilterParameters"
      },
      "ProductServiceOrderResult": {
        "title": "ProductServiceOrderResult",
        "required": [
          "ProductServiceOrders"
        ],
        "type": "object",
        "properties": {
          "ProductServiceOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOrder"
            },
            "description": "The product service order of the enterprise."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ProductServiceOrderResult"
      },
      "ProfileData": {
        "title": "ProfileData",
        "type": "object",
        "properties": {
          "Discriminator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProfileDataDiscriminator"
              }
            ],
            "nullable": true
          },
          "EnterpriseProfile": {
            "$ref": "#/components/schemas/EnterpriseProfileData"
          }
        },
        "additionalProperties": false,
        "description": "The profile data of the user who updated the loyalty membership.",
        "x-schema-id": "ProfileData"
      },
      "ProfileDataDiscriminator": {
        "enum": [
          "Personal",
          "Enterprise",
          "Platform",
          "Static",
          "Integration"
        ],
        "type": "string"
      },
      "Promotions": {
        "title": "Promotions",
        "type": "object",
        "properties": {
          "BeforeCheckIn": {
            "type": "boolean"
          },
          "AfterCheckIn": {
            "type": "boolean"
          },
          "DuringStay": {
            "type": "boolean"
          },
          "BeforeCheckOut": {
            "type": "boolean"
          },
          "AfterCheckOut": {
            "type": "boolean"
          },
          "DuringCheckOut": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Promotions of the service.",
        "x-schema-id": "Promotions"
      },
      "Rate": {
        "title": "Rate",
        "required": [
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the rate.",
            "format": "uuid"
          },
          "GroupId": {
            "type": "string",
            "description": "Unique identifier of [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group) where the rate belongs.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).",
            "format": "uuid"
          },
          "BaseRateId": {
            "type": "string",
            "description": "Unique identifier of the base [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate).",
            "format": "uuid",
            "nullable": true
          },
          "BusinessSegmentId": {
            "type": "string",
            "description": "Unique identifier of the [Business segment](https://mews-systems.gitbook.io/connector-api/operations/businesssegments/#business-segment).",
            "format": "uuid",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the rate is still active."
          },
          "IsEnabled": {
            "type": "boolean",
            "description": "Whether the rate is currently available to customers."
          },
          "IsPublic": {
            "type": "boolean",
            "description": "Whether the rate is publicly available."
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateType"
              }
            ],
            "description": "Type of the rate",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name of the rate (in the default language).",
            "nullable": true
          },
          "ShortName": {
            "type": "string",
            "description": "Short name of the rate (in the default language).",
            "nullable": true
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "ExternalNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the external name of the rate.",
            "nullable": true
          },
          "Description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the description of the rate.",
            "nullable": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of the rate from external system.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Rate"
      },
      "RateAddData": {
        "title": "RateAddData",
        "required": [
          "RateGroupId",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "RateGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "IsEnabled": {
            "type": "boolean"
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateType"
              }
            ],
            "nullable": true
          },
          "AccountingCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "ExternalNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "PricingType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RatePricingDiscriminator"
              }
            ],
            "nullable": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "Pricing": {
            "$ref": "#/components/schemas/RatePricingDataParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateAddData"
      },
      "RateAddOptions": {
        "title": "RateAddOptions",
        "type": "object",
        "properties": {
          "HidePriceFromGuest": {
            "type": "boolean"
          },
          "IsBonusPointsEligible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateAddOptions"
      },
      "RateAddParameters": {
        "title": "RateAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Rates"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Rates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateAddData"
            },
            "description": "Information about rates to be created."
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateAddParameters"
      },
      "RateAddResult": {
        "title": "RateAddResult",
        "type": "object",
        "properties": {
          "Rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "description": "Rates that have been added.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateAddResult"
      },
      "RateExtent": {
        "title": "RateExtent",
        "type": "object",
        "properties": {
          "Rates": {
            "type": "boolean"
          },
          "RateGroups": {
            "type": "boolean",
            "deprecated": true
          },
          "RateRestrictions": {
            "type": "boolean",
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned.",
        "x-schema-id": "RateExtent"
      },
      "RateFilterParameters": {
        "title": "RateFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/RateExtent"
          },
          "RateIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) from which the rates are requested."
          },
          "ExternalIdentifiers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate) from external systems.",
            "nullable": true
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted, or both types of record. If not specified, both active and deleted will be returned.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateFilterParameters"
      },
      "RateGroup": {
        "title": "Rate Group",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the rate group.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the rate group belongs to.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the rate group is still active."
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Creation date and time of the rate group in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Last update date and time of the rate group in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "Ordering": {
            "type": "integer",
            "description": "Ordering of the rate group.",
            "format": "int32"
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the name.",
            "nullable": true
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the short name.",
            "nullable": true
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the description.",
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "description": "Identifier of the rate group from external system.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateGroup"
      },
      "RateGroupFilterParameters": {
        "title": "RateGroupFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "RateGroupIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group). Required if ServiceIds filter is not provided.",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Required if RateGroupIds filter is not provided.",
            "nullable": true
          },
          "ExternalIdentifiers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group) from external systems.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateGroupFilterParameters"
      },
      "RateGroupOld": {
        "title": "RateGroupOld",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateGroupOld"
      },
      "RateGroupResult": {
        "title": "RateGroupResult",
        "type": "object",
        "properties": {
          "RateGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateGroup"
            },
            "description": "The filtered rate groups.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest rate group returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older rate groups.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateGroupResult"
      },
      "RateOptions": {
        "title": "RateOptions",
        "required": [
          "HidePriceFromGuest",
          "IsBonusPointsEligible"
        ],
        "type": "object",
        "properties": {
          "HidePriceFromGuest": {
            "type": "boolean"
          },
          "IsBonusPointsEligible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateOptions"
      },
      "RatePriceUpdate": {
        "title": "RatePriceUpdate",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "CategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RatePriceUpdate"
      },
      "RatePriceUpdateParameters": {
        "title": "RatePriceUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "PriceUpdates",
          "RateId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "RateId": {
            "type": "string",
            "description": "Unique identifier of the base [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate) to update.",
            "format": "uuid"
          },
          "ProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "PriceUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RatePriceUpdate"
            },
            "description": "Price updates."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RatePriceUpdateParameters"
      },
      "RatePricing": {
        "title": "RatePricing",
        "type": "object",
        "properties": {
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).",
            "nullable": true
          },
          "DatesUtc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "deprecated": true
          },
          "TimeUnitStartsUtc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.",
            "nullable": true
          },
          "BasePrices": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true,
            "deprecated": true
          },
          "BaseAmountPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amount"
            },
            "description": "Base prices of the rates for each time unit covered by the time interval.",
            "nullable": true
          },
          "CategoryPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryPricing"
            },
            "description": "Resource category prices.",
            "nullable": true
          },
          "CategoryAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryAdjustment"
            },
            "description": "Resource category adjustments.",
            "nullable": true
          },
          "AgeCategoryAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeCategoryAdjustment"
            },
            "nullable": true
          },
          "RelativeAdjustment": {
            "type": "number",
            "description": "Specific amount which shows the difference between this rate and the base rate.",
            "format": "double"
          },
          "AbsoluteAdjustment": {
            "type": "number",
            "description": "Relative amount which shows the difference between this rate and the base rate.",
            "format": "double"
          },
          "EmptyUnitAdjustment": {
            "type": "number",
            "description": "Price adjustment for when the resource booked with this rate is not full to capacity.",
            "format": "double"
          },
          "ExtraUnitAdjustment": {
            "type": "number",
            "description": "Price adjustment for when the resource booked with this rate exceeds capacity.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RatePricing"
      },
      "RatePricingDataParameters": {
        "title": "RatePricingDataParameters",
        "type": "object",
        "properties": {
          "BaseRatePricing": {
            "$ref": "#/components/schemas/BaseRatePricingParameters"
          },
          "DependentRatePricing": {
            "$ref": "#/components/schemas/DependentRatePricingParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RatePricingDataParameters"
      },
      "RatePricingDiscriminator": {
        "enum": [
          "BaseRatePricing",
          "DependentRatePricing"
        ],
        "type": "string"
      },
      "RatePricingParameters": {
        "title": "RatePricingParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "RateId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "description": "Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "description": "End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.",
            "format": "date-time",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "RateId": {
            "type": "string",
            "description": "Unique identifier of the [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate) whose prices should be returned.",
            "format": "uuid"
          },
          "ProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RatePricingParameters"
      },
      "RateRestrictionResult": {
        "title": "RateRestrictionResult",
        "type": "object",
        "properties": {
          "DateRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateRestriction"
            },
            "nullable": true
          },
          "EarlinessRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EarlinessRestriction"
            },
            "nullable": true
          },
          "LengthRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LengthRestriction"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateRestrictionResult"
      },
      "RateResult": {
        "title": "RateResult",
        "type": "object",
        "properties": {
          "Rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "description": "Rates of the default service.",
            "nullable": true
          },
          "RateGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateGroupOld"
            },
            "description": "Rate groups of the default service. **Deprecated!**",
            "nullable": true
          },
          "RateRestrictions": {
            "$ref": "#/components/schemas/RateRestrictionResult"
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RateResult"
      },
      "RateType": {
        "enum": [
          "Public",
          "Private",
          "AvailabilityBlock"
        ],
        "type": "string"
      },
      "RebateOrderItemData": {
        "title": "RebateOrderItemData",
        "type": "object",
        "properties": {
          "RebatedItemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RebateOrderItemData"
      },
      "RefundType": {
        "enum": [
          "CreditCardPayment",
          "AlternativePayment"
        ],
        "type": "string"
      },
      "RelativeProductPrice": {
        "title": "RelativeProductPrice",
        "type": "object",
        "properties": {
          "Multiplier": {
            "type": "number",
            "format": "double"
          },
          "Target": {
            "type": "string",
            "nullable": true
          },
          "TaxRateCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ProductIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RelativeProductPrice"
      },
      "RelativeTaxRateStrategy": {
        "title": "RelativeTaxRateStrategy",
        "type": "object",
        "properties": {
          "Value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RelativeTaxRateStrategy"
      },
      "Reservation": {
        "title": "Reservation (ver 2023-06-06)",
        "required": [
          "AccountId",
          "CreatedUtc",
          "CreatorProfileId",
          "Id",
          "Options",
          "Origin",
          "RateId",
          "ServiceId",
          "State",
          "UpdatedUtc",
          "UpdaterProfileId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the reservation.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the Service that reservation is made againts.",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "description": "Unique identifier of the Customer or a Company who owns the reservation.",
            "format": "uuid"
          },
          "AccountType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "description": "A discriminator specifying the type of account, e.g. customer or company.",
            "nullable": true
          },
          "CreatorProfileId": {
            "type": "string",
            "description": "Unique identifier of the user who created the order item.",
            "format": "uuid"
          },
          "UpdaterProfileId": {
            "type": "string",
            "description": "Unique identifier of the user who updated the order item.",
            "format": "uuid"
          },
          "BookerId": {
            "type": "string",
            "description": "Unique identifier of the Customer on whose behalf the reservation was made.",
            "format": "uuid",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "description": "Confirmation number of the reservation in Mews.",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/ServiceOrderState"
          },
          "Origin": {
            "$ref": "#/components/schemas/ServiceOrderOrigin"
          },
          "CommanderOrigin": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceOrderCommanderOrigin"
              }
            ],
            "description": "Further detail about origin in case of Origin `Commander`.",
            "nullable": true
          },
          "OriginDetails": {
            "type": "string",
            "description": "Details about the reservation `Origin`.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the reservation in UTC timezone.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the reservation in UTC timezone.",
            "format": "date-time"
          },
          "CancelledUtc": {
            "type": "string",
            "description": "Cancellation date and time in UTC timezone.",
            "format": "date-time",
            "nullable": true
          },
          "VoucherId": {
            "type": "string",
            "description": "Unique identifier of the `Voucher` that has been used to create reservation.",
            "format": "uuid",
            "nullable": true
          },
          "BusinessSegmentId": {
            "type": "string",
            "description": "Identifier of the reservation `Business segment`.",
            "format": "uuid",
            "nullable": true
          },
          "LinkedReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/ServiceOrderOptions"
          },
          "RateId": {
            "type": "string",
            "description": "Identifier of the reservation `Rate`.",
            "format": "uuid"
          },
          "CreditCardId": {
            "type": "string",
            "description": "Unique identifier of the Credit card.",
            "format": "uuid",
            "nullable": true
          },
          "GroupId": {
            "type": "string",
            "description": "Unique identifier of the Reservation group.",
            "format": "uuid",
            "nullable": true
          },
          "RequestedResourceCategoryId": {
            "type": "string",
            "description": "Unique identifier of the Resource category.",
            "format": "uuid",
            "nullable": true
          },
          "AssignedResourceId": {
            "type": "string",
            "description": "Identifier of the assigned Resource.",
            "format": "uuid",
            "nullable": true
          },
          "AvailabilityBlockId": {
            "type": "string",
            "description": "Unique identifier of the Availability block the reservation is assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "PartnerCompanyId": {
            "type": "string",
            "description": "Identifier of the Company that mediated the reservation.",
            "format": "uuid",
            "nullable": true
          },
          "TravelAgencyId": {
            "type": "string",
            "description": "Identifier of the Travel Agency that mediated the reservation.",
            "format": "uuid",
            "nullable": true
          },
          "AssignedResourceLocked": {
            "type": "boolean",
            "description": "Whether the reservation is locked to the assigned Resource and cannot be moved."
          },
          "ChannelNumber": {
            "type": "string",
            "description": "Number of the reservation within the Channel (i.e. OTA, GDS, CRS, etc) in case the reservation group originates there (e.g. Booking.com confirmation number).",
            "nullable": true
          },
          "ChannelManagerNumber": {
            "type": "string",
            "description": "Unique number of the reservation within the reservation group.",
            "nullable": true
          },
          "CancellationReason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceOrderCancellationReason"
              }
            ],
            "description": "Cancellation reason of the reservation.",
            "nullable": true
          },
          "ReleasedUtc": {
            "type": "string",
            "description": "Date when the optional reservation is released in UTC timezone.",
            "format": "date-time",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "description": "Reservation start or check-in time (if it's earlier than scheduled start) in UTC timezone.\r\n\r\n**Deprecated!** Use `ScheduledStartUtc` and `ActualStartUtc` instead.",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "description": "End of the reservation (departure) in UTC timezone.",
            "format": "date-time",
            "nullable": true
          },
          "ScheduledStartUtc": {
            "type": "string",
            "description": "Scheduled start time of reservation in UTC timezone.",
            "format": "date-time",
            "nullable": true
          },
          "ActualStartUtc": {
            "type": "string",
            "description": "Actual customer check-in time of reservation in UTC timezone.",
            "format": "date-time",
            "nullable": true
          },
          "Purpose": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReservationPurpose"
              }
            ],
            "description": "Purpose of the reservation.",
            "nullable": true
          },
          "QrCodeData": {
            "type": "string",
            "description": "QR code data of the reservation.",
            "nullable": true
          },
          "PersonCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationPersonCount"
            },
            "description": "Number of people per age category the reservation was booked for.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Reservation"
      },
      "ReservationAdditionParameters": {
        "title": "ReservationAdditionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Reservations",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to be reserved.",
            "format": "uuid"
          },
          "GroupId": {
            "type": "string",
            "description": "Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group) where the reservations are added. If not specified, a new group is created.",
            "format": "uuid",
            "nullable": true
          },
          "GroupName": {
            "type": "string",
            "description": "Name of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group) which the reservations are added to. If GroupId is specified, this field is ignored. If not specified, the group name is automatically created.",
            "nullable": true
          },
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationData"
            },
            "description": "Parameters of the new reservations."
          },
          "CheckRateApplicability": {
            "type": "boolean",
            "description": "Indicates whether the system will check and prevent a booking being made using a restricted rate, e.g. a private rate. The default is true, i.e. the system will normally check for this unless the property is set to false.",
            "nullable": true
          },
          "CheckOverbooking": {
            "type": "boolean",
            "description": "Indicates whether the system will check and prevent a booking being made in the case of an overbooking, i.e. where there is an insufficient number of resources available to meet the request<sup>\\*1</sup>. The default is true, i.e. the system will normally check for this unless the property is set to false.",
            "nullable": true
          },
          "SendConfirmationEmail": {
            "type": "boolean",
            "description": "Whether the confirmation email is sent. Default value is true.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationAdditionParameters"
      },
      "ReservationAdditionResult": {
        "title": "ReservationAdditionResult",
        "type": "object",
        "properties": {
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddedReservation"
            },
            "description": "The added reservations.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationAdditionResult"
      },
      "ReservationCancellationParameters": {
        "title": "ReservationCancellationParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the reservation to cancel."
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "PostCancellationFee": {
            "type": "boolean",
            "description": "Whether cancellation fees should be charged according to rate conditions."
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes describing the reason for the cancellation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationCancellationParameters"
      },
      "ReservationConfirmationNumberParameters": {
        "title": "ReservationConfirmationNumberParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ReservationExtent"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationConfirmationNumberParameters"
      },
      "ReservationCustomerParameters": {
        "title": "ReservationCustomerParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerId",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationCustomerParameters"
      },
      "ReservationData": {
        "title": "ReservationData",
        "required": [
          "CustomerId",
          "EndUtc",
          "PersonCounts",
          "RateId",
          "RequestedCategoryId",
          "StartUtc"
        ],
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "nullable": true
          },
          "ChannelNumber": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceOrderState"
              }
            ],
            "nullable": true
          },
          "StartUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "EndUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "ReleasedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AdultCount": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "ChildCount": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "PersonCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonCountParameters"
            }
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid"
          },
          "BookerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "RequestedCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "VoucherCode": {
            "type": "string",
            "nullable": true
          },
          "CreditCardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "TravelAgencyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "TimeUnitAmount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "TimeUnitPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerUnitPriceParameters"
            },
            "nullable": true
          },
          "ProductOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrderAdditionData"
            },
            "nullable": true
          },
          "ResourceAccessTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAccessTokenParameters"
            },
            "nullable": true
          },
          "AvailabilityBlockId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ReservationPurpose": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReservationPurpose"
              }
            ],
            "nullable": true
          },
          "TimeUnitCost": {
            "$ref": "#/components/schemas/CostParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationData"
      },
      "ReservationDataParameters": {
        "title": "ReservationDataParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Reservations",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to be priced.",
            "format": "uuid"
          },
          "GroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "GroupName": {
            "type": "string",
            "nullable": true
          },
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationData"
            },
            "description": "Parameters of the reservations to price. Note that CustomerId is not required when pricing reservations."
          },
          "CheckRateApplicability": {
            "type": "boolean",
            "nullable": true
          },
          "CheckOverbooking": {
            "type": "boolean",
            "nullable": true
          },
          "SendConfirmationEmail": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationDataParameters"
      },
      "ReservationExtent": {
        "title": "ReservationExtent",
        "type": "object",
        "properties": {
          "Reservations": {
            "type": "boolean"
          },
          "ReservationGroups": {
            "type": "boolean"
          },
          "Customers": {
            "type": "boolean"
          },
          "CustomerAdresses": {
            "type": "boolean",
            "nullable": true
          },
          "CustomerIdentityDocuments": {
            "type": "boolean",
            "nullable": true
          },
          "Services": {
            "type": "boolean"
          },
          "Products": {
            "type": "boolean"
          },
          "BusinessSegments": {
            "type": "boolean"
          },
          "Resources": {
            "type": "boolean"
          },
          "ResourceCategories": {
            "type": "boolean"
          },
          "ResourceCategoryAssignments": {
            "type": "boolean"
          },
          "Rates": {
            "type": "boolean"
          },
          "Items": {
            "type": "boolean"
          },
          "OrderItems": {
            "type": "boolean"
          },
          "Notes": {
            "type": "boolean"
          },
          "QrCodeData": {
            "type": "boolean"
          },
          "Companies": {
            "type": "boolean"
          },
          "AccountingStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned. E.g. it is possible to specify that together with the reservations, customers, groups and rates should be also returned.",
        "x-schema-id": "ReservationExtent"
      },
      "ReservationFilterParameters": {
        "title": "ReservationFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "EndUtc",
          "Extent",
          "ServiceIds",
          "StartUtc"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) from which the reservations are requested."
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "StartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Start of the interval in UTC timezone in ISO 8601 format. Required when used in conjunction with the TimeFilter or States search parameter.",
            "format": "date-time"
          },
          "EndUtc": {
            "minLength": 1,
            "type": "string",
            "description": "End of the interval in UTC timezone in ISO 8601 format. Required when used in conjunction with the TimeFilter or States search parameter.",
            "format": "date-time"
          },
          "GroupIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).",
            "nullable": true
          },
          "ReservationIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2017-04-12).",
            "nullable": true
          },
          "CustomerIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) which own the reservations.",
            "nullable": true
          },
          "AssignedResourceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource) assigned to the reservations.",
            "nullable": true
          },
          "RateIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate) assigned to the reservations.",
            "nullable": true
          },
          "BusinessSegmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Business segments](https://mews-systems.gitbook.io/connector-api/operations/businesssegments/#business-segment) assigned to the reservations.",
            "nullable": true
          },
          "ChannelNumbers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of numbers or references used by the Channel (i.e. OTA, GDS, CRS, etc.) in case the reservation group originates there, e.g. Booking.com confirmation numbers.",
            "nullable": true
          },
          "Numbers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Confirmation numbers of [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2017-04-12).",
            "nullable": true
          },
          "TimeFilter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReservationTimeFilter"
              }
            ],
            "description": "Time filter of the interval. If not specified, reservations Colliding with the interval are returned.",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "currency",
            "nullable": true
          },
          "States": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "States the reservations should be in. If not specified, reservations in Confirmed, Started or Processed states or reservations specified by ReservationIds regardless of state are returned.",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ReservationExtent"
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationFilterParameters"
      },
      "ReservationGroup": {
        "title": "Reservation Group",
        "required": [
          "EnterpriseId",
          "Id",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the reservation group.",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the reservation group, might be empty or same for multiple groups."
          },
          "ChannelManager": {
            "type": "string",
            "description": "Name of the corresponding channel manager.",
            "nullable": true
          },
          "ChannelManagerGroupNumber": {
            "type": "string",
            "description": "Identifier of the channel manager.",
            "nullable": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise) the reservation group belongs to.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationGroup"
      },
      "ReservationGroupFilterParameters": {
        "title": "ReservationGroupFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ReservationGroupIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Reservation Group](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group). Required if no other filter is provided.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationGroupFilterParameters"
      },
      "ReservationGroupOld": {
        "title": "ReservationGroupOld",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationGroupOld"
      },
      "ReservationGroupResult": {
        "title": "ReservationGroupResult",
        "required": [
          "ReservationGroups"
        ],
        "type": "object",
        "properties": {
          "ReservationGroups": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationGroup"
            },
            "description": "The filtered reservation groups."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest reservation group returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older reservation groups.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationGroupResult"
      },
      "ReservationItemParameters": {
        "title": "ReservationItemParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReservationIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the reservation."
          },
          "Currency": {
            "type": "string",
            "description": "ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.",
            "format": "currency",
            "nullable": true
          },
          "AccountingStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "States the items should be in. If not specified, items in Open or Closed states are returned.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationItemParameters"
      },
      "ReservationItemResult": {
        "title": "ReservationItemResult",
        "type": "object",
        "properties": {
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationItems"
            },
            "description": "The reservations with their items.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationItemResult"
      },
      "ReservationItems": {
        "title": "Reservation items",
        "type": "object",
        "properties": {
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation.",
            "format": "uuid"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItem"
            },
            "nullable": true
          },
          "OrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemOld"
            },
            "description": "The items associated with the reservation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationItems"
      },
      "ReservationMultipleCustomerParameters": {
        "title": "ReservationMultipleCustomerParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomerIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ReservationExtent"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationMultipleCustomerParameters"
      },
      "ReservationOld": {
        "title": "ReservationOld",
        "required": [
          "Options"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "GroupId": {
            "type": "string",
            "format": "uuid"
          },
          "Number": {
            "type": "string",
            "nullable": true
          },
          "ChannelNumber": {
            "type": "string",
            "nullable": true
          },
          "ChannelManagerNumber": {
            "type": "string",
            "nullable": true
          },
          "ChannelManagerGroupNumber": {
            "type": "string",
            "nullable": true
          },
          "ChannelManager": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Origin": {
            "type": "string",
            "nullable": true
          },
          "OriginDetails": {
            "type": "string",
            "nullable": true
          },
          "Purpose": {
            "type": "string",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "nullable": true
          },
          "CancelledUtc": {
            "type": "string",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          },
          "ReleasedUtc": {
            "type": "string",
            "nullable": true
          },
          "RequestedCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "AssignedSpaceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "AssignedResourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AssignedSpaceLocked": {
            "type": "boolean",
            "deprecated": true
          },
          "AssignedResourceLocked": {
            "type": "boolean"
          },
          "BusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "TravelAgencyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AvailabilityBlockId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "RateId": {
            "type": "string",
            "format": "uuid"
          },
          "VoucherId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CreditCardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CancellationReason": {
            "type": "string",
            "nullable": true
          },
          "AdultCount": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "ChildCount": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "PersonCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonCount"
            },
            "nullable": true
          },
          "OwnerId": {
            "type": "string",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "deprecated": true
          },
          "BookerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CompanionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true,
            "deprecated": true
          },
          "ChannelManagerId": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Options": {
            "$ref": "#/components/schemas/ReservationOptions"
          }
        },
        "additionalProperties": false,
        "description": "The added reservation.",
        "x-schema-id": "ReservationOld"
      },
      "ReservationOptions": {
        "title": "ReservationOptions",
        "required": [
          "AllCompanionsCheckedIn",
          "AnyCompanionCheckedIn",
          "OwnerCheckedIn"
        ],
        "type": "object",
        "properties": {
          "OwnerCheckedIn": {
            "type": "boolean"
          },
          "AllCompanionsCheckedIn": {
            "type": "boolean"
          },
          "AnyCompanionCheckedIn": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationOptions"
      },
      "ReservationPersonCount": {
        "title": "ReservationPersonCount",
        "type": "object",
        "properties": {
          "AgeCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationPersonCount"
      },
      "ReservationPrice": {
        "title": "Reservation price",
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "description": "Identifier of the reservation within the transaction.",
            "nullable": true
          },
          "TotalAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "Total": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationPrice"
      },
      "ReservationPricingResult": {
        "title": "ReservationPricingResult",
        "type": "object",
        "properties": {
          "ReservationPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationPrice"
            },
            "description": "The reservation prices.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationPricingResult"
      },
      "ReservationProcessingParameters": {
        "title": "ReservationProcessingParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation to process.",
            "format": "uuid"
          },
          "CloseBills": {
            "type": "boolean",
            "description": "Whether closable bills of the reservation members should be automatically closed."
          },
          "AllowOpenBalance": {
            "type": "boolean",
            "description": "Whether non-zero consumed balance of all reservation members is allowed."
          },
          "Notes": {
            "type": "string",
            "description": "Required if AllowOpenBalance set to true. Used to provide reason for closing with unbalanced bill.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationProcessingParameters"
      },
      "ReservationProductParameters": {
        "title": "ReservationProductParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Count",
          "ProductId",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation.",
            "format": "uuid"
          },
          "ProductId": {
            "type": "string",
            "description": "Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product).",
            "format": "uuid"
          },
          "Count": {
            "type": "integer",
            "description": "The amount of the products to be added. Note that if the product is charged e.g. per night, count 1 means a single product every night. Count 2 means two products every night.",
            "format": "int32"
          },
          "UnitAmount": {
            "$ref": "#/components/schemas/AmountParameters"
          },
          "StartUtc": {
            "type": "string",
            "description": "Product start in UTC timezone in ISO 8601 format. For products with charging Once and PerPerson must be set to same value as EndUtc.",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "description": "Product end in UTC timezone in ISO 8601 format. For products with charging Once and PerPerson must be set to same value as StartUtc.",
            "format": "date-time",
            "nullable": true
          },
          "UnitCost": {
            "$ref": "#/components/schemas/CostParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationProductParameters"
      },
      "ReservationPurpose": {
        "enum": [
          "Leisure",
          "Business",
          "Student"
        ],
        "type": "string"
      },
      "ReservationQrCodeData": {
        "title": "ReservationQrCodeData",
        "type": "object",
        "properties": {
          "ReservationId": {
            "type": "string",
            "format": "uuid"
          },
          "Data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationQrCodeData"
      },
      "ReservationResult": {
        "title": "ReservationResult",
        "type": "object",
        "properties": {
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationOld"
            },
            "description": "The reservations that collide with the specified interval.",
            "nullable": true
          },
          "ReservationGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationGroupOld"
            },
            "description": "Reservation groups that the reservations are members of.",
            "nullable": true
          },
          "Customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "description": "Customers that are members of the reservations.",
            "nullable": true
          },
          "Services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            },
            "description": "Services that have been reserved.",
            "nullable": true
          },
          "Products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "Products orderable with reservations.",
            "nullable": true
          },
          "Resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "Assigned resources of the reservations.",
            "nullable": true
          },
          "ResourceCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategory"
            },
            "description": "Resource categories of the resources.",
            "nullable": true
          },
          "ResourceCategoryAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryAssignment"
            },
            "description": "Assignments of the resources to categories.",
            "nullable": true
          },
          "BusinessSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessSegment"
            },
            "description": "Business segments of the reservations.",
            "nullable": true
          },
          "Rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "description": "Rates of the reservations.",
            "nullable": true
          },
          "RateGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateGroupOld"
            },
            "description": "Rate groups of the reservation rates.",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingItem"
            },
            "nullable": true
          },
          "OrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemOld"
            },
            "description": "Revenue items of the reservations.",
            "nullable": true
          },
          "Notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderNote"
            },
            "description": "Notes of the reservations.",
            "nullable": true
          },
          "QrCodeData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationQrCodeData"
            },
            "description": "QR code data of the reservations.",
            "nullable": true
          },
          "Companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "nullable": true
          },
          "ResourceAccessTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAccessToken"
            },
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest reservation returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older reservations.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationResult"
      },
      "ReservationServiceOrderFilterParameters": {
        "title": "ReservationServiceOrderFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "nullable": true
          },
          "ReservationIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2023-06-06).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). If not provided, all bookable services are used."
          },
          "ReservationGroupIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).",
            "nullable": true
          },
          "AccountIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of accounts (currently only [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer), in the future also [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)) the reservation is associated with.",
            "nullable": true
          },
          "AssignedResourceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "CollidingUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ScheduledStartUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "States": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceOrderState"
            },
            "description": "A list of service order states to filter by.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationServiceOrderFilterParameters"
      },
      "ReservationServiceOrderResult": {
        "title": "ReservationServiceOrderResult",
        "required": [
          "Reservations"
        ],
        "type": "object",
        "properties": {
          "Reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservation"
            },
            "description": "The reservations of the enterprise."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationServiceOrderResult"
      },
      "ReservationStartParameters": {
        "title": "ReservationStartParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation to start.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationStartParameters"
      },
      "ReservationTimeFilter": {
        "enum": [
          "Colliding",
          "Created",
          "Updated",
          "Start",
          "End",
          "Overlapping",
          "Canceled",
          "Cancelled"
        ],
        "type": "string"
      },
      "ReservationUpdateIntervalParameters": {
        "title": "ReservationUpdateIntervalParameters",
        "required": [
          "AccessToken",
          "ChargeCancellationFee",
          "Client",
          "ClientToken",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation to be updated.",
            "format": "uuid"
          },
          "StartUtc": {
            "type": "string",
            "description": "New reservation start in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "description": "New reservation end in UTC timezone in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "ChargeCancellationFee": {
            "type": "boolean",
            "description": "Whether cancellation fee should be charged for potentially canceled nights."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationUpdateIntervalParameters"
      },
      "ReservationUpdateOptionsParameters": {
        "title": "ReservationUpdateOptionsParameters",
        "type": "object",
        "properties": {
          "OwnerCheckedIn": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationUpdateOptionsParameters"
      },
      "ReservationUpdateParameters": {
        "title": "ReservationUpdateParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string"
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string"
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "format": "uuid"
          },
          "ChannelNumber": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "StartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "EndUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ReleasedUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AdultCount": {
            "$ref": "#/components/schemas/Int32UpdateValue"
          },
          "ChildCount": {
            "$ref": "#/components/schemas/Int32UpdateValue"
          },
          "PersonCounts": {
            "$ref": "#/components/schemas/PersonCountParametersIEnumerableUpdateValue"
          },
          "AssignedResourceId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "RequestedCategoryId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "TraveAgencyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "TravelAgencyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "BusinessSegmentId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "Purpose": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "RateId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "CreditCardId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "TimeUnitPrices": {
            "$ref": "#/components/schemas/PerUnitPriceParametersIEnumerableUpdateValue"
          },
          "BookerId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "AssignedResourceLocked": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "AvailabilityBlockId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "Options": {
            "$ref": "#/components/schemas/ReservationUpdateOptionsParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationUpdateParameters"
      },
      "ReservationsUpdateCustomerParameters": {
        "title": "ReservationsUpdateCustomerParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CustomerId",
          "ReservationId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), ignored otherwise.",
            "format": "uuid",
            "nullable": true
          },
          "ReservationId": {
            "type": "string",
            "description": "Unique identifier of the reservation to be updated.",
            "format": "uuid"
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ReservationsUpdateCustomerParameters"
      },
      "Resource": {
        "title": "Resource",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the resource.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the resource is still active."
          },
          "ParentResourceId": {
            "type": "string",
            "description": "Identifier of the parent [Resource](https://mews-systems.gitbook.io/connector-api/operations/#resource) (e.g. room of a bed).",
            "format": "uuid",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name of the resource (e.g. room number).",
            "nullable": true
          },
          "State": {
            "type": "string",
            "description": "State of the resource.",
            "nullable": true
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Creation date and time of the resource in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Last update date and time of the resource in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "Data": {
            "title": "Data",
            "properties": {
              "discriminator": {
                "type": "string"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SpaceData"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              }
            },
            "description": "Additional data of the resource."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Resource"
      },
      "ResourceAccessToken": {
        "title": "Resource access token",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "IsActive",
          "ServiceOrderId",
          "Type",
          "UpdatedUtc",
          "ValidityEndUtc",
          "ValidityStartUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "ServiceOrderId": {
            "type": "string",
            "description": "Unique identifier of a reservation.",
            "format": "uuid"
          },
          "CompanionshipId": {
            "type": "string",
            "description": "Unique identifier of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/companionships/#companionship).",
            "format": "uuid",
            "nullable": true
          },
          "ResourceId": {
            "type": "string",
            "description": "Unique identifier of [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).",
            "format": "uuid",
            "nullable": true
          },
          "Type": {
            "$ref": "#/components/schemas/ResourceAccessTokenType"
          },
          "Value": {
            "type": "string",
            "description": "Value of resource access token",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "Serial number of [Resource access token type](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-type).",
            "nullable": true
          },
          "ValidityStartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Marks the start of interval in which the resource access token can be used.",
            "format": "date-time"
          },
          "ValidityEndUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Marks the end of interval in which the resource access token can be used.",
            "format": "date-time"
          },
          "Permissions": {
            "$ref": "#/components/schemas/ResourceAccessTokenPermissions"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the resource access token in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the resource access token in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the resource access token is still active."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessToken"
      },
      "ResourceAccessTokenDeleteParameters": {
        "title": "ResourceAccessTokenDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessTokenDeleteParameters"
      },
      "ResourceAccessTokenFilterParameters": {
        "title": "ResourceAccessTokenFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceAccessTokenIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource access tokens](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token). Required if no other filter is provided.",
            "nullable": true
          },
          "ServiceOrderIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of reservations. Required if no other filter is provided.",
            "nullable": true
          },
          "CollidingUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessTokenFilterParameters"
      },
      "ResourceAccessTokenParameters": {
        "title": "ResourceAccessTokenParameters",
        "type": "object",
        "properties": {
          "ServiceOrderId": {
            "type": "string",
            "format": "uuid"
          },
          "CompanionshipId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "nullable": true
          },
          "ValidityStartUtc": {
            "type": "string",
            "nullable": true
          },
          "ValidityEndUtc": {
            "type": "string",
            "nullable": true
          },
          "Permissions": {
            "$ref": "#/components/schemas/ResourceAccessTokenPermissionsParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessTokenParameters"
      },
      "ResourceAccessTokenPermissions": {
        "title": "ResourceAccessTokenPermissions",
        "type": "object",
        "properties": {
          "Bed": {
            "type": "boolean"
          },
          "Room": {
            "type": "boolean"
          },
          "Floor": {
            "type": "boolean"
          },
          "Building": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Specify permissions of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).",
        "x-schema-id": "ResourceAccessTokenPermissions"
      },
      "ResourceAccessTokenPermissionsParameters": {
        "title": "ResourceAccessTokenPermissionsParameters",
        "type": "object",
        "properties": {
          "Bed": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Room": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Floor": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "Building": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessTokenPermissionsParameters"
      },
      "ResourceAccessTokenResult": {
        "title": "ResourceAccessTokenResult",
        "type": "object",
        "properties": {
          "ResourceAccessTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAccessToken"
            },
            "description": "Resource access tokens.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older tokens. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) is specified in the request message, then Cursor will always be included in the response message.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessTokenResult"
      },
      "ResourceAccessTokenType": {
        "enum": [
          "PinCode",
          "RfidTag"
        ],
        "type": "string"
      },
      "ResourceAccessTokenUpdateParameters": {
        "title": "ResourceAccessTokenUpdateParameters",
        "type": "object",
        "properties": {
          "ResourceAccessTokenId": {
            "type": "string",
            "format": "uuid"
          },
          "ValidityStartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ValidityEndUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Permissions": {
            "$ref": "#/components/schemas/ResourceAccessTokenPermissionsParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceAccessTokenUpdateParameters"
      },
      "ResourceAvailabilityMetricTypeEnum": {
        "enum": [
          "OutOfOrderBlocks",
          "PublicAvailabilityAdjustment",
          "OtherServiceReservationCount",
          "Occupied",
          "ConfirmedReservations",
          "OptionalReservations",
          "BlockAvailability",
          "AllocatedBlockAvailability",
          "UsableResources",
          "ActiveResources"
        ],
        "type": "string",
        "description": "\n\nOutOfOrderBlocks\n\nPublicAvailabilityAdjustment\n\nOtherServiceReservationCount\n\nOccupied\n\nConfirmedReservations\n\nOptionalReservations\n\nBlockAvailability\n\nAllocatedBlockAvailability\n\nUsableResources\n\nActiveResources",
        "x-enumNames": [
          "OutOfOrderBlocks",
          "PublicAvailabilityAdjustment",
          "OtherServiceReservationCount",
          "Occupied",
          "ConfirmedReservations",
          "OptionalReservations",
          "BlockAvailability",
          "AllocatedBlockAvailability",
          "UsableResources",
          "ActiveResources"
        ]
      },
      "ResourceBlock": {
        "title": "Resource block",
        "required": [
          "AssignedResourceId",
          "CreatedUtc",
          "EndUtc",
          "EnterpriseId",
          "Id",
          "IsActive",
          "Name",
          "StartUtc",
          "Type",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the block.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "AssignedResourceId": {
            "type": "string",
            "description": "Unique identifier of the assigned [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the block is still active."
          },
          "Type": {
            "$ref": "#/components/schemas/ResourceBlockType"
          },
          "StartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Start of the block in UTC timezone in ISO 8601 format."
          },
          "EndUtc": {
            "minLength": 1,
            "type": "string",
            "description": "End of the block in UTC timezone in ISO 8601 format."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the block in UTC timezone in ISO 8601 format."
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the block in UTC timezone in ISO 8601 format."
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the resource block."
          },
          "Notes": {
            "type": "string",
            "description": "Note describing the resource block.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceBlock"
      },
      "ResourceBlockAddParameters": {
        "title": "ResourceBlockAddParameters",
        "required": [
          "EndUtc",
          "Name",
          "ResourceId",
          "StartUtc",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ResourceId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string"
          },
          "Type": {
            "$ref": "#/components/schemas/ResourceBlockType"
          },
          "StartUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "EndUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceBlockAddParameters"
      },
      "ResourceBlockDeleteParameters": {
        "title": "ResourceBlockDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ResourceBlockIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ResourceBlockIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of [Resource blocks](https://mews-systems.gitbook.io/connector-api/operations/#resource-block) to be removed."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceBlockDeleteParameters"
      },
      "ResourceBlockExtent": {
        "title": "ResourceBlockExtent",
        "type": "object",
        "properties": {
          "Inactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned.",
        "x-schema-id": "ResourceBlockExtent"
      },
      "ResourceBlockParameters": {
        "title": "ResourceBlockParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ResourceBlockExtent"
          },
          "ResourceBlockIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Resource blocks](https://mews-systems.gitbook.io/connector-api/operations/#resource-block).",
            "nullable": true
          },
          "AssignedResourceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested Assigned [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).",
            "nullable": true
          },
          "CollidingUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceBlockParameters"
      },
      "ResourceBlockResult": {
        "title": "ResourceBlockResult",
        "required": [
          "ResourceBlocks"
        ],
        "type": "object",
        "properties": {
          "ResourceBlocks": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceBlock"
            },
            "description": "Resource blocks added."
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceBlockResult"
      },
      "ResourceBlockType": {
        "enum": [
          "OutOfOrder",
          "InternalUse"
        ],
        "type": "string"
      },
      "ResourceCategory": {
        "title": "Resource category",
        "required": [
          "Capacity",
          "Classification",
          "Descriptions",
          "EnterpriseId",
          "ExtraCapacity",
          "Id",
          "IsActive",
          "Names",
          "Ordering",
          "ServiceId",
          "ShortNames",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the category.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) of the resource category.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the category is still active."
          },
          "Type": {
            "$ref": "#/components/schemas/ResourceCategoryType"
          },
          "Classification": {
            "$ref": "#/components/schemas/ResourceClassification"
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the name."
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the short name."
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the description."
          },
          "Ordering": {
            "type": "integer",
            "format": "int32"
          },
          "Capacity": {
            "type": "integer",
            "format": "int32"
          },
          "ExtraCapacity": {
            "type": "integer",
            "description": "Extra capacity that can be served (e.g. extra bed count).",
            "format": "int32"
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of the resource category from external system.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategory"
      },
      "ResourceCategoryAssignment": {
        "title": "Resource category assignment",
        "required": [
          "CategoryId",
          "CreatedUtc",
          "Id",
          "IsActive",
          "ResourceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the assignment.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the assignment is still active."
          },
          "ResourceId": {
            "type": "string",
            "description": "Unique identifier of the [Resource](https://mews-systems.gitbook.io/connector-api/operations/#resource) assigned to the Resource category.",
            "format": "uuid"
          },
          "CategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the assignment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the assignment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryAssignment"
      },
      "ResourceCategoryAssignmentFilterParameters": {
        "title": "ResourceCategoryAssignmentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ResourceCategoryIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource category assignments for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceCategoryAssignmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource category assignment](https://mews-systems.gitbook.io/connector-api/operations/resourcecategories/#resource-category-assignment).",
            "nullable": true
          },
          "ResourceCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/#resource-category) to which the resource category assignment belong."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryAssignmentFilterParameters"
      },
      "ResourceCategoryAssignmentResult": {
        "title": "ResourceCategoryAssignmentResult",
        "required": [
          "ResourceCategoryAssignments"
        ],
        "type": "object",
        "properties": {
          "ResourceCategoryAssignments": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryAssignment"
            },
            "description": "Resource category assignments."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest resource category assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource category assignments.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryAssignmentResult"
      },
      "ResourceCategoryAvailabilityV20240122": {
        "title": "Resource category availability (ver 2024-01-22)",
        "required": [
          "Metrics",
          "ResourceCategoryId"
        ],
        "type": "object",
        "properties": {
          "ResourceCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "Metrics": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "description": "Dictionary keys are names of [Service availability metrics](https://mews-systems.gitbook.io/connector-api/operations/#service-availability-metrics), values are arrays of integers with metric values for corresponding time unit in TimeUnitStartsUtc."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryAvailabilityV20240122"
      },
      "ResourceCategoryFilterParameters": {
        "title": "ResourceCategoryFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource categories for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which the resource categories belong."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryFilterParameters"
      },
      "ResourceCategoryImageAssignment": {
        "title": "Resource category image assignment",
        "required": [
          "CategoryId",
          "CreatedUtc",
          "Id",
          "ImageId",
          "IsActive",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the assignment.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the assignment is still active."
          },
          "CategoryId": {
            "type": "string",
            "description": "Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).",
            "format": "uuid"
          },
          "ImageId": {
            "type": "string",
            "description": "Unique identifier of the image assigned to the Resource category.",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the assignment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the assignment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryImageAssignment"
      },
      "ResourceCategoryImageAssignmentFilterParameters": {
        "title": "ResourceCategoryImageAssignmentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ResourceCategoryIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource category image assignments for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceCategoryImageAssignmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource category image assignments](https://mews-systems.gitbook.io/connector-api/operations/resourcecategories/#resource-category-image-assignment).",
            "nullable": true
          },
          "ResourceCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) to which the resource category image assignments belong."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryImageAssignmentFilterParameters"
      },
      "ResourceCategoryImageAssignmentResult": {
        "title": "ResourceCategoryImageAssignmentResult",
        "required": [
          "ResourceCategoryImageAssignments"
        ],
        "type": "object",
        "properties": {
          "ResourceCategoryImageAssignments": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryImageAssignment"
            },
            "description": "Resource category image assignments."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest resource category image assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource category image assignments.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryImageAssignmentResult"
      },
      "ResourceCategoryResult": {
        "title": "ResourceCategoryResult",
        "required": [
          "ResourceCategories"
        ],
        "type": "object",
        "properties": {
          "ResourceCategories": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategory"
            },
            "description": "Resource categories of the resources."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest resource category returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource categories.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceCategoryResult"
      },
      "ResourceCategoryType": {
        "enum": [
          "Room",
          "Bed",
          "Dorm",
          "Apartment",
          "Suite",
          "Villa",
          "Site",
          "Office",
          "MeetingRoom",
          "ParkingSpot",
          "Desk",
          "TeamArea",
          "Membership",
          "Tent",
          "CaravanOrRV",
          "UnequippedCampsite",
          "Bike"
        ],
        "type": "string"
      },
      "ResourceClassification": {
        "enum": [
          "StandardSingle",
          "StandardDouble",
          "SuperiorTwin",
          "SuperiorDouble",
          "JuniorSuite",
          "SharedOrDorm",
          "Other",
          "SuperiorSingle",
          "Triple",
          "Family",
          "StandardTwin",
          "Studio",
          "SuperiorTripleRoom",
          "OneBedroomApartment",
          "ThreeBedroomsApartment",
          "TwoBedroomsApartment"
        ],
        "type": "string"
      },
      "ResourceDataDiscriminator": {
        "enum": [
          "Space",
          "Object",
          "Person"
        ],
        "type": "string"
      },
      "ResourceExtent": {
        "title": "ResourceExtent",
        "type": "object",
        "properties": {
          "Resources": {
            "type": "boolean"
          },
          "ResourceCategories": {
            "type": "boolean",
            "deprecated": true
          },
          "ResourceCategoryAssignments": {
            "type": "boolean",
            "deprecated": true
          },
          "ResourceCategoryImageAssignments": {
            "type": "boolean",
            "deprecated": true
          },
          "ResourceFeatures": {
            "type": "boolean",
            "deprecated": true
          },
          "ResourceFeatureAssignments": {
            "type": "boolean",
            "deprecated": true
          },
          "Inactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned.",
        "x-schema-id": "ResourceExtent"
      },
      "ResourceFeature": {
        "title": "Resource feature",
        "required": [
          "Classification",
          "CreatedUtc",
          "Descriptions",
          "Id",
          "IsActive",
          "Names",
          "ServiceId",
          "ShortNames",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the feature.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the resource feature is still active."
          },
          "Classification": {
            "$ref": "#/components/schemas/ResourceFeatureClassification"
          },
          "Names": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the name."
          },
          "ShortNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the short name."
          },
          "Descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "All translations of the description."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFeature"
      },
      "ResourceFeatureAssignment": {
        "title": "Resource feature assignment",
        "required": [
          "CreatedUtc",
          "FeatureId",
          "Id",
          "IsActive",
          "ResourceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the assignment.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the assignment is still active."
          },
          "ResourceId": {
            "type": "string",
            "description": "Unique identifier of the [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).",
            "format": "uuid"
          },
          "FeatureId": {
            "type": "string",
            "description": "Unique identifier of the [Resource feature](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature) assigned to the Resource.",
            "format": "uuid"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the assignment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the assignment in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFeatureAssignment"
      },
      "ResourceFeatureAssignmentFilterParameters": {
        "title": "ResourceFeatureAssignmentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ResourceFeatureIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource feature assignments for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceFeatureAssignmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ResourceFeatureIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource features](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature) to which the resource feature assignments belong."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFeatureAssignmentFilterParameters"
      },
      "ResourceFeatureAssignmentResult": {
        "title": "ResourceFeatureAssignmentResult",
        "required": [
          "ResourceFeatureAssignments"
        ],
        "type": "object",
        "properties": {
          "ResourceFeatureAssignments": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceFeatureAssignment"
            },
            "description": "Resource feature assignments."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest resource feature assignments returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource feature assignments.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFeatureAssignmentResult"
      },
      "ResourceFeatureClassification": {
        "enum": [
          "SeaView",
          "RiverView",
          "OceanView",
          "TwinBeds",
          "DoubleBed",
          "RollawayBed",
          "UpperBed",
          "LowerBed",
          "Balcony",
          "AccessibleBathroom",
          "AccessibleRoom",
          "ElevatorAccess",
          "HighFloor",
          "Kitchenette",
          "AirConditioning",
          "PrivateJacuzzi",
          "PrivateSauna",
          "EnsuiteRoom",
          "PrivateBathroom",
          "SharedBathroom"
        ],
        "type": "string"
      },
      "ResourceFeatureFilterParameters": {
        "title": "ResourceFeatureFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource features for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceFeatureIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource features](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature).",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which the resource features belong."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ActivityStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStates"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFeatureFilterParameters"
      },
      "ResourceFeatureResult": {
        "title": "ResourceFeatureResult",
        "required": [
          "ResourceFeatures"
        ],
        "type": "object",
        "properties": {
          "ResourceFeatures": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceFeature"
            },
            "description": "Resource features."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest resource features returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource feature.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFeatureResult"
      },
      "ResourceFilterParameters": {
        "title": "ResourceFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ResourceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the requested [Resources](https://mews-systems.gitbook.io/connector-api/operations/#resource).",
            "nullable": true
          },
          "Names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/ResourceExtent"
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceFilterParameters"
      },
      "ResourceResult": {
        "title": "ResourceResult",
        "type": "object",
        "properties": {
          "Resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "The resources of the enterprise.",
            "nullable": true
          },
          "ResourceCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategory"
            },
            "description": "Categories of resources in the enterprise. **Deprecated!**",
            "nullable": true,
            "deprecated": true
          },
          "ResourceCategoryAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryAssignment"
            },
            "description": "Assignments of resources to categories. **Deprecated!**",
            "nullable": true,
            "deprecated": true
          },
          "ResourceCategoryImageAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryImageAssignment"
            },
            "description": "Assignments of images to categories. **Deprecated!**",
            "nullable": true,
            "deprecated": true
          },
          "ResourceFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceFeature"
            },
            "description": "Features of resources in the enterprise. **Deprecated!**",
            "nullable": true,
            "deprecated": true
          },
          "ResourceFeatureAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceFeatureAssignment"
            },
            "description": "Assignments of resource features to resources. **Deprecated!**",
            "nullable": true,
            "deprecated": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceResult"
      },
      "ResourceUpdateParameters": {
        "title": "ResourceUpdateParameters",
        "required": [
          "ResourceId"
        ],
        "type": "object",
        "properties": {
          "ResourceId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ParentResourceId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "Data": {
            "title": "Data",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/ResourceDataDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SpaceData"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "State": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "StateReason": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ResourceUpdateParameters"
      },
      "Restriction": {
        "title": "Restriction",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the restriction.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).",
            "format": "uuid"
          },
          "ExternalIdentifier": {
            "type": "string",
            "description": "External identifier of the restriction.",
            "nullable": true
          },
          "Origin": {
            "type": "string",
            "description": "[Restriction origin](https://mews-systems.gitbook.io/connector-api/operations/#restriction-origin)",
            "nullable": true
          },
          "Conditions": {
            "$ref": "#/components/schemas/RestrictionConditions"
          },
          "Exceptions": {
            "$ref": "#/components/schemas/RestrictionExceptions"
          }
        },
        "additionalProperties": false,
        "description": "The added restriction.",
        "x-schema-id": "Restriction"
      },
      "RestrictionAdditionResult": {
        "title": "RestrictionAdditionResult",
        "type": "object",
        "properties": {
          "Restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddedRestriction"
            },
            "description": "The added restrictions.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionAdditionResult"
      },
      "RestrictionClearData": {
        "title": "RestrictionClearData",
        "required": [
          "Days",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/RestrictionType"
          },
          "ExactRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BaseRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "RateGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceCategoryType"
              }
            ],
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Days": {
            "$ref": "#/components/schemas/DaysParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionClearData"
      },
      "RestrictionConditions": {
        "title": "RestrictionConditions",
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "ExactRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BaseRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "RateGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryType": {
            "type": "string",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true
          },
          "Days": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Hours": {
            "$ref": "#/components/schemas/Hours"
          }
        },
        "additionalProperties": false,
        "description": "The conditions or rules that must be met by a reservation for the restriction to apply.",
        "x-schema-id": "RestrictionConditions"
      },
      "RestrictionConditionsData": {
        "title": "RestrictionConditionsData",
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "minLength": 1,
            "type": "string"
          },
          "ExactRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BaseRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "RateGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceCategoryType"
              }
            ],
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Days": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Hours": {
            "$ref": "#/components/schemas/HoursParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionConditionsData"
      },
      "RestrictionData": {
        "title": "RestrictionData",
        "required": [
          "Conditions"
        ],
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "nullable": true
          },
          "ExternalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "Conditions": {
            "$ref": "#/components/schemas/RestrictionConditionsData"
          },
          "Exceptions": {
            "$ref": "#/components/schemas/RestrictionExceptionsData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionData"
      },
      "RestrictionExceptions": {
        "title": "RestrictionExceptions",
        "type": "object",
        "properties": {
          "MinAdvance": {
            "type": "string",
            "nullable": true
          },
          "MaxAdvance": {
            "type": "string",
            "nullable": true
          },
          "MinLength": {
            "type": "string",
            "nullable": true
          },
          "MaxLength": {
            "type": "string",
            "nullable": true
          },
          "MinPrice": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "MaxPrice": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "MinReservationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaxReservationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The rules that prevent the restriction from applying to a reservation, even when all conditions have been met.",
        "x-schema-id": "RestrictionExceptions"
      },
      "RestrictionExceptionsData": {
        "title": "RestrictionExceptionsData",
        "type": "object",
        "properties": {
          "MinAdvance": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaxAdvance": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MinLength": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaxLength": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MinPrice": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "MaxPrice": {
            "$ref": "#/components/schemas/CurrencyValueOld"
          },
          "MaxReservationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionExceptionsData"
      },
      "RestrictionFilterParameters": {
        "title": "RestrictionFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "TimeFilter": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "StartUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "CollidingUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "RestrictionIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ResourceCategoryIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category).",
            "nullable": true
          },
          "RateIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate). Returns all restrictions that affect the given rates, i.e. ones without any [Restriction Conditions](https://mews-systems.gitbook.io/connector-api/operations/#restriction-conditions), ones assigned directly to specified rates, ones assigned to [Rate groups](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate-group) of specified rates, or ones inherited from base rates.",
            "nullable": true
          },
          "ExactRateIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate). Returns only those restrictions which have matching ExactRateId set in [Restriction Conditions](https://mews-systems.gitbook.io/connector-api/operations/#restriction-conditions).",
            "nullable": true
          },
          "BaseRateIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate). Returns only those restrictions which have matching BaseRateId set in [Restriction Conditions](https://mews-systems.gitbook.io/connector-api/operations/#restriction-conditions).",
            "nullable": true
          },
          "Origin": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RestrictionOrigin"
              }
            ],
            "description": "[Restriction origin](https://mews-systems.gitbook.io/connector-api/operations/#restriction-origin). Returns only those restrictions which have matching Origin or all if not specified.",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) from which the restrictions are requested."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionFilterParameters"
      },
      "RestrictionOrigin": {
        "enum": [
          "User",
          "Integration"
        ],
        "type": "string"
      },
      "RestrictionResult": {
        "title": "RestrictionResult",
        "type": "object",
        "properties": {
          "Restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Restriction"
            },
            "description": "Restrictions of the default service.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionResult"
      },
      "RestrictionSetData": {
        "title": "RestrictionSetData",
        "required": [
          "Days",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/RestrictionType"
          },
          "ExactRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BaseRateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "RateGroupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ResourceCategoryType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceCategoryType"
              }
            ],
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Days": {
            "$ref": "#/components/schemas/DaysParameters"
          },
          "MinAdvance": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaxAdvance": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MinLength": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MaxLength": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "MinPrice": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "MaxPrice": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "MaxReservationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RestrictionSetData"
      },
      "RestrictionType": {
        "enum": [
          "Stay",
          "Start",
          "End"
        ],
        "type": "string"
      },
      "RoutingRule": {
        "title": "Routing rule",
        "required": [
          "Applicability",
          "CompanyId",
          "CompanyRelation",
          "CreatedUtc",
          "EnterpriseId",
          "Id",
          "RouteType",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the routing rule.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) routing rule is assigned to.",
            "format": "uuid"
          },
          "CompanyRelation": {
            "$ref": "#/components/schemas/RoutingRuleCompanyRelation"
          },
          "Applicability": {
            "$ref": "#/components/schemas/RoutingRuleApplicability"
          },
          "RouteType": {
            "$ref": "#/components/schemas/RoutingRuleRouteType"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) routing rule is assigned to.",
            "format": "uuid",
            "nullable": true
          },
          "SelectedStayItems": {
            "$ref": "#/components/schemas/RoutingRuleStayItems"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the routing rule in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the routing rule in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRule"
      },
      "RoutingRuleAddParameter": {
        "title": "RoutingRuleAddParameter",
        "required": [
          "Applicability",
          "CompanyId",
          "CompanyRelation",
          "RouteType",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "CompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "CompanyRelation": {
            "$ref": "#/components/schemas/RoutingRuleCompanyRelation"
          },
          "Applicability": {
            "$ref": "#/components/schemas/RoutingRuleApplicability"
          },
          "RouteType": {
            "$ref": "#/components/schemas/RoutingRuleRouteType"
          },
          "SelectedStayItems": {
            "$ref": "#/components/schemas/RoutingRuleStayItemsAddParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleAddParameter"
      },
      "RoutingRuleApplicability": {
        "enum": [
          "Always",
          "PrepaidOnly"
        ],
        "type": "string"
      },
      "RoutingRuleCompanyRelation": {
        "enum": [
          "PartnerCompany",
          "TravelAgency"
        ],
        "type": "string"
      },
      "RoutingRuleDeleteParameters": {
        "title": "RoutingRuleDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "RoutingRuleIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "RoutingRuleIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the routing rules to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleDeleteParameters"
      },
      "RoutingRuleFilterParameters": {
        "title": "RoutingRuleFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "CompanyIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).",
            "nullable": true
          },
          "RoutingRuleIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier of the [Routing rule](https://mews-systems.gitbook.io/connector-api/operations/routingrules/#routing-rule).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleFilterParameters"
      },
      "RoutingRuleResult": {
        "title": "RoutingRuleResult",
        "required": [
          "RoutingRules"
        ],
        "type": "object",
        "properties": {
          "RoutingRules": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingRule"
            },
            "description": "Collection of Routing rules."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleResult"
      },
      "RoutingRuleRouteType": {
        "enum": [
          "AllStayItems",
          "SelectedStayItems"
        ],
        "type": "string"
      },
      "RoutingRuleStayItems": {
        "title": "RoutingRuleStayItems",
        "type": "object",
        "properties": {
          "Nights": {
            "type": "boolean"
          },
          "CityTax": {
            "type": "boolean"
          },
          "ProductCategoryIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Specific items to which the routing rule applies. Returns only if RouteType value is SelectedStayItems.",
        "x-schema-id": "RoutingRuleStayItems"
      },
      "RoutingRuleStayItemsAddParameters": {
        "title": "RoutingRuleStayItemsAddParameters",
        "type": "object",
        "properties": {
          "Nights": {
            "type": "boolean"
          },
          "CityTax": {
            "type": "boolean"
          },
          "ProductCategoryIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleStayItemsAddParameters"
      },
      "RoutingRuleStayItemsUpdateParameters": {
        "title": "RoutingRuleStayItemsUpdateParameters",
        "type": "object",
        "properties": {
          "Nights": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "CityTax": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "ProductCategoryIds": {
            "$ref": "#/components/schemas/GuidIEnumerableUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleStayItemsUpdateParameters"
      },
      "RoutingRuleUpdateParameters": {
        "title": "RoutingRuleUpdateParameters",
        "required": [
          "RoutingRuleId"
        ],
        "type": "object",
        "properties": {
          "RoutingRuleId": {
            "type": "string",
            "format": "uuid"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "ServiceId": {
            "$ref": "#/components/schemas/GuidUpdateValue"
          },
          "CompanyRelation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoutingRuleCompanyRelation"
              }
            ],
            "nullable": true
          },
          "Applicability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoutingRuleApplicability"
              }
            ],
            "nullable": true
          },
          "RouteType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoutingRuleRouteType"
              }
            ],
            "nullable": true
          },
          "SelectedStayItems": {
            "$ref": "#/components/schemas/RoutingRuleStayItemsUpdateParameters"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RoutingRuleUpdateParameters"
      },
      "Rule": {
        "title": "Rule",
        "required": [
          "CreatedUtc",
          "Id",
          "ServiceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the rule.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the rule is assigned to.",
            "format": "uuid"
          },
          "Conditions": {
            "$ref": "#/components/schemas/RuleConditions"
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the rule in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the rule in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Rule"
      },
      "RuleAction": {
        "title": "Rule action",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the rule action.",
            "format": "uuid"
          },
          "RuleId": {
            "type": "string",
            "description": "Unique identifier of the rule.",
            "format": "uuid"
          },
          "Data": {
            "title": "Data",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/RuleActionDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RuleActionProductData"
                  }
                ]
              }
            },
            "description": "Additional information about action."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RuleAction"
      },
      "RuleActionDiscriminator": {
        "enum": [
          "Product"
        ],
        "type": "string"
      },
      "RuleActionProductData": {
        "title": "RuleActionProductData",
        "type": "object",
        "properties": {
          "ActionType": {
            "type": "string",
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RuleActionProductData"
      },
      "RuleCondition": {
        "title": "RuleCondition",
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "nullable": true
          },
          "ConditionType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleConditionType"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RuleCondition"
      },
      "RuleConditionType": {
        "enum": [
          "Equals",
          "NotEquals"
        ],
        "type": "string"
      },
      "RuleConditions": {
        "title": "RuleConditions",
        "type": "object",
        "properties": {
          "RateId": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "RateGroupId": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "BusinessSegmentId": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "ResourceCategoryId": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "ResourceCategoryType": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "Origin": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "TravelAgencyId": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "MinimumTimeUnitCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaximumTimeUnitCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Conditions of the rule.",
        "x-schema-id": "RuleConditions"
      },
      "RuleExtent": {
        "title": "RuleExtent",
        "type": "object",
        "properties": {
          "RuleActions": {
            "type": "boolean"
          },
          "Rates": {
            "type": "boolean"
          },
          "RateGroups": {
            "type": "boolean"
          },
          "ResourceCategories": {
            "type": "boolean"
          },
          "BusinessSegments": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned.",
        "x-schema-id": "RuleExtent"
      },
      "RuleFilterParameters": {
        "title": "RuleFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "Ids": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service)."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Extent": {
            "$ref": "#/components/schemas/RuleExtent"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RuleFilterParameters"
      },
      "RuleResult": {
        "title": "RuleResult",
        "type": "object",
        "properties": {
          "Rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            },
            "description": "Rules used with reservation creations and modifications.",
            "nullable": true
          },
          "RuleActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleAction"
            },
            "description": "Rule actions applied in rules.",
            "nullable": true
          },
          "Rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "description": "Rates used in conditions.",
            "nullable": true
          },
          "RateGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateGroupOld"
            },
            "description": "Rate groups used in conditions.",
            "nullable": true
          },
          "ResourceCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategory"
            },
            "description": "Resource categories used in conditions.",
            "nullable": true
          },
          "BusinessSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessSegment"
            },
            "description": "Business segments used in conditions.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "RuleResult"
      },
      "SearchOperator": {
        "enum": [
          "And",
          "Or"
        ],
        "type": "string"
      },
      "SenderDiscriminator": {
        "enum": [
          "Application",
          "Enterprise"
        ],
        "type": "string"
      },
      "Service": {
        "title": "Service",
        "required": [
          "CreatedUtc",
          "EnterpriseId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the service.",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "description": "Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the service is still active."
          },
          "Name": {
            "type": "string",
            "description": "Name of the service.",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "EndTime": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Options": {
            "$ref": "#/components/schemas/ServiceOptions"
          },
          "Promotions": {
            "$ref": "#/components/schemas/Promotions"
          },
          "Type": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Ordering": {
            "type": "integer",
            "format": "int32"
          },
          "Data": {
            "title": "Data",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/ServiceType"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BookableServiceData"
                  },
                  {
                    "$ref": "#/components/schemas/AdditionalServiceData"
                  }
                ]
              }
            },
            "description": "Additional information about the specific service."
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of the service from external system.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the service in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the service in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "The reservable service (e.g. accommodation, parking) associated with the access token of the service scoped integration.",
        "x-schema-id": "Service"
      },
      "ServiceAvailabilityFilterParameters": {
        "title": "ServiceAvailabilityFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service) whose availability should be returned.",
            "format": "uuid"
          },
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "description": "Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "description": "End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.",
            "format": "date-time",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceAvailabilityFilterParameters"
      },
      "ServiceAvailabilityFilterParametersV20240122": {
        "title": "ServiceAvailabilityFilterParametersV20240122",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "FirstTimeUnitStartUtc",
          "LastTimeUnitStartUtc",
          "Metrics",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service) whose availability should be returned.",
            "format": "uuid"
          },
          "FirstTimeUnitStartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.",
            "format": "date-time"
          },
          "LastTimeUnitStartUtc": {
            "minLength": 1,
            "type": "string",
            "description": "End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.",
            "format": "date-time"
          },
          "Metrics": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAvailabilityMetricTypeEnum"
            },
            "description": "Set of [Service availability metrics](https://mews-systems.gitbook.io/connector-api/operations/#service-availability-metrics) to be returned."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceAvailabilityFilterParametersV20240122"
      },
      "ServiceAvailabilityResult": {
        "title": "ServiceAvailabilityResult",
        "type": "object",
        "properties": {
          "DatesUtc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "deprecated": true
          },
          "TimeUnitStartsUtc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.",
            "nullable": true
          },
          "CategoryAvailabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryAvailability"
            },
            "description": "Resource category availabilities.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceAvailabilityResult"
      },
      "ServiceAvailabilityResultV20240122": {
        "title": "ServiceAvailabilityResultV20240122",
        "required": [
          "ResourceCategoryAvailabilities",
          "TimeUnitStartsUtc"
        ],
        "type": "object",
        "properties": {
          "TimeUnitStartsUtc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.",
            "format": "date-time"
          },
          "ResourceCategoryAvailabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryAvailabilityV20240122"
            },
            "description": "Resource category availabilities."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceAvailabilityResultV20240122"
      },
      "ServiceAvailabilityUpdateData": {
        "title": "ServiceAvailabilityUpdateData",
        "required": [
          "ResourceCategoryId",
          "UnitCountAdjustment"
        ],
        "type": "object",
        "properties": {
          "FirstTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastTimeUnitStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "ResourceCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "UnitCountAdjustment": {
            "$ref": "#/components/schemas/Int32NullableUpdateValue"
          },
          "AvailabilityBlockId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceAvailabilityUpdateData"
      },
      "ServiceAvailabilityUpdateParameters": {
        "title": "ServiceAvailabilityUpdateParameters",
        "required": [
          "AccessToken",
          "AvailabilityUpdates",
          "Client",
          "ClientToken",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service) to update.",
            "format": "uuid"
          },
          "AvailabilityUpdates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceAvailabilityUpdateData"
            },
            "description": "Availability updates."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceAvailabilityUpdateParameters"
      },
      "ServiceFilterParameters": {
        "title": "ServiceFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns the resource categories for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ServiceIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceFilterParameters"
      },
      "ServiceOptions": {
        "title": "ServiceOptions",
        "type": "object",
        "properties": {
          "BillAsPackage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Options of the service.",
        "x-schema-id": "ServiceOptions"
      },
      "ServiceOrder": {
        "title": "ServiceOrder",
        "required": [
          "AccountId",
          "CreatedUtc",
          "CreatorProfileId",
          "Id",
          "Options",
          "Origin",
          "ServiceId",
          "State",
          "UpdatedUtc",
          "UpdaterProfileId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "AccountId": {
            "type": "string",
            "format": "uuid"
          },
          "AccountType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ],
            "nullable": true
          },
          "CreatorProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "UpdaterProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "BookerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/ServiceOrderState"
          },
          "Origin": {
            "$ref": "#/components/schemas/ServiceOrderOrigin"
          },
          "CommanderOrigin": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceOrderCommanderOrigin"
              }
            ],
            "nullable": true
          },
          "OriginDetails": {
            "type": "string",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "CancelledUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "VoucherId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "BusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "LinkedReservationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/ServiceOrderOptions"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrder"
      },
      "ServiceOrderCancellationReason": {
        "enum": [
          "Other",
          "ConfirmationMissed",
          "BookedElsewhere",
          "ForceMajeure",
          "GuestComplaint",
          "NoShow",
          "PriceTooHigh",
          "ServiceNotAvailable",
          "InputError",
          "InvalidPayment",
          "TravelAgency",
          "RequestedByGuest",
          "Update",
          "BookingAbandoned",
          "RequestedByBooker"
        ],
        "type": "string"
      },
      "ServiceOrderCommanderOrigin": {
        "enum": [
          "InPerson",
          "Channel",
          "Phone",
          "Email",
          "Website",
          "Message",
          "CallCenter"
        ],
        "type": "string"
      },
      "ServiceOrderNoteAddParameters": {
        "title": "ServiceOrderNoteAddParameters",
        "required": [
          "ServiceOrderId",
          "Text"
        ],
        "type": "object",
        "properties": {
          "ServiceOrderId": {
            "type": "string",
            "format": "uuid"
          },
          "Text": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteAddParameters"
      },
      "ServiceOrderNoteAdditionResult": {
        "title": "ServiceOrderNoteAdditionResult",
        "required": [
          "ServiceOrderNotes"
        ],
        "type": "object",
        "properties": {
          "ServiceOrderNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderNote"
            },
            "description": "Added service order notes."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteAdditionResult"
      },
      "ServiceOrderNoteDeleteParameters": {
        "title": "ServiceOrderNoteDeleteParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "ServiceOrderNoteIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceOrderNoteIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the service order notes to be deleted."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteDeleteParameters"
      },
      "ServiceOrderNoteFilterParameters": {
        "title": "ServiceOrderNoteFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "ServiceOrderIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "ServiceOrderIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Service order](https://mews-systems.gitbook.io/connector-api/operations/#service-order). Reservation IDs or Order IDs can be used as service order identifiers."
          },
          "ServiceOrderNoteIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Service order notes](https://mews-systems.gitbook.io/connector-api/operations/#service-order-note). Use this property if you want to fetch specific service order notes.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteFilterParameters"
      },
      "ServiceOrderNoteResult": {
        "title": "ServiceOrderNoteResult",
        "required": [
          "ServiceOrderNotes"
        ],
        "type": "object",
        "properties": {
          "ServiceOrderNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderNote"
            },
            "description": "The collection of service order notes."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest service order note returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older service order notes.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteResult"
      },
      "ServiceOrderNoteUpdateParameters": {
        "title": "ServiceOrderNoteUpdateParameters",
        "required": [
          "ServiceOrderNoteId"
        ],
        "type": "object",
        "properties": {
          "ServiceOrderNoteId": {
            "type": "string",
            "format": "uuid"
          },
          "Text": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteUpdateParameters"
      },
      "ServiceOrderNoteUpdateResult": {
        "title": "ServiceOrderNoteUpdateResult",
        "required": [
          "ServiceOrderNotes"
        ],
        "type": "object",
        "properties": {
          "ServiceOrderNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderNote"
            },
            "description": "Updated service order notes."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderNoteUpdateResult"
      },
      "ServiceOrderOptions": {
        "title": "Service Order Options",
        "required": [
          "AllCompanionsCheckedIn",
          "AnyCompanionCheckedIn",
          "ConnectorCheckIn",
          "OwnerCheckedIn"
        ],
        "type": "object",
        "properties": {
          "OwnerCheckedIn": {
            "type": "boolean",
            "description": "Owner of the reservation checked in."
          },
          "AllCompanionsCheckedIn": {
            "type": "boolean",
            "description": "All companions of the reservation checked in."
          },
          "AnyCompanionCheckedIn": {
            "type": "boolean",
            "description": "Any of the companions of the reservation checked in."
          },
          "ConnectorCheckIn": {
            "type": "boolean",
            "description": "Check in was done via Connector API."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceOrderOptions"
      },
      "ServiceOrderOrigin": {
        "enum": [
          "Distributor",
          "ChannelManager",
          "Commander",
          "Import",
          "Connector",
          "Navigator"
        ],
        "type": "string"
      },
      "ServiceOrderState": {
        "enum": [
          "Inquired",
          "Confirmed",
          "Started",
          "Processed",
          "Canceled",
          "Optional",
          "Requested"
        ],
        "type": "string"
      },
      "ServiceResult": {
        "title": "ServiceResult",
        "type": "object",
        "properties": {
          "Services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            },
            "description": "Services offered by the enterprise.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "ServiceResult"
      },
      "ServiceType": {
        "enum": [
          "Reservable",
          "Orderable",
          "Bookable",
          "Additional"
        ],
        "type": "string"
      },
      "SetRestrictionParameters": {
        "title": "SetRestrictionParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Data",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) restrictions will be set in.",
            "format": "uuid"
          },
          "Data": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestrictionSetData"
            },
            "description": "Parameters of restrictions."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SetRestrictionParameters"
      },
      "Sex": {
        "enum": [
          "Male",
          "Female"
        ],
        "type": "string"
      },
      "Source": {
        "title": "Source",
        "required": [
          "Code",
          "Id",
          "Name",
          "Type",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the source.",
            "format": "uuid"
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the source."
          },
          "Type": {
            "$ref": "#/components/schemas/SourceType"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time when the source was last updated, expressed in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "Code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Source"
      },
      "SourceAssignment": {
        "title": "Source assignment",
        "required": [
          "Id",
          "IsPrimary",
          "ReservationGroupId",
          "SourceId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the source assignement.",
            "format": "uuid"
          },
          "ReservationGroupId": {
            "type": "string",
            "description": "Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).",
            "format": "uuid"
          },
          "SourceId": {
            "type": "string",
            "description": "Unique identifier of the [Source](https://mews-systems.gitbook.io/connector-api/operations/sources/#source).",
            "format": "uuid"
          },
          "IsPrimary": {
            "type": "boolean",
            "description": "Specifies the primary source for the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group)."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SourceAssignment"
      },
      "SourceAssignmentFilterParameters": {
        "title": "SourceAssignmentFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "ReservationGroupIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SourceAssignmentFilterParameters"
      },
      "SourceAssignmentResult": {
        "title": "SourceAssignmentResult",
        "required": [
          "SourceAssignments"
        ],
        "type": "object",
        "properties": {
          "SourceAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceAssignment"
            },
            "description": "Assignments between reservation group and sources."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest source assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older source assignments.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SourceAssignmentResult"
      },
      "SourceFilterParameters": {
        "title": "SourceFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "SourceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Sources](https://mews-systems.gitbook.io/connector-api/operations/sources/#source).",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SourceFilterParameters"
      },
      "SourceResult": {
        "title": "SourceResult",
        "required": [
          "Sources"
        ],
        "type": "object",
        "properties": {
          "Sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "description": "The reservation sources."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the last and hence oldest source returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older sources.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SourceResult"
      },
      "SourceType": {
        "enum": [
          "OnlineTravelAgency",
          "CentralReservationSystem",
          "GlobalDistributionSystem",
          "AlternativeDistributionSystem",
          "SalesAndCateringSystem",
          "PropertyManagementSystem",
          "TourOperatorSystem",
          "OnlineBookingEngine",
          "Kiosk",
          "Agent"
        ],
        "type": "string"
      },
      "SpaceData": {
        "title": "SpaceData",
        "required": [
          "FloorNumber"
        ],
        "type": "object",
        "properties": {
          "FloorNumber": {
            "minLength": 1,
            "type": "string"
          },
          "LocationNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SpaceData"
      },
      "StringUpdateValue": {
        "title": "StringUpdateValue",
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "StringUpdateValue"
      },
      "SurchargeConfiguration": {
        "title": "SurchargeConfiguration",
        "required": [
          "SurchargeFees"
        ],
        "type": "object",
        "properties": {
          "SurchargeFees": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "SurchargeServiceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "SurchargeTaxCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "SurchargeConfiguration"
      },
      "Task": {
        "title": "Task",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "EnterpriseId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServiceOrderId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "nullable": true
          },
          "DeadlineUtc": {
            "type": "string",
            "nullable": true
          },
          "ClosedUtc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Task"
      },
      "TaskAddParameters": {
        "title": "TaskAddParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "DeadlineUtc",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "Unique identifier of the [Department](https://mews-systems.gitbook.io/connector-api/operations/departments/#department) the task is addressed to.",
            "format": "uuid",
            "nullable": true
          },
          "ServiceOrderId": {
            "type": "string",
            "description": "Unique identifier of the service order (reservation or product service order) the task is linked with.",
            "format": "uuid",
            "nullable": true
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name (or title) of the task."
          },
          "Description": {
            "type": "string",
            "description": "Further decription of the task.",
            "nullable": true
          },
          "DeadlineUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Deadline of the task in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaskAddParameters"
      },
      "TaskFilterParameters": {
        "title": "TaskFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "CreatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ClosedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "DeadlineUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "TaskIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Tasks](https://mews-systems.gitbook.io/connector-api/operations/#task).",
            "nullable": true
          },
          "DepartmentIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Departments](https://mews-systems.gitbook.io/connector-api/operations/departments/#department). Not possible to be used standalone, needs to be used in combination with other filters.",
            "nullable": true
          },
          "ServiceOrderIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of service orders (reservations or product service orders).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaskFilterParameters"
      },
      "TaskResult": {
        "title": "TaskResult",
        "type": "object",
        "properties": {
          "Tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            },
            "description": "The filtered tasks.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaskResult"
      },
      "TaxBreakdown": {
        "title": "TaxBreakdown",
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxBreakdownItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxBreakdown"
      },
      "TaxBreakdownItem": {
        "title": "TaxBreakdownItem",
        "type": "object",
        "properties": {
          "TaxRateCode": {
            "type": "string",
            "nullable": true
          },
          "NetValue": {
            "type": "number",
            "format": "double"
          },
          "TaxValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxBreakdownItem"
      },
      "TaxEnvironment": {
        "title": "Tax environment",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Code of the tax environment.",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "description": "ISO 3166-1 alpha-3 code of associated country, e.g. USA or GBR.",
            "nullable": true
          },
          "ValidityStartUtc": {
            "type": "string",
            "description": "If specified, marks the start of the validity interval in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "ValidityEndUtc": {
            "type": "string",
            "description": "If specified, marks the end of the validity interval in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "TaxationCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Codes of the [Taxations](https://mews-systems.gitbook.io/connector-api/operations/#taxation) that are used by this environment.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxEnvironment"
      },
      "TaxEnvironmentResult": {
        "title": "TaxEnvironmentResult",
        "type": "object",
        "properties": {
          "TaxEnvironments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxEnvironment"
            },
            "description": "The supported tax environments.",
            "nullable": true
          },
          "Taxations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OldTaxation"
            },
            "nullable": true,
            "deprecated": true
          },
          "TaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxEnvironmentResult"
      },
      "TaxRate": {
        "title": "Tax rate",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Code of the tax rate. To be used when posting revenue items which should be accompanied by the tax rate(s) applicable to the nature of the item and the tax environment.",
            "nullable": true
          },
          "TaxationCode": {
            "type": "string",
            "description": "Code of the [Taxation](https://mews-systems.gitbook.io/connector-api/operations/#taxation) the rate is part of.",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          },
          "ValidityInvervalsUtc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateTimeIntervalUtc"
            },
            "nullable": true
          },
          "Strategy": {
            "title": "Strategy",
            "properties": {
              "discriminator": {
                "$ref": "#/components/schemas/TaxRateStrategyDiscriminator"
              },
              "value": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RelativeTaxRateStrategy"
                  },
                  {
                    "$ref": "#/components/schemas/FlatTaxRateStrategy"
                  },
                  {
                    "$ref": "#/components/schemas/DependentTaxRateStrategy"
                  }
                ]
              }
            },
            "description": "Tax strategy type, e.g. relative, flat or dependent."
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxRate"
      },
      "TaxRateStrategyDiscriminator": {
        "enum": [
          "Relative",
          "Flat",
          "Dependent"
        ],
        "type": "string"
      },
      "TaxValue": {
        "title": "TaxValue",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxValue"
      },
      "Taxation": {
        "title": "Taxation",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Code of the taxation.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name of the taxation.",
            "nullable": true
          },
          "LocalName": {
            "type": "string",
            "description": "Local name of the taxation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Taxation"
      },
      "TaxationResult": {
        "title": "TaxationResult",
        "type": "object",
        "properties": {
          "Taxations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Taxation"
            },
            "description": "The supported taxations.",
            "nullable": true
          },
          "TaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            },
            "description": "The supported tax rates.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TaxationResult"
      },
      "TimeFilterInterval": {
        "title": "TimeFilterInterval",
        "type": "object",
        "properties": {
          "StartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TimeFilterInterval"
      },
      "TokenizedCreditCardParameters": {
        "title": "TokenizedCreditCardParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "CreditCardData",
          "CustomerId"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomerId": {
            "type": "string",
            "description": "Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).",
            "format": "uuid"
          },
          "CreditCardData": {
            "$ref": "#/components/schemas/CreditCardData"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TokenizedCreditCardParameters"
      },
      "TravelAgencyContract": {
        "title": "Travel agency contract",
        "required": [
          "CompanyId",
          "CreatedUtc",
          "Id",
          "IsActive",
          "ServiceId",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the contract.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the contract is related to.",
            "format": "uuid"
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of the contracted [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Whether the contract is still active."
          },
          "CommissionIncluded": {
            "type": "boolean",
            "description": "Whether commission of the travel agency is included in the rate. When CommissionIncluded is not provided in the response, that means commission is unspecified, when set to true it means the the commission is included in the rate and false means the commission in not included in the rate.",
            "nullable": true
          },
          "Commission": {
            "type": "number",
            "description": "Commission of the travel agency.",
            "format": "double",
            "nullable": true
          },
          "ChannelManagerAbsoluteAdjustment": {
            "type": "number",
            "description": "Flat fee added to (or subtracted from) the reservation price when coming from Channel Managers.",
            "format": "double",
            "nullable": true
          },
          "ChannelManagerRelativeAdjustment": {
            "type": "number",
            "description": "Percentage of the reservation price added to (or subtracted from) price when coming from Channel Managers.",
            "format": "double",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/TravelAgencyContractOptions"
          },
          "AccountingCode": {
            "type": "string",
            "description": "Accounting code of the travel agency contract.",
            "nullable": true
          },
          "InvoiceDueInterval": {
            "type": "string",
            "description": "The maximum time, when the invoice has to be be paid in ISO 8601 duration format.",
            "nullable": true
          },
          "ChannelManagerBusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ContactPerson": {
            "type": "string",
            "description": "Contact person of the travel agency.",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "description": "Contact email of the travel agency.",
            "format": "email",
            "nullable": true
          },
          "AdditionalContactInfo": {
            "type": "string",
            "description": "Additional contact info of the travel agency.",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Additional notes of the travel agency contract.",
            "nullable": true
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the travel agency contract in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the travel agency contract in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TravelAgencyContract"
      },
      "TravelAgencyContractAddParameters": {
        "title": "TravelAgencyContractAddParameters",
        "required": [
          "CompanyId",
          "ServiceId"
        ],
        "type": "object",
        "properties": {
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "CommissionIncluded": {
            "type": "boolean",
            "nullable": true
          },
          "Commission": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ChannelManagerBusinessSegmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ChannelManagerAbsoluteAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ChannelManagerRelativeAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Options": {
            "$ref": "#/components/schemas/TravelAgencyContractOptions"
          },
          "AccountingCode": {
            "type": "string",
            "nullable": true
          },
          "InvoiceDueInterval": {
            "type": "string",
            "nullable": true
          },
          "ContactPerson": {
            "type": "string",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "AdditionalContactInfo": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TravelAgencyContractAddParameters"
      },
      "TravelAgencyContractOptions": {
        "title": "TravelAgencyContractOptions",
        "type": "object",
        "properties": {
          "IncludeCancellationFeeInCommissionEstimate": {
            "type": "boolean"
          },
          "SkipAutomaticSettlement": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Options of the travel agency contract.",
        "x-schema-id": "TravelAgencyContractOptions"
      },
      "TravelAgencyContractOptionsParameters": {
        "title": "TravelAgencyContractOptionsParameters",
        "type": "object",
        "properties": {
          "IncludeCancellationFeeInCommissionEstimate": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          },
          "SkipAutomaticSettlement": {
            "$ref": "#/components/schemas/BooleanUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TravelAgencyContractOptionsParameters"
      },
      "TravelAgencyContractUpdateParameters": {
        "title": "TravelAgencyContractUpdateParameters",
        "required": [
          "TravelAgencyContractId"
        ],
        "type": "object",
        "properties": {
          "TravelAgencyContractId": {
            "type": "string",
            "format": "uuid"
          },
          "CommissionIncluded": {
            "$ref": "#/components/schemas/BooleanNullableUpdateValue"
          },
          "Commission": {
            "$ref": "#/components/schemas/DecimalNullableUpdateValue"
          },
          "ChannelManagerBusinessSegmentId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "ChannelManagerAbsoluteAdjustment": {
            "$ref": "#/components/schemas/DecimalNullableUpdateValue"
          },
          "ChannelManagerRelativeAdjustment": {
            "$ref": "#/components/schemas/DecimalNullableUpdateValue"
          },
          "Options": {
            "$ref": "#/components/schemas/TravelAgencyContractOptionsParameters"
          },
          "AccountingCode": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "InvoiceDueInterval": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ContactPerson": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ContactEmail": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "AdditionalContactInfo": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Notes": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "TravelAgencyContractUpdateParameters"
      },
      "Unit": {
        "type": "object",
        "additionalProperties": false
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "ImageUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "LastSuccessfulSignInUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "User"
      },
      "Voucher": {
        "title": "Voucher",
        "required": [
          "ActivityState",
          "CreatedUtc",
          "Id",
          "Name",
          "ServiceId",
          "Type",
          "UpdatedUtc"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of voucher.",
            "format": "uuid"
          },
          "ServiceId": {
            "type": "string",
            "description": "Unique identifier of [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the voucher belongs to.",
            "format": "uuid"
          },
          "Name": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Internal name of the voucher."
          },
          "CreatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Creation date and time of the voucher in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "UpdatedUtc": {
            "minLength": 1,
            "type": "string",
            "description": "Last update date and time of the voucher in UTC timezone in ISO 8601 format.",
            "format": "date-time"
          },
          "Type": {
            "$ref": "#/components/schemas/VoucherType"
          },
          "ActivityState": {
            "$ref": "#/components/schemas/ActivityState"
          },
          "CompanyId": {
            "type": "string",
            "description": "Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) the voucher is related to.",
            "format": "uuid",
            "nullable": true
          },
          "TravelAgencyId": {
            "type": "string",
            "description": "Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) with [Travel agency contract](https://mews-systems.gitbook.io/connector-api/operations/companycontracts/#travel-agency-contract) the voucher is related to.",
            "format": "uuid",
            "nullable": true
          },
          "OccupiableIntervalStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OccupiableIntervalEndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifier of the voucher from external system.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "Voucher"
      },
      "VoucherAddParameters": {
        "title": "VoucherAddParameters",
        "required": [
          "Name",
          "ServiceId",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ServiceId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "Type": {
            "$ref": "#/components/schemas/VoucherType"
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "AssignedRateIds": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "OccupiableIntervalStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OccupiableIntervalEndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExternalIdentifier": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherAddParameters"
      },
      "VoucherAssignment": {
        "title": "Voucher assignment",
        "type": "object",
        "properties": {
          "VoucherId": {
            "type": "string",
            "description": "Unique identifier of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher).",
            "format": "uuid"
          },
          "RateId": {
            "type": "string",
            "description": "Unique identifier of [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate) the voucher is assigned with.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherAssignment"
      },
      "VoucherCode": {
        "title": "Voucher code",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier of the voucher code.",
            "format": "uuid"
          },
          "VoucherId": {
            "type": "string",
            "description": "Unique identifier of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher) the code belongs to.",
            "format": "uuid"
          },
          "Value": {
            "type": "string",
            "description": "Value of voucher code used by customers.",
            "nullable": true
          },
          "ValidityStartUtc": {
            "type": "string",
            "description": "If specified, marks the beginning of interval in which the code can be used.",
            "nullable": true
          },
          "ValidityEndUtc": {
            "type": "string",
            "description": "If specified, marks the end of interval in which the code can be used.",
            "nullable": true
          },
          "CreatedUtc": {
            "type": "string",
            "description": "Creation date and time of the voucher in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "UpdatedUtc": {
            "type": "string",
            "description": "Last update date and time of the voucher in UTC timezone in ISO 8601 format.",
            "nullable": true
          },
          "ActivityState": {
            "type": "string",
            "description": "Whether voucher code is active or deleted.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherCode"
      },
      "VoucherCodeAddParameters": {
        "title": "VoucherCodeAddParameters",
        "required": [
          "Value",
          "VoucherId"
        ],
        "type": "object",
        "properties": {
          "VoucherId": {
            "type": "string",
            "format": "uuid"
          },
          "Value": {
            "minLength": 1,
            "type": "string"
          },
          "ValidityStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ValidityEndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherCodeAddParameters"
      },
      "VoucherCodeFilterParameters": {
        "title": "VoucherCodeFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Limitation",
          "VoucherIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "VoucherCodeIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the voucher codes.",
            "nullable": true
          },
          "VoucherIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of vouchers."
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherCodeFilterParameters"
      },
      "VoucherCodeResult": {
        "title": "VoucherCodeResult",
        "required": [
          "VoucherCodes"
        ],
        "type": "object",
        "properties": {
          "VoucherCodes": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherCode"
            },
            "description": "Information about voucher codes used by customers."
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherCodeResult"
      },
      "VoucherExtent": {
        "title": "VoucherExtent",
        "type": "object",
        "properties": {
          "Vouchers": {
            "type": "boolean"
          },
          "VoucherCodes": {
            "type": "boolean",
            "deprecated": true
          },
          "VoucherAssignments": {
            "type": "boolean"
          },
          "Companies": {
            "type": "boolean",
            "deprecated": true
          },
          "Rates": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Extent of data to be returned. Whether only specific voucher info should be returned or related items as well.",
        "x-schema-id": "VoucherExtent"
      },
      "VoucherFilterParameters": {
        "title": "VoucherFilterParameters",
        "required": [
          "AccessToken",
          "Client",
          "ClientToken",
          "Extent",
          "Limitation",
          "ServiceIds"
        ],
        "type": "object",
        "properties": {
          "Client": {
            "minLength": 1,
            "type": "string",
            "description": "Name and version of the client application."
          },
          "LanguageCode": {
            "type": "string",
            "nullable": true
          },
          "CultureCode": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Access token of the client application."
          },
          "MaskedAccessToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ClientToken": {
            "minLength": 1,
            "type": "string",
            "description": "Token identifying the client application."
          },
          "MaskedClientToken": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Limitation": {
            "$ref": "#/components/schemas/Limitation"
          },
          "EnterpriseIds": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). If not specified, the operation returns data for all enterprises within scope of the Access Token.",
            "nullable": true
          },
          "Extent": {
            "$ref": "#/components/schemas/VoucherExtent"
          },
          "ServiceIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) where the vouchers belong to."
          },
          "VoucherIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifiers of vouchers.",
            "nullable": true
          },
          "VoucherCodeValues": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Value of voucher codes used by customers.",
            "nullable": true
          },
          "ActivityStates": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Whether to return only active, only deleted or both records.",
            "nullable": true
          },
          "UpdatedUtc": {
            "$ref": "#/components/schemas/TimeFilterInterval"
          },
          "ExternalIdentifiers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher) from external systems.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherFilterParameters"
      },
      "VoucherResult": {
        "title": "VoucherResult",
        "type": "object",
        "properties": {
          "Vouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            },
            "description": "Details about vouchers added to the system.",
            "nullable": true
          },
          "VoucherCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherCode"
            },
            "description": "Information about voucher codes used by customers.",
            "nullable": true
          },
          "VoucherAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherAssignment"
            },
            "description": "The assignments between vouchers and [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).",
            "nullable": true
          },
          "Rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            },
            "description": "The assigned rates.",
            "nullable": true
          },
          "Companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "description": "The related companies and travel agencies.",
            "nullable": true
          },
          "Cursor": {
            "type": "string",
            "description": "Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherResult"
      },
      "VoucherType": {
        "enum": [
          "Public",
          "PartnerCompany",
          "TravelAgency"
        ],
        "type": "string"
      },
      "VoucherUpdateParameters": {
        "title": "VoucherUpdateParameters",
        "required": [
          "VoucherId"
        ],
        "type": "object",
        "properties": {
          "VoucherId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "Type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoucherType"
              }
            ],
            "nullable": true
          },
          "CompanyId": {
            "$ref": "#/components/schemas/GuidNullableUpdateValue"
          },
          "AssignedRateIds": {
            "$ref": "#/components/schemas/GuidIEnumerableUpdateValue"
          },
          "OccupiableIntervalStartUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "OccupiableIntervalEndUtc": {
            "$ref": "#/components/schemas/StringUpdateValue"
          },
          "ExternalIdentifier": {
            "$ref": "#/components/schemas/StringUpdateValue"
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherUpdateParameters"
      },
      "VoucherWriteResult": {
        "title": "VoucherWriteResult",
        "type": "object",
        "properties": {
          "Vouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            },
            "description": "Details about vouchers added to the system.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-schema-id": "VoucherWriteResult"
      }
    }
  }
}